{"classname":"DrapiServer","comment":"Class for configuring sessions with a DRAPI server.","valuetype":"","filenamebase":"DrapiServer_ObjectClass","fqnprefix":"DrapiVSE","qn":"DrapiServer","codesample":"","signaturecode":3072,"instancecode":1024,"classtype":"Base","projectid":"1CE507407C8F5ECC85258C7E00690863","version":3,"classid":"CFD3C80453F7DAA785258C7E00691BBD","lsxclassid":1,"signature":"Public Class DrapiServer","modifiers":"Public","classname":"DrapiServer","parentclassname":"None","constructorsignature":"Function New() As DrapiServer","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Class for configuring sessions with a DRAPI server.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Class for configuring sessions with a DRAPI server.","inlinecomment":" \t &apos; Class for configuring sessions with a DRAPI server.","codesamplehtml":"", "methods":[{"label":"CreateRequest","comment":"Creates a DrapiRequest object to make requests to the configured server.","valuetype":"DrapiRequest","filenamebase":"CreateRequest_Method","fqnprefix":"DrapiVSE.DrapiServer","qn":"CreateRequest","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(ScopeName As String)","signature":"Function CreateRequest(ScopeName As String) As DrapiRequest","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Creates a DrapiRequest object to make requests to the configured server.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Creates a DrapiRequest object to make requests to the configured server.","inlinecomment":" \t &apos; Creates a DrapiRequest object to make requests to the configured server.","parentclassname":"DrapiServer","codesamplehtml":"", "signatureelements":["Function"], "arguments":[{"label":"ScopeName","comment":"Scope to use for the request. Domino databases are made known through a scope that defines access to forms, fields, views, and agents.","valuetype":"String","filenamebase":"ScopeName_ValuedElement","fqnprefix":"DrapiVSEDrapiServerCreateRequest","qn":"ScopeName","argumentindex":1,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Scope to use for the request. Domino databases are made known through a scope that defines access to forms, fields, views, and agents.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Scope to use for the request. Domino databases are made known through a scope that defines access to forms, fields, views, and agents.","inlinecomment":" \t &apos; Scope to use for the request. Domino databases are made known through a scope that defines access to forms, fields, views, and agents.", "attributes":["CONST","OPTIONAL"]}]},{"label":"Login","comment":"Logs into a Domino REST API server and sets this DrapiServer&amp;apos;s JWT token to the one provided by the server.","valuetype":"DrapiResponse","filenamebase":"Login_Method","fqnprefix":"DrapiVSE.DrapiServer","qn":"Login","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(User As String, Password As String)","signature":"Function Login(User As String, Password As String) As DrapiResponse","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Logs into a Domino REST API server and sets this DrapiServer&amp;apos;s JWT token to the one provided by the server.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Logs into a Domino REST API server and sets this DrapiServer&amp;apos;s JWT token to the one provided by the server.","inlinecomment":" \t &apos; Logs into a Domino REST API server and sets this DrapiServer&amp;apos;s JWT token to the one provided by the server.","parentclassname":"DrapiServer","codesamplehtml":"", "signatureelements":["Function"], "arguments":[{"label":"User","comment":"User name of the account to log into.","valuetype":"String","filenamebase":"User_ValuedElement","fqnprefix":"DrapiVSEDrapiServerLogin","qn":"User","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;User name of the account to log into.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"User name of the account to log into.","inlinecomment":" \t &apos; User name of the account to log into."},{"label":"Password","comment":"Password of the account.","valuetype":"String","filenamebase":"Password_ValuedElement","fqnprefix":"DrapiVSEDrapiServerLogin","qn":"Password","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Password of the account.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Password of the account.","inlinecomment":" \t &apos; Password of the account."}]},{"label":"Logout","comment":"Logs out the current user from the Domino REST API server, invalidating the JWT token.","valuetype":"DrapiResponse","filenamebase":"Logout_Method","fqnprefix":"DrapiVSE.DrapiServer","qn":"Logout","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"()","signature":"Function Logout() As DrapiResponse","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Logs out the current user from the Domino REST API server, invalidating the JWT token.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Logs out the current user from the Domino REST API server, invalidating the JWT token.","inlinecomment":" \t &apos; Logs out the current user from the Domino REST API server, invalidating the JWT token.","parentclassname":"DrapiServer","codesamplehtml":"", "signatureelements":["Function"]},{"label":"New","comment":"Constructor.","valuetype":"DrapiServer","filenamebase":"New_Method","fqnprefix":"DrapiVSE.DrapiServer","qn":"New","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"()","signature":"Function New() As DrapiServer","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Constructor.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Constructor.","inlinecomment":" \t &apos; Constructor.","parentclassname":"DrapiServer","codesamplehtml":"", "signatureelements":["Function"]},{"label":"RegisterVSEPath","comment":"Internal method used by the runtime.","valuetype":"Boolean","filenamebase":"RegisterVSEPath_Method","fqnprefix":"DrapiVSE.DrapiServer","qn":"RegisterVSEPath","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"()","signature":"Function RegisterVSEPath() As Boolean","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Internal method used by the runtime.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Internal method used by the runtime.","inlinecomment":" \t &apos; Internal method used by the runtime.","parentclassname":"DrapiServer","codesamplehtml":"", "signatureelements":["Function"]},{"label":"Connected","comment":"Set to True if this DrapiServer&amp;apos;s Login method was successfully called.","valuetype":"Boolean","filenamebase":"Connected_Method","fqnprefix":"DrapiVSE.DrapiServer","qn":"Get.Connected","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get Connected As Boolean","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Set to True if this DrapiServer&amp;apos;s Login method was successfully called.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Set to True if this DrapiServer&amp;apos;s Login method was successfully called.","inlinecomment":" \t &apos; Set to True if this DrapiServer&amp;apos;s Login method was successfully called.","parentclassname":"DrapiServer","codesamplehtml":"", "attributes":["READ_ONLY","GET_CONST","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"JWTToken","comment":"The JWT token string (encrypted and Base-64 encoded) used to log in to the DRAPI server. The property will be set automatically if a token is provided in the script invocation, or when the script sucessfully executes a Login call. This propery will need to be set for most methods of DrapiRequest associated with this server object.","valuetype":"String","filenamebase":"JWTToken_Method","fqnprefix":"DrapiVSE.DrapiServer","qn":"Get.JWTToken","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get JWTToken As String","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;The JWT token string (encrypted and Base-64 encoded) used to log in to the DRAPI server. The property will be set automatically if a token is provided in the script invocation, or when the script sucessfully executes a Login call. This propery will need to be set for most methods of DrapiRequest associated with this server object.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"The JWT token string (encrypted and Base-64 encoded) used to log in to the DRAPI server. The property will be set automatically if a token is provided in the script invocation, or when the script sucessfully executes a Login call. This propery will need to be set for most methods of DrapiRequest associated with this server object.","inlinecomment":" \t &apos; The JWT token string (encrypted and Base-64 encoded) used to log in to the DRAPI server. The property will be set automatically if a token is provided in the script invocation, or when the script sucessfully executes a Login call. This propery will need to be set for most methods of DrapiRequest associated with this server object.","parentclassname":"DrapiServer","codesamplehtml":"", "attributes":["SET_CONST"], "signatureelements":["Property","Get"]},{"label":"LibCurlVersion","comment":"Version of libcurl used by this VSE for HTTP requests.","valuetype":"String","filenamebase":"LibCurlVersion_Method","fqnprefix":"DrapiVSE.DrapiServer","qn":"Get.LibCurlVersion","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get LibCurlVersion As String","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Version of libcurl used by this VSE for HTTP requests.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Version of libcurl used by this VSE for HTTP requests.","inlinecomment":" \t &apos; Version of libcurl used by this VSE for HTTP requests.","parentclassname":"DrapiServer","codesamplehtml":"", "attributes":["READ_ONLY","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"ServerURL","comment":"Base URL for Domino REST API calls, protocol + server + &amp;quot;api/v1&amp;quot;, e.g. &amp;quot;http://localhost:8880/api/v1&amp;quot; to connect to a locally running Domino server.","valuetype":"String","filenamebase":"ServerURL_Method","fqnprefix":"DrapiVSE.DrapiServer","qn":"Get.ServerURL","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get ServerURL As String","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Base URL for Domino REST API calls, protocol + server + &amp;quot;api/v1&amp;quot;, e.g. &amp;quot;http://localhost:8880/api/v1&amp;quot; to connect to a locally running Domino server.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Base URL for Domino REST API calls, protocol + server + &amp;quot;api/v1&amp;quot;, e.g. &amp;quot;http://localhost:8880/api/v1&amp;quot; to connect to a locally running Domino server.","inlinecomment":" \t &apos; Base URL for Domino REST API calls, protocol + server + &amp;quot;api/v1&amp;quot;, e.g. &amp;quot;http://localhost:8880/api/v1&amp;quot; to connect to a locally running Domino server.","parentclassname":"DrapiServer","codesamplehtml":"", "attributes":["SET_CONST"], "signatureelements":["Property","Get"]},{"label":"SSLHostValidation","comment":"Turn on or off SSL host validation. Without a valid certificate or unless SSLHostValidation is set to False, the request will return a status 0, if the server requires SSL verification. Settng SSLHostValidation to false can be used for internal HTTPS URLs on servers with self-signed certs.\nDefault value is True.","valuetype":"Boolean","filenamebase":"SSLHostValidation_Method","fqnprefix":"DrapiVSE.DrapiServer","qn":"Get.SSLHostValidation","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get SSLHostValidation As Boolean","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Turn on or off SSL host validation. Without a valid certificate or unless SSLHostValidation is set to False, the request will return a status 0, if the server requires SSL verification. Settng SSLHostValidation to false can be used for internal HTTPS URLs on servers with self-signed certs.&lt;br /&gt;Default value is True.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Turn on or off SSL host validation. Without a valid certificate or unless SSLHostValidation is set to False, the request will return a status 0, if the server requires SSL verification. Settng SSLHostValidation to false can be used for internal HTTPS URLs on servers with self-signed certs.&lt;br /&gt;Default value is True.","inlinecomment":" \t &apos; Turn on or off SSL host validation. Without a valid certificate or unless SSLHostValidation is set to False, the request will return a status 0, if the server requires SSL verification. Settng SSLHostValidation to false can be used for internal HTTPS URLs on servers with self-signed certs.\nDefault value is True.","parentclassname":"DrapiServer","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"VerboseLogging","comment":"Whether this Server should create a .log file with verbose logging output from libcurl when a request to the DRAPI server is made. This is helpful when debugging networking issues related to VPN&amp;apos;s, proxies, self-signed SSL certificates, etc.","valuetype":"Boolean","filenamebase":"VerboseLogging_Method","fqnprefix":"DrapiVSE.DrapiServer","qn":"Get.VerboseLogging","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get VerboseLogging As Boolean","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Whether this Server should create a .log file with verbose logging output from libcurl when a request to the DRAPI server is made. This is helpful when debugging networking issues related to VPN&amp;apos;s, proxies, self-signed SSL certificates, etc.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Whether this Server should create a .log file with verbose logging output from libcurl when a request to the DRAPI server is made. This is helpful when debugging networking issues related to VPN&amp;apos;s, proxies, self-signed SSL certificates, etc.","inlinecomment":" \t &apos; Whether this Server should create a .log file with verbose logging output from libcurl when a request to the DRAPI server is made. This is helpful when debugging networking issues related to VPN&amp;apos;s, proxies, self-signed SSL certificates, etc.","parentclassname":"DrapiServer","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"VSEVersion","comment":"Release version of this VSE.","valuetype":"String","filenamebase":"VSEVersion_Method","fqnprefix":"DrapiVSE.DrapiServer","qn":"Get.VSEVersion","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get VSEVersion As String","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Release version of this VSE.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Release version of this VSE.","inlinecomment":" \t &apos; Release version of this VSE.","parentclassname":"DrapiServer","codesamplehtml":"", "attributes":["READ_ONLY","GET_CONST","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"JWTToken","comment":"The JWT token string (encrypted and Base-64 encoded) used to log in to the DRAPI server. The property will be set automatically if a token is provided in the script invocation, or when the script sucessfully executes a Login call. This propery will need to be set for most methods of DrapiRequest associated with this server object.","valuetype":"String","filenamebase":"JWTToken_Method","fqnprefix":"DrapiVSE.DrapiServer","qn":"Set.JWTToken","codesample":"","signaturecode":260,"instancecode":256,"argumentsuffix":"","signature":"Property Set JWTToken As String","modifiers":"Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;The JWT token string (encrypted and Base-64 encoded) used to log in to the DRAPI server. The property will be set automatically if a token is provided in the script invocation, or when the script sucessfully executes a Login call. This propery will need to be set for most methods of DrapiRequest associated with this server object.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"The JWT token string (encrypted and Base-64 encoded) used to log in to the DRAPI server. The property will be set automatically if a token is provided in the script invocation, or when the script sucessfully executes a Login call. This propery will need to be set for most methods of DrapiRequest associated with this server object.","inlinecomment":" \t &apos; The JWT token string (encrypted and Base-64 encoded) used to log in to the DRAPI server. The property will be set automatically if a token is provided in the script invocation, or when the script sucessfully executes a Login call. This propery will need to be set for most methods of DrapiRequest associated with this server object.","parentclassname":"DrapiServer","codesamplehtml":"", "attributes":["SET_CONST"], "signatureelements":["Property","Set"]},{"label":"ServerURL","comment":"Base URL for Domino REST API calls, protocol + server + &amp;quot;api/v1&amp;quot;, e.g. &amp;quot;http://localhost:8880/api/v1&amp;quot; to connect to a locally running Domino server.","valuetype":"String","filenamebase":"ServerURL_Method","fqnprefix":"DrapiVSE.DrapiServer","qn":"Set.ServerURL","codesample":"","signaturecode":260,"instancecode":256,"argumentsuffix":"","signature":"Property Set ServerURL As String","modifiers":"Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Base URL for Domino REST API calls, protocol + server + &amp;quot;api/v1&amp;quot;, e.g. &amp;quot;http://localhost:8880/api/v1&amp;quot; to connect to a locally running Domino server.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Base URL for Domino REST API calls, protocol + server + &amp;quot;api/v1&amp;quot;, e.g. &amp;quot;http://localhost:8880/api/v1&amp;quot; to connect to a locally running Domino server.","inlinecomment":" \t &apos; Base URL for Domino REST API calls, protocol + server + &amp;quot;api/v1&amp;quot;, e.g. &amp;quot;http://localhost:8880/api/v1&amp;quot; to connect to a locally running Domino server.","parentclassname":"DrapiServer","codesamplehtml":"", "attributes":["SET_CONST"], "signatureelements":["Property","Set"]},{"label":"SSLHostValidation","comment":"Turn on or off SSL host validation. Without a valid certificate or unless SSLHostValidation is set to False, the request will return a status 0, if the server requires SSL verification. Settng SSLHostValidation to false can be used for internal HTTPS URLs on servers with self-signed certs.\nDefault value is True.","valuetype":"Boolean","filenamebase":"SSLHostValidation_Method","fqnprefix":"DrapiVSE.DrapiServer","qn":"Set.SSLHostValidation","codesample":"","signaturecode":260,"instancecode":256,"argumentsuffix":"","signature":"Property Set SSLHostValidation As Boolean","modifiers":"Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Turn on or off SSL host validation. Without a valid certificate or unless SSLHostValidation is set to False, the request will return a status 0, if the server requires SSL verification. Settng SSLHostValidation to false can be used for internal HTTPS URLs on servers with self-signed certs.&lt;br /&gt;Default value is True.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Turn on or off SSL host validation. Without a valid certificate or unless SSLHostValidation is set to False, the request will return a status 0, if the server requires SSL verification. Settng SSLHostValidation to false can be used for internal HTTPS URLs on servers with self-signed certs.&lt;br /&gt;Default value is True.","inlinecomment":" \t &apos; Turn on or off SSL host validation. Without a valid certificate or unless SSLHostValidation is set to False, the request will return a status 0, if the server requires SSL verification. Settng SSLHostValidation to false can be used for internal HTTPS URLs on servers with self-signed certs.\nDefault value is True.","parentclassname":"DrapiServer","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Set"]},{"label":"VerboseLogging","comment":"Whether this Server should create a .log file with verbose logging output from libcurl when a request to the DRAPI server is made. This is helpful when debugging networking issues related to VPN&amp;apos;s, proxies, self-signed SSL certificates, etc.","valuetype":"Boolean","filenamebase":"VerboseLogging_Method","fqnprefix":"DrapiVSE.DrapiServer","qn":"Set.VerboseLogging","codesample":"","signaturecode":260,"instancecode":256,"argumentsuffix":"","signature":"Property Set VerboseLogging As Boolean","modifiers":"Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Whether this Server should create a .log file with verbose logging output from libcurl when a request to the DRAPI server is made. This is helpful when debugging networking issues related to VPN&amp;apos;s, proxies, self-signed SSL certificates, etc.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Whether this Server should create a .log file with verbose logging output from libcurl when a request to the DRAPI server is made. This is helpful when debugging networking issues related to VPN&amp;apos;s, proxies, self-signed SSL certificates, etc.","inlinecomment":" \t &apos; Whether this Server should create a .log file with verbose logging output from libcurl when a request to the DRAPI server is made. This is helpful when debugging networking issues related to VPN&amp;apos;s, proxies, self-signed SSL certificates, etc.","parentclassname":"DrapiServer","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Set"]}]}
