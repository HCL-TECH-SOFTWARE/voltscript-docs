{"classname":"MapTransformer","comment":"Class for transforming elements in a Map to something else","valuetype":"","filenamebase":"MapTransformer_ObjectClass","fqnprefix":"VoltScriptCollections","qn":"MapTransformer","codesample":"%REM\nThe following code filters out values that are odd numbers\n%END REM\nClass AgeIncrementer as MapTransformer\n    Function transform(kvPair as Pair) as Boolean\n        Dim person as Person\n        Set person = kvPair.value\n        person.age++\n        Return new Pair(kvPair, person)\n    End Function\nEnd Class\nDim map1 as New Map(&amp;quot;PERSON&amp;quot;, Nothing, False)\nDim map2 as Map(&amp;quot;PERSON&amp;quot;, Nothing, False)\nDim incrementer as New AgeIncrementer()\n&amp;apos;Populate map1\nCall map1.transform(incrementer, map2)","signaturecode":3072,"instancecode":1024,"classtype":"Base","projectid":"FD17E29641C6117580258994003AF3B0","version":3,"classid":"41BAE62232732E4D8025899F003A6B3A","signature":"Public Class MapTransformer","modifiers":"Public","classname":"MapTransformer","parentclassname":"None","constructorsignature":"Public Sub New()","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Class for transforming elements in a Map to something else&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Class for transforming elements in a Map to something else","inlinecomment":" \t &apos; Class for transforming elements in a Map to something else","codesamplehtml":"%REM&lt;br /&gt;The following code filters out values that are odd numbers&lt;br /&gt;%END REM&lt;br /&gt;Class AgeIncrementer as MapTransformer&lt;br /&gt;    Function transform(kvPair as Pair) as Boolean&lt;br /&gt;        Dim person as Person&lt;br /&gt;        Set person = kvPair.value&lt;br /&gt;        person.age++&lt;br /&gt;        Return new Pair(kvPair, person)&lt;br /&gt;    End Function&lt;br /&gt;End Class&lt;br /&gt;Dim map1 as New Map(&amp;quot;PERSON&amp;quot;, Nothing, False)&lt;br /&gt;Dim map2 as Map(&amp;quot;PERSON&amp;quot;, Nothing, False)&lt;br /&gt;Dim incrementer as New AgeIncrementer()&lt;br /&gt;&amp;apos;Populate map1&lt;br /&gt;Call map1.transform(incrementer, map2)", "methods":[{"label":"transform","comment":"Function to transform a member of a value. If there is no return value, the element is skipped and nothing gets added to the new Map for this element.\nThus this function can perform a filter and a transform simultaneously.","valuetype":"Pair","filenamebase":"transform_Method","fqnprefix":"VoltScriptCollections.MapTransformer","qn":"transform","codesample":"%REM\nThe following code filters out values that are odd numbers\n%END REM\nClass AgeIncrementer as MapTransformer\n    Function transform(kvPair as Pair) as Boolean\n        Dim person as Person\n        Set person = kvPair.value\n        person.age++\n        Return new Pair(kvPair, person)\n    End Function\nEnd Class\nDim map1 as New Map(&amp;quot;PERSON&amp;quot;, Nothing, False)\nDim map2 as Map(&amp;quot;PERSON&amp;quot;, Nothing, False)\nDim incrementer as New AgeIncrementer()\n&amp;apos;Populate map1\nCall map1.transform(incrementer, map2)","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(kvPair As Pair)","signature":"Public Function transform(kvPair As Pair) As Pair","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Function to transform a member of a value. If there is no return value, the element is skipped and nothing gets added to the new Map for this element.&lt;br /&gt;Thus this function can perform a filter and a transform simultaneously.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Function to transform a member of a value. If there is no return value, the element is skipped and nothing gets added to the new Map for this element.&lt;br /&gt;Thus this function can perform a filter and a transform simultaneously.","inlinecomment":" \t &apos; Function to transform a member of a value. If there is no return value, the element is skipped and nothing gets added to the new Map for this element.\nThus this function can perform a filter and a transform simultaneously.","parentclassname":"MapTransformer","codesamplehtml":"%REM&lt;br /&gt;The following code filters out values that are odd numbers&lt;br /&gt;%END REM&lt;br /&gt;Class AgeIncrementer as MapTransformer&lt;br /&gt;    Function transform(kvPair as Pair) as Boolean&lt;br /&gt;        Dim person as Person&lt;br /&gt;        Set person = kvPair.value&lt;br /&gt;        person.age++&lt;br /&gt;        Return new Pair(kvPair, person)&lt;br /&gt;    End Function&lt;br /&gt;End Class&lt;br /&gt;Dim map1 as New Map(&amp;quot;PERSON&amp;quot;, Nothing, False)&lt;br /&gt;Dim map2 as Map(&amp;quot;PERSON&amp;quot;, Nothing, False)&lt;br /&gt;Dim incrementer as New AgeIncrementer()&lt;br /&gt;&amp;apos;Populate map1&lt;br /&gt;Call map1.transform(incrementer, map2)", "signatureelements":["Public","Function"], "arguments":[{"label":"kvPair","comment":"Pair containing key and value for the current element in the Map","valuetype":"Pair","filenamebase":"kvPair_ValuedElement","fqnprefix":"VoltScriptCollectionsMapTransformertransform","qn":"kvPair","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Pair containing key and value for the current element in the Map&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Pair containing key and value for the current element in the Map","inlinecomment":" \t &apos; Pair containing key and value for the current element in the Map"}]},{"label":"New","comment":"","valuetype":"","filenamebase":"New_Method","fqnprefix":"VoltScriptCollections.MapTransformer","qn":"New","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"()","signature":"Public Sub New()","modifiers":"Public","commentblock":"","commenthtml":"","inlinecomment":"","parentclassname":"MapTransformer","codesamplehtml":"", "signatureelements":["Public","Sub"]}]}
