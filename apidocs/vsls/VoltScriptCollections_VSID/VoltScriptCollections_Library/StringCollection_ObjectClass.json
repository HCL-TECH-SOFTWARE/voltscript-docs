{"classname":"StringCollection","comment":"Collection that can only contain strings or scalars, which will be converted to strings","valuetype":"Collection","filenamebase":"StringCollection_ObjectClass","fqnprefix":"VoltScriptCollections","qn":"StringCollection","codesample":"Dim coll as New StringCollection(Nothing False, False)\nCall coll.add(&amp;quot;Hello&amp;quot;)\nCall coll.add(&amp;quot;World&amp;quot;)\nCall coll.add(1)         &amp;apos; Will be added as &amp;quot;1&amp;quot;\nCall coll.add(True)   &amp;apos; Will be added as &amp;quot;True&amp;quot;","signaturecode":3072,"instancecode":1024,"parentclassname":"Collection","classtype":"Derived","classderivetype":"Collection","projectid":"FD17E29641C6117580258994003AF3B0","version":3,"classid":"84DF615B3829E8888025899F003B6575","signature":"Public Class StringCollection As Collection","modifiers":"Public","classname":"StringCollection","constructorsignature":"Public Sub New(comparator As Comparator, mustBeUnique As Boolean, isSorted As Boolean)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Collection that can only contain strings or scalars, which will be converted to strings&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Collection that can only contain strings or scalars, which will be converted to strings","inlinecomment":" \t &apos; Collection that can only contain strings or scalars, which will be converted to strings","codesamplehtml":"Dim coll as New StringCollection(Nothing False, False)&lt;br /&gt;Call coll.add(&amp;quot;Hello&amp;quot;)&lt;br /&gt;Call coll.add(&amp;quot;World&amp;quot;)&lt;br /&gt;Call coll.add(1)         &amp;apos; Will be added as &amp;quot;1&amp;quot;&lt;br /&gt;Call coll.add(True)   &amp;apos; Will be added as &amp;quot;True&amp;quot;", "methods":[{"label":"add","comment":"Overrides parent method, forcing to string if possible","valuetype":"Long","filenamebase":"add_Method","fqnprefix":"VoltScriptCollections.StringCollection","qn":"add","codesample":"Dim coll as New StringCollection(Nothing False, False)\nCall coll.add(&amp;quot;Hello&amp;quot;)\nCall coll.add(&amp;quot;World&amp;quot;)\nCall coll.add(1)         &amp;apos; Will be added as &amp;quot;1&amp;quot;\nCall coll.add(True)   &amp;apos; Will be added as &amp;quot;True&amp;quot;","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"(source As Variant)","signature":"Public Function add(source As Variant) As Long","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Overrides parent method, forcing to string if possible&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Overrides parent method, forcing to string if possible","inlinecomment":" \t &apos; Overrides parent method, forcing to string if possible","parentclassname":"StringCollection","codesamplehtml":"Dim coll as New StringCollection(Nothing False, False)&lt;br /&gt;Call coll.add(&amp;quot;Hello&amp;quot;)&lt;br /&gt;Call coll.add(&amp;quot;World&amp;quot;)&lt;br /&gt;Call coll.add(1)         &amp;apos; Will be added as &amp;quot;1&amp;quot;&lt;br /&gt;Call coll.add(True)   &amp;apos; Will be added as &amp;quot;True&amp;quot;", "signatureelements":["Public","Function"], "arguments":[{"label":"source","comment":"A stringable scalar value","valuetype":"Variant","filenamebase":"source_ValuedElement","fqnprefix":"VoltScriptCollectionsStringCollectionadd","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;A stringable scalar value&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"A stringable scalar value","inlinecomment":" \t &apos; A stringable scalar value"}]},{"label":"getNthElement","comment":"Wrapper for CStr(Collection.getNthElementRaw(index)).","valuetype":"String","filenamebase":"getNthElement_Method","fqnprefix":"VoltScriptCollections.StringCollection","qn":"getNthElement","codesample":"Dim coll as New StringCollection(Nothing False, False)\nDim retVal as String\nCall coll.add(1)\nretVal = coll.getNthElement(0)","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(index As Long)","signature":"Public Function getNthElement(index As Long) As String","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Wrapper for CStr(Collection.getNthElementRaw(index)).&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Wrapper for CStr(Collection.getNthElementRaw(index)).","inlinecomment":" \t &apos; Wrapper for CStr(Collection.getNthElementRaw(index)).","parentclassname":"StringCollection","codesamplehtml":"Dim coll as New StringCollection(Nothing False, False)&lt;br /&gt;Dim retVal as String&lt;br /&gt;Call coll.add(1)&lt;br /&gt;retVal = coll.getNthElement(0)", "signatureelements":["Public","Function"], "arguments":[{"label":"index","comment":"Index of the element to return","valuetype":"Long","filenamebase":"index_ValuedElement","fqnprefix":"VoltScriptCollectionsStringCollectiongetNthElement","qn":"index","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Index of the element to return&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Index of the element to return","inlinecomment":" \t &apos; Index of the element to return"}]},{"label":"New","comment":"","valuetype":"","filenamebase":"New_Method","fqnprefix":"VoltScriptCollections.StringCollection","qn":"New","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"parentconstructor":"Collection(&quot;STRING&quot;, comparator, mustBeUnique, isSorted)","argumentsuffix":"(comparator As Comparator, mustBeUnique As Boolean, isSorted As Boolean)","signature":"Public Sub New(comparator As Comparator, mustBeUnique As Boolean, isSorted As Boolean)","modifiers":"Public","commentblock":"","commenthtml":"","inlinecomment":"","parentclassname":"StringCollection","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"comparator","comment":"Comparator, defaulting (if Nothing) to MatchingDataTypeComparator","valuetype":"Comparator","filenamebase":"comparator_ValuedElement","fqnprefix":"VoltScriptCollectionsStringCollectionNew","qn":"comparator","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Comparator, defaulting (if Nothing) to MatchingDataTypeComparator&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Comparator, defaulting (if Nothing) to MatchingDataTypeComparator","inlinecomment":" \t &apos; Comparator, defaulting (if Nothing) to MatchingDataTypeComparator"},{"label":"mustBeUnique","comment":"Flag indicating if the elements within the Collection must be unique","valuetype":"Boolean","filenamebase":"mustBeUnique_ValuedElement","fqnprefix":"VoltScriptCollectionsStringCollectionNew","qn":"mustBeUnique","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the elements within the Collection must be unique&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the elements within the Collection must be unique","inlinecomment":" \t &apos; Flag indicating if the elements within the Collection must be unique"},{"label":"isSorted","comment":"Flag indicating if the content within the Collection should be sorted","valuetype":"Boolean","filenamebase":"isSorted_ValuedElement","fqnprefix":"VoltScriptCollectionsStringCollectionNew","qn":"isSorted","argumentindex":3,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Flag indicating if the content within the Collection should be sorted&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Flag indicating if the content within the Collection should be sorted","inlinecomment":" \t &apos; Flag indicating if the content within the Collection should be sorted"}]}]}
