{"classname":"PathUtils","comment":"Class for building up and returning paths.","valuetype":"","filenamebase":"PathUtils_ObjectClass","fqnprefix":"OSUtilsVSE","qn":"PathUtils","codesample":"","signaturecode":3072,"instancecode":1024,"classtype":"Base","colitemtype":"Boolean","colindextype":"Boolean","projectid":"85258A090061F374862589090039B351","version":3,"classid":"85258A090061F37486258909003D5E04","lsxclassid":3,"signature":"Public Class PathUtils","modifiers":"Public","classname":"PathUtils","parentclassname":"None","constructorsignature":"Function New() As PathUtils","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Class for building up and returning paths.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Class for building up and returning paths.","inlinecomment":" \t &apos; Class for building up and returning paths.","codesamplehtml":"", "methods":[{"label":"AddToPath","comment":"Adds a single directory or a path to the end of the existing Path object. Returns itself for fluid coding","valuetype":"PathUtils","filenamebase":"AddToPath_Method","fqnprefix":"OSUtilsVSE.PathUtils","qn":"AddToPath","codesample":"Dim pathUtils as New PathUtils()\nCall pathUtils.addToPath(CurDir)\nCall pathUtils.addToPath(&amp;quot;temp&amp;quot;)\nCall pathUtils.addToPath(&amp;quot;test&amp;quot;)\nPrint pathUtils.toString()","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(Path As String)","signature":"Function AddToPath(Path As String) As PathUtils","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Adds a single directory or a path to the end of the existing Path object. Returns itself for fluid coding&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Adds a single directory or a path to the end of the existing Path object. Returns itself for fluid coding","inlinecomment":" \t &apos; Adds a single directory or a path to the end of the existing Path object. Returns itself for fluid coding","parentclassname":"PathUtils","codesamplehtml":"Dim pathUtils as New PathUtils()&lt;br /&gt;Call pathUtils.addToPath(CurDir)&lt;br /&gt;Call pathUtils.addToPath(&amp;quot;temp&amp;quot;)&lt;br /&gt;Call pathUtils.addToPath(&amp;quot;test&amp;quot;)&lt;br /&gt;Print pathUtils.toString()", "signatureelements":["Function"], "arguments":[{"label":"Path","comment":"String for path to add, e.g. /temp/foo, or directory, e.g. foo","valuetype":"String","filenamebase":"Path_ValuedElement","fqnprefix":"OSUtilsVSEPathUtilsAddToPath","qn":"Path","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;String for path to add, e.g. /temp/foo, or directory, e.g. foo&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"String for path to add, e.g. /temp/foo, or directory, e.g. foo","inlinecomment":" \t &apos; String for path to add, e.g. /temp/foo, or directory, e.g. foo"}]},{"label":"GetDirectories","comment":"Retrieves an array where each element is a directory","valuetype":"String","filenamebase":"GetDirectories_Method","fqnprefix":"OSUtilsVSE.PathUtils","qn":"GetDirectories","codesample":"Dim pathUtils as New PathUtils()\nDim dirs as Variant\nCall pathUtils.addToPath(CurDir)\ndirs = pathUtils.getDirectories()","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"()","signature":"Function GetDirectories() As String Array","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Retrieves an array where each element is a directory&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Retrieves an array where each element is a directory","inlinecomment":" \t &apos; Retrieves an array where each element is a directory","parentclassname":"PathUtils","codesamplehtml":"Dim pathUtils as New PathUtils()&lt;br /&gt;Dim dirs as Variant&lt;br /&gt;Call pathUtils.addToPath(CurDir)&lt;br /&gt;dirs = pathUtils.getDirectories()", "attributes":["Array"], "signatureelements":["Function"]},{"label":"New","comment":"Constructor","valuetype":"PathUtils","filenamebase":"New_Method","fqnprefix":"OSUtilsVSE.PathUtils","qn":"New","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"()","signature":"Function New() As PathUtils","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Constructor&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Constructor","inlinecomment":" \t &apos; Constructor","parentclassname":"PathUtils","codesamplehtml":"", "signatureelements":["Function"]},{"label":"ToString","comment":"Builds the elements into a string, using the path separator as defined in the current OS","valuetype":"String","filenamebase":"ToString_Method","fqnprefix":"OSUtilsVSE.PathUtils","qn":"ToString","codesample":"Dim pathUtils as New PathUtils()\nCall pathUtils.addToPath(CurDir)\nCall pathUtils.addToPath(&amp;quot;temp&amp;quot;)\nCall pathUtils.addToPath(&amp;quot;test&amp;quot;)\nPrint pathUtils.toString()","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"()","signature":"Function ToString() As String","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Builds the elements into a string, using the path separator as defined in the current OS&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Builds the elements into a string, using the path separator as defined in the current OS","inlinecomment":" \t &apos; Builds the elements into a string, using the path separator as defined in the current OS","parentclassname":"PathUtils","codesamplehtml":"Dim pathUtils as New PathUtils()&lt;br /&gt;Call pathUtils.addToPath(CurDir)&lt;br /&gt;Call pathUtils.addToPath(&amp;quot;temp&amp;quot;)&lt;br /&gt;Call pathUtils.addToPath(&amp;quot;test&amp;quot;)&lt;br /&gt;Print pathUtils.toString()", "signatureelements":["Function"]}]}
