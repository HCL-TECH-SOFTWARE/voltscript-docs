{"classname":"WebServer","comment":"Class for holding generic server information for web requests.","valuetype":"","filenamebase":"WebServer_ObjectClass","fqnprefix":"WebVSE","qn":"WebServer","codesample":"","signaturecode":3072,"instancecode":1024,"classtype":"Base","colitemtype":"Boolean","colindextype":"Boolean","projectid":"85258A080053C19485258833005FD0D9","version":3,"classid":"85258A080053C19485258833005FE4B9","lsxclassid":2,"signature":"Public Class WebServer","modifiers":"Public","classname":"WebServer","parentclassname":"None","constructorsignature":"Function New() As WebServer","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Class for holding generic server information for web requests.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Class for holding generic server information for web requests.","inlinecomment":" \t &apos; Class for holding generic server information for web requests.","codesamplehtml":"", "methods":[{"label":"CreateRequest","comment":"Creates a WebRequest for individual requests to this WebServer&amp;apos;s HostURL","valuetype":"WebRequest","filenamebase":"CreateRequest_Method","fqnprefix":"WebVSE.WebServer","qn":"CreateRequest","codesample":"%REM\n    The following code creates a WebServer, WebRequest and makes the call, returning a WebResponse.\n%END REM\nDim server as New WebServer()\nDim request as WebRequest\nserver.protocol = &amp;quot;HTTPS&amp;quot;\nserver.HostURL = &amp;quot;httpstat.us&amp;quot;\nSet request = server.createRequest()\nrequest.target = &amp;quot;200&amp;quot;\nrequest.timeoutSeconds = 5\nReturn request.send()","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"()","signature":"Function CreateRequest() As WebRequest","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Creates a WebRequest for individual requests to this WebServer&amp;apos;s HostURL&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Creates a WebRequest for individual requests to this WebServer&amp;apos;s HostURL","inlinecomment":" \t &apos; Creates a WebRequest for individual requests to this WebServer&amp;apos;s HostURL","parentclassname":"WebServer","codesamplehtml":"%REM&lt;br /&gt;    The following code creates a WebServer, WebRequest and makes the call, returning a WebResponse.&lt;br /&gt;%END REM&lt;br /&gt;Dim server as New WebServer()&lt;br /&gt;Dim request as WebRequest&lt;br /&gt;server.protocol = &amp;quot;HTTPS&amp;quot;&lt;br /&gt;server.HostURL = &amp;quot;httpstat.us&amp;quot;&lt;br /&gt;Set request = server.createRequest()&lt;br /&gt;request.target = &amp;quot;200&amp;quot;&lt;br /&gt;request.timeoutSeconds = 5&lt;br /&gt;Return request.send()", "signatureelements":["Function"]},{"label":"CreateRequestWithURL","comment":"Populates a WebRequest and WebServer with a full URL including protocol, host URL, target path and query string.","valuetype":"WebRequest","filenamebase":"CreateRequestWithURL_Method","fqnprefix":"WebVSE.WebServer","qn":"CreateRequestWithURL","codesample":"%REM\n    The following code creates a WebServer an URLBuilder, then creates a WebRequest from the URLBuilder.\n%END REM\nDim response as WebResponse\nDim server as New WebServer()\nDim request as WebRequest\nDim builder as New URLBuilder()\nbuilder.isHttps = True\nbuilder.targetHost = &amp;quot;httpstat.us&amp;quot;\nbuilder.targetPath = &amp;quot;200&amp;quot;\nCall builder.addUrlParameter(&amp;quot;sleep&amp;quot;, &amp;quot;1000&amp;quot;)\nSet request = server.createRequestWithUrl(builder.toString(False))","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(FullURL As String)","signature":"Function CreateRequestWithURL(FullURL As String) As WebRequest","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Populates a WebRequest and WebServer with a full URL including protocol, host URL, target path and query string.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Populates a WebRequest and WebServer with a full URL including protocol, host URL, target path and query string.","inlinecomment":" \t &apos; Populates a WebRequest and WebServer with a full URL including protocol, host URL, target path and query string.","parentclassname":"WebServer","codesamplehtml":"%REM&lt;br /&gt;    The following code creates a WebServer an URLBuilder, then creates a WebRequest from the URLBuilder.&lt;br /&gt;%END REM&lt;br /&gt;Dim response as WebResponse&lt;br /&gt;Dim server as New WebServer()&lt;br /&gt;Dim request as WebRequest&lt;br /&gt;Dim builder as New URLBuilder()&lt;br /&gt;builder.isHttps = True&lt;br /&gt;builder.targetHost = &amp;quot;httpstat.us&amp;quot;&lt;br /&gt;builder.targetPath = &amp;quot;200&amp;quot;&lt;br /&gt;Call builder.addUrlParameter(&amp;quot;sleep&amp;quot;, &amp;quot;1000&amp;quot;)&lt;br /&gt;Set request = server.createRequestWithUrl(builder.toString(False))", "signatureelements":["Function"], "arguments":[{"label":"FullURL","comment":"URL to create WebRequest with","valuetype":"String","filenamebase":"FullURL_ValuedElement","fqnprefix":"WebVSEWebServerCreateRequestWithURL","qn":"FullURL","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;URL to create WebRequest with&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"URL to create WebRequest with","inlinecomment":" \t &apos; URL to create WebRequest with"}]},{"label":"New","comment":"","valuetype":"WebServer","filenamebase":"New_Method","fqnprefix":"WebVSE.WebServer","qn":"New","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"()","signature":"Function New() As WebServer","modifiers":"","commentblock":"","commenthtml":"","inlinecomment":"","parentclassname":"WebServer","codesamplehtml":"", "signatureelements":["Function"]},{"label":"RegisterVSEPath","comment":"Internal method used to register the VSE with the runtime registry.","valuetype":"Boolean","filenamebase":"RegisterVSEPath_Method","fqnprefix":"WebVSE.WebServer","qn":"RegisterVSEPath","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"()","signature":"Function RegisterVSEPath() As Boolean","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Internal method used to register the VSE with the runtime registry.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Internal method used to register the VSE with the runtime registry.","inlinecomment":" \t &apos; Internal method used to register the VSE with the runtime registry.","parentclassname":"WebServer","codesamplehtml":"", "signatureelements":["Function"]},{"label":"URLdecode","comment":"URL decodes a string.","valuetype":"String","filenamebase":"URLdecode_Method","fqnprefix":"WebVSE.WebServer","qn":"URLdecode","codesample":"%REM\n    The following code decodes a URL-encoded string.\n%END REM\nDim WebServer as New WebServer()\nPrint WebServer.URLDecode(&amp;quot;Hello+World&amp;quot;)   &amp;apos;Prints &amp;quot;Hello World&amp;quot;","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(Input As String)","signature":"Function URLdecode(Input As String) As String","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;URL decodes a string.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"URL decodes a string.","inlinecomment":" \t &apos; URL decodes a string.","parentclassname":"WebServer","codesamplehtml":"%REM&lt;br /&gt;    The following code decodes a URL-encoded string.&lt;br /&gt;%END REM&lt;br /&gt;Dim WebServer as New WebServer()&lt;br /&gt;Print WebServer.URLDecode(&amp;quot;Hello+World&amp;quot;)   &amp;apos;Prints &amp;quot;Hello World&amp;quot;", "signatureelements":["Function"], "arguments":[{"label":"Input","comment":"String to decode","valuetype":"String","filenamebase":"Input_ValuedElement","fqnprefix":"WebVSEWebServerURLdecode","qn":"Input","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;String to decode&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"String to decode","inlinecomment":" \t &apos; String to decode"}]},{"label":"URLencode","comment":"URL encodes a string. This method does not encode alphanumerics or - _ . ~ / ? = &amp;amp; :","valuetype":"String","filenamebase":"URLencode_Method","fqnprefix":"WebVSE.WebServer","qn":"URLencode","codesample":"%REM\n    The following code URL-encodes a string.\n%END REM\nDim server as New WebServer()\nPrint server.URLEncode(&amp;quot;Hello World&amp;quot;)   &amp;apos; Prints &amp;quot;Hello+World&amp;quot;","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(Input As String)","signature":"Function URLencode(Input As String) As String","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;URL encodes a string. This method does not encode alphanumerics or - _ . ~ / ? = &amp;amp; :&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"URL encodes a string. This method does not encode alphanumerics or - _ . ~ / ? = &amp;amp; :","inlinecomment":" \t &apos; URL encodes a string. This method does not encode alphanumerics or - _ . ~ / ? = &amp;amp; :","parentclassname":"WebServer","codesamplehtml":"%REM&lt;br /&gt;    The following code URL-encodes a string.&lt;br /&gt;%END REM&lt;br /&gt;Dim server as New WebServer()&lt;br /&gt;Print server.URLEncode(&amp;quot;Hello World&amp;quot;)   &amp;apos; Prints &amp;quot;Hello+World&amp;quot;", "signatureelements":["Function"], "arguments":[{"label":"Input","comment":"String to URL encode","valuetype":"String","filenamebase":"Input_ValuedElement","fqnprefix":"WebVSEWebServerURLencode","qn":"Input","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;String to URL encode&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"String to URL encode","inlinecomment":" \t &apos; String to URL encode"}]},{"label":"CertificatePath","comment":"Path to a .crt file containing certificates for the server to connect to, if not on the PATH. Without a valid certificate or unless SSLHostValidationOn is set to False, the request will return a status 0, if the server requires SSL verification.","valuetype":"String","filenamebase":"CertificatePath_Method","fqnprefix":"WebVSE.WebServer","qn":"Get.CertificatePath","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get CertificatePath As String","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Path to a .crt file containing certificates for the server to connect to, if not on the PATH. Without a valid certificate or unless SSLHostValidationOn is set to False, the request will return a status 0, if the server requires SSL verification.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Path to a .crt file containing certificates for the server to connect to, if not on the PATH. Without a valid certificate or unless SSLHostValidationOn is set to False, the request will return a status 0, if the server requires SSL verification.","inlinecomment":" \t &apos; Path to a .crt file containing certificates for the server to connect to, if not on the PATH. Without a valid certificate or unless SSLHostValidationOn is set to False, the request will return a status 0, if the server requires SSL verification.","parentclassname":"WebServer","codesamplehtml":"", "attributes":["SET_CONST"], "signatureelements":["Property","Get"]},{"label":"HostURL","comment":"Base URL to use for all WebRequests created from this WebServer object. This gets set from a URLBuilder when calling WebServer.createRequestWithUrl().","valuetype":"String","filenamebase":"HostURL_Method","fqnprefix":"WebVSE.WebServer","qn":"Get.HostURL","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get HostURL As String","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Base URL to use for all WebRequests created from this WebServer object. This gets set from a URLBuilder when calling WebServer.createRequestWithUrl().&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Base URL to use for all WebRequests created from this WebServer object. This gets set from a URLBuilder when calling WebServer.createRequestWithUrl().","inlinecomment":" \t &apos; Base URL to use for all WebRequests created from this WebServer object. This gets set from a URLBuilder when calling WebServer.createRequestWithUrl().","parentclassname":"WebServer","codesamplehtml":"", "attributes":["SET_CONST"], "signatureelements":["Property","Get"]},{"label":"LibCurlVersion","comment":"The version of Libcurl used by this VSE","valuetype":"String","filenamebase":"LibCurlVersion_Method","fqnprefix":"WebVSE.WebServer","qn":"Get.LibCurlVersion","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get LibCurlVersion As String","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;The version of Libcurl used by this VSE&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"The version of Libcurl used by this VSE","inlinecomment":" \t &apos; The version of Libcurl used by this VSE","parentclassname":"WebServer","codesamplehtml":"", "attributes":["READ_ONLY","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"PreserveCookies","comment":"Whether or not cookies received from WebResponses should be preserved between WebRequests made from this WebServer. Default value is False.","valuetype":"Boolean","filenamebase":"PreserveCookies_Method","fqnprefix":"WebVSE.WebServer","qn":"Get.PreserveCookies","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get PreserveCookies As Boolean","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Whether or not cookies received from WebResponses should be preserved between WebRequests made from this WebServer. Default value is False.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Whether or not cookies received from WebResponses should be preserved between WebRequests made from this WebServer. Default value is False.","inlinecomment":" \t &apos; Whether or not cookies received from WebResponses should be preserved between WebRequests made from this WebServer. Default value is False.","parentclassname":"WebServer","codesamplehtml":"", "signatureelements":["Property","Get"]},{"label":"Protocol","comment":"Protocol to use when making WebRequests. Default is &amp;quot;HTTP&amp;quot;.","valuetype":"String","filenamebase":"Protocol_Method","fqnprefix":"WebVSE.WebServer","qn":"Get.Protocol","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get Protocol As String","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Protocol to use when making WebRequests. Default is &amp;quot;HTTP&amp;quot;.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Protocol to use when making WebRequests. Default is &amp;quot;HTTP&amp;quot;.","inlinecomment":" \t &apos; Protocol to use when making WebRequests. Default is &amp;quot;HTTP&amp;quot;.","parentclassname":"WebServer","codesamplehtml":"", "attributes":["SET_CONST"], "signatureelements":["Property","Get"]},{"label":"SSLHostValidationOn","comment":"Turn on or off SSL host validation. Without a valid certificate or unless SSLHostValidationOn is set to False, the request will return a status 0, if the server requires SSL verification. Settng SSLHostValidationOn to false can be used for internal HTTPS URLs on servers with self-signed certs.\nDefault value is True.","valuetype":"Boolean","filenamebase":"SSLHostValidationOn_Method","fqnprefix":"WebVSE.WebServer","qn":"Get.SSLHostValidationOn","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get SSLHostValidationOn As Boolean","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Turn on or off SSL host validation. Without a valid certificate or unless SSLHostValidationOn is set to False, the request will return a status 0, if the server requires SSL verification. Settng SSLHostValidationOn to false can be used for internal HTTPS URLs on servers with self-signed certs.&lt;br /&gt;Default value is True.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Turn on or off SSL host validation. Without a valid certificate or unless SSLHostValidationOn is set to False, the request will return a status 0, if the server requires SSL verification. Settng SSLHostValidationOn to false can be used for internal HTTPS URLs on servers with self-signed certs.&lt;br /&gt;Default value is True.","inlinecomment":" \t &apos; Turn on or off SSL host validation. Without a valid certificate or unless SSLHostValidationOn is set to False, the request will return a status 0, if the server requires SSL verification. Settng SSLHostValidationOn to false can be used for internal HTTPS URLs on servers with self-signed certs.\nDefault value is True.","parentclassname":"WebServer","codesamplehtml":"", "signatureelements":["Property","Get"]},{"label":"VSEVersion","comment":"Returns VSE version","valuetype":"String","filenamebase":"VSEVersion_Method","fqnprefix":"WebVSE.WebServer","qn":"Get.VSEVersion","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get VSEVersion As String","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Returns VSE version&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Returns VSE version","inlinecomment":" \t &apos; Returns VSE version","parentclassname":"WebServer","codesamplehtml":"", "attributes":["READ_ONLY","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"CertificatePath","comment":"Path to a .crt file containing certificates for the server to connect to, if not on the PATH. Without a valid certificate or unless SSLHostValidationOn is set to False, the request will return a status 0, if the server requires SSL verification.","valuetype":"String","filenamebase":"CertificatePath_Method","fqnprefix":"WebVSE.WebServer","qn":"Set.CertificatePath","codesample":"","signaturecode":260,"instancecode":256,"argumentsuffix":"","signature":"Property Set CertificatePath As String","modifiers":"Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Path to a .crt file containing certificates for the server to connect to, if not on the PATH. Without a valid certificate or unless SSLHostValidationOn is set to False, the request will return a status 0, if the server requires SSL verification.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Path to a .crt file containing certificates for the server to connect to, if not on the PATH. Without a valid certificate or unless SSLHostValidationOn is set to False, the request will return a status 0, if the server requires SSL verification.","inlinecomment":" \t &apos; Path to a .crt file containing certificates for the server to connect to, if not on the PATH. Without a valid certificate or unless SSLHostValidationOn is set to False, the request will return a status 0, if the server requires SSL verification.","parentclassname":"WebServer","codesamplehtml":"", "attributes":["SET_CONST"], "signatureelements":["Property","Set"]},{"label":"HostURL","comment":"Base URL to use for all WebRequests created from this WebServer object. This gets set from a URLBuilder when calling WebServer.createRequestWithUrl().","valuetype":"String","filenamebase":"HostURL_Method","fqnprefix":"WebVSE.WebServer","qn":"Set.HostURL","codesample":"","signaturecode":260,"instancecode":256,"argumentsuffix":"","signature":"Property Set HostURL As String","modifiers":"Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Base URL to use for all WebRequests created from this WebServer object. This gets set from a URLBuilder when calling WebServer.createRequestWithUrl().&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Base URL to use for all WebRequests created from this WebServer object. This gets set from a URLBuilder when calling WebServer.createRequestWithUrl().","inlinecomment":" \t &apos; Base URL to use for all WebRequests created from this WebServer object. This gets set from a URLBuilder when calling WebServer.createRequestWithUrl().","parentclassname":"WebServer","codesamplehtml":"", "attributes":["SET_CONST"], "signatureelements":["Property","Set"]},{"label":"PreserveCookies","comment":"Whether or not cookies received from WebResponses should be preserved between WebRequests made from this WebServer. Default value is False.","valuetype":"Boolean","filenamebase":"PreserveCookies_Method","fqnprefix":"WebVSE.WebServer","qn":"Set.PreserveCookies","codesample":"","signaturecode":260,"instancecode":256,"argumentsuffix":"","signature":"Property Set PreserveCookies As Boolean","modifiers":"Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Whether or not cookies received from WebResponses should be preserved between WebRequests made from this WebServer. Default value is False.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Whether or not cookies received from WebResponses should be preserved between WebRequests made from this WebServer. Default value is False.","inlinecomment":" \t &apos; Whether or not cookies received from WebResponses should be preserved between WebRequests made from this WebServer. Default value is False.","parentclassname":"WebServer","codesamplehtml":"", "signatureelements":["Property","Set"]},{"label":"Protocol","comment":"Protocol to use when making WebRequests. Default is &amp;quot;HTTP&amp;quot;.","valuetype":"String","filenamebase":"Protocol_Method","fqnprefix":"WebVSE.WebServer","qn":"Set.Protocol","codesample":"","signaturecode":260,"instancecode":256,"argumentsuffix":"","signature":"Property Set Protocol As String","modifiers":"Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Protocol to use when making WebRequests. Default is &amp;quot;HTTP&amp;quot;.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Protocol to use when making WebRequests. Default is &amp;quot;HTTP&amp;quot;.","inlinecomment":" \t &apos; Protocol to use when making WebRequests. Default is &amp;quot;HTTP&amp;quot;.","parentclassname":"WebServer","codesamplehtml":"", "attributes":["SET_CONST"], "signatureelements":["Property","Set"]},{"label":"SSLHostValidationOn","comment":"Turn on or off SSL host validation. Without a valid certificate or unless SSLHostValidationOn is set to False, the request will return a status 0, if the server requires SSL verification. Settng SSLHostValidationOn to false can be used for internal HTTPS URLs on servers with self-signed certs.\nDefault value is True.","valuetype":"Boolean","filenamebase":"SSLHostValidationOn_Method","fqnprefix":"WebVSE.WebServer","qn":"Set.SSLHostValidationOn","codesample":"","signaturecode":260,"instancecode":256,"argumentsuffix":"","signature":"Property Set SSLHostValidationOn As Boolean","modifiers":"Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Turn on or off SSL host validation. Without a valid certificate or unless SSLHostValidationOn is set to False, the request will return a status 0, if the server requires SSL verification. Settng SSLHostValidationOn to false can be used for internal HTTPS URLs on servers with self-signed certs.&lt;br /&gt;Default value is True.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Turn on or off SSL host validation. Without a valid certificate or unless SSLHostValidationOn is set to False, the request will return a status 0, if the server requires SSL verification. Settng SSLHostValidationOn to false can be used for internal HTTPS URLs on servers with self-signed certs.&lt;br /&gt;Default value is True.","inlinecomment":" \t &apos; Turn on or off SSL host validation. Without a valid certificate or unless SSLHostValidationOn is set to False, the request will return a status 0, if the server requires SSL verification. Settng SSLHostValidationOn to false can be used for internal HTTPS URLs on servers with self-signed certs.\nDefault value is True.","parentclassname":"WebServer","codesamplehtml":"", "signatureelements":["Property","Set"]}]}
