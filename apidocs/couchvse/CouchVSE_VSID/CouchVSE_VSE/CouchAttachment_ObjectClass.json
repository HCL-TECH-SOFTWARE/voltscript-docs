{"classname":"CouchAttachment","comment":"Carrier for Meta information about an attached file for a CouchDocument \n \nCreation - Use the CouchDocument.CreateAttachment() method \nRetrieval - Use the CouchDocument.GetAttachmentInfo() method. ","valuetype":"","filenamebase":"CouchAttachment_ObjectClass","fqnprefix":"CouchVSE","qn":"CouchAttachment","codesample":"","signaturecode":3072,"instancecode":1024,"classtype":"Base","colitemtype":"Boolean","colindextype":"Boolean","classattribnewnotexposed":"UnexposedNew","projectid":"85258A0A005BFF7B85258714004ECA02","version":3,"classid":"85258A0A005BFF7B852587EE00656089","lsxclassid":7,"signature":"Public Class CouchAttachment","modifiers":"Public","classname":"CouchAttachment","parentclassname":"None","constructorsignature":"Function New() As CouchAttachment","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Carrier for Meta information about an attached file for a CouchDocument &lt;br /&gt; &lt;br /&gt;Creation - Use the CouchDocument.CreateAttachment() method &lt;br /&gt;Retrieval - Use the CouchDocument.GetAttachmentInfo() method. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Carrier for Meta information about an attached file for a CouchDocument &lt;br /&gt; &lt;br /&gt;Creation - Use the CouchDocument.CreateAttachment() method &lt;br /&gt;Retrieval - Use the CouchDocument.GetAttachmentInfo() method. ","inlinecomment":" \t &apos; Carrier for Meta information about an attached file for a CouchDocument \n \nCreation - Use the CouchDocument.CreateAttachment() method \nRetrieval - Use the CouchDocument.GetAttachmentInfo() method. ","codesamplehtml":"", "methods":[{"label":"Download","comment":"Downloads the file for the CouchAttachment object to the LOCAL filesystem. ","valuetype":"Long-Unsigned","filenamebase":"Download_Method","fqnprefix":"CouchVSE.CouchAttachment","qn":"Download","codesample":"&amp;apos; Sample code assumes previously instantiated document as CouchDocument object \n   \nDim attachment as CouchAttachment \nDim bytes As Long \nDim targetfilepath As String \n \nSet attachment = document.getAttachmentInfo(&amp;quot;watermelonsalad.png&amp;quot;)\nPrint |acquired attachment for &amp;quot;watermelonsalad.png&amp;quot;|\n \ntargetfilepath = CurDir() &amp;amp; &amp;quot;/resources/watermelonsalad_copy.png&amp;quot;\n \nPrint |downloading to | &amp;amp; targetfilepath \nbytes = attachment.Download(targetfilepath, True)\n \nPrint |Attachment.Download() returned | cstr(bytes)\n ","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(DiskFile As String, Overwrite As Boolean)","signature":"Function Download(DiskFile As String, Overwrite As Boolean) As Long","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Downloads the file for the CouchAttachment object to the LOCAL filesystem. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Downloads the file for the CouchAttachment object to the LOCAL filesystem. ","inlinecomment":" \t &apos; Downloads the file for the CouchAttachment object to the LOCAL filesystem. ","parentclassname":"CouchAttachment","codesamplehtml":"&amp;apos; Sample code assumes previously instantiated document as CouchDocument object &lt;br /&gt;   &lt;br /&gt;Dim attachment as CouchAttachment &lt;br /&gt;Dim bytes As Long &lt;br /&gt;Dim targetfilepath As String &lt;br /&gt; &lt;br /&gt;Set attachment = document.getAttachmentInfo(&amp;quot;watermelonsalad.png&amp;quot;)&lt;br /&gt;Print |acquired attachment for &amp;quot;watermelonsalad.png&amp;quot;|&lt;br /&gt; &lt;br /&gt;targetfilepath = CurDir() &amp;amp; &amp;quot;/resources/watermelonsalad_copy.png&amp;quot;&lt;br /&gt; &lt;br /&gt;Print |downloading to | &amp;amp; targetfilepath &lt;br /&gt;bytes = attachment.Download(targetfilepath, True)&lt;br /&gt; &lt;br /&gt;Print |Attachment.Download() returned | cstr(bytes)&lt;br /&gt; ", "signatureelements":["Function"], "arguments":[{"label":"DiskFile","comment":"","valuetype":"String","filenamebase":"DiskFile_ValuedElement","fqnprefix":"CouchVSECouchAttachmentDownload","qn":"DiskFile","argumentindex":1,"commentblock":"","commenthtml":"","inlinecomment":""},{"label":"Overwrite","comment":"","valuetype":"Boolean","filenamebase":"Overwrite_ValuedElement","fqnprefix":"CouchVSECouchAttachmentDownload","qn":"Overwrite","argumentindex":2,"commentblock":"","commenthtml":"","inlinecomment":"", "attributes":["BY_VAL"]}]},{"label":"New","comment":"NOT AVAILABLE - Use CouchDocument.CreateAttachment() or CouchDocument.GetAttachmentInfo() methods. ","valuetype":"CouchAttachment","filenamebase":"New_Method","fqnprefix":"CouchVSE.CouchAttachment","qn":"New","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"()","signature":"Function New() As CouchAttachment","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;NOT AVAILABLE - Use CouchDocument.CreateAttachment() or CouchDocument.GetAttachmentInfo() methods. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"NOT AVAILABLE - Use CouchDocument.CreateAttachment() or CouchDocument.GetAttachmentInfo() methods. ","inlinecomment":" \t &apos; NOT AVAILABLE - Use CouchDocument.CreateAttachment() or CouchDocument.GetAttachmentInfo() methods. ","parentclassname":"CouchAttachment","codesamplehtml":"", "signatureelements":["Function"]},{"label":"Upload","comment":"Uploads the LOCAL filesystem file to the ParentDatabase of the CouchAttachment.  ","valuetype":"Long-Signed","filenamebase":"Upload_Method","fqnprefix":"CouchVSE.CouchAttachment","qn":"Upload","codesample":"&amp;apos; Sample code assumes previously instantiated document as CouchDocument object \n   \nDim attachment As CouchAttachment \nDim uploadedbytes As Long\n \nSet attachment = document.createAttachment(|watermelonsalad.png|, CurDir() &amp;amp; |/resources/watermelonsalad.png|, &amp;quot;image/png&amp;quot;)\nPrint |Created Attachment|\nPrint |attachment.Name: | &amp;amp; attachment.Name \nPrint |attachment.ContentLength: | &amp;amp; attachment.ContentLength \nPrint |attachment.ContentType: | &amp;amp; attachment.ContentType \nPrint |attachment.DiskFile: | &amp;amp; attachment.DiskFile \nPrint ||        \nPrint |Attachment Added but Not Yet Uploaded|\nPrint |document.JSONValue: | &amp;amp; document.JSONValue        \nPrint || \n \n&amp;apos; !! Document must be saved to disk before uploading attachments !! \nIf Not document.isSaved Then Call document.Save() \n \nuploadedbytes = attachment.Upload()\nPrint |attachment.Upload() returned | &amp;amp; uploadedbytes &amp;amp; | bytes.|\nPrint || ","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"()","signature":"Function Upload() As Long","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Uploads the LOCAL filesystem file to the ParentDatabase of the CouchAttachment.  &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Uploads the LOCAL filesystem file to the ParentDatabase of the CouchAttachment.  ","inlinecomment":" \t &apos; Uploads the LOCAL filesystem file to the ParentDatabase of the CouchAttachment.  ","parentclassname":"CouchAttachment","codesamplehtml":"&amp;apos; Sample code assumes previously instantiated document as CouchDocument object &lt;br /&gt;   &lt;br /&gt;Dim attachment As CouchAttachment &lt;br /&gt;Dim uploadedbytes As Long&lt;br /&gt; &lt;br /&gt;Set attachment = document.createAttachment(|watermelonsalad.png|, CurDir() &amp;amp; |/resources/watermelonsalad.png|, &amp;quot;image/png&amp;quot;)&lt;br /&gt;Print |Created Attachment|&lt;br /&gt;Print |attachment.Name: | &amp;amp; attachment.Name &lt;br /&gt;Print |attachment.ContentLength: | &amp;amp; attachment.ContentLength &lt;br /&gt;Print |attachment.ContentType: | &amp;amp; attachment.ContentType &lt;br /&gt;Print |attachment.DiskFile: | &amp;amp; attachment.DiskFile &lt;br /&gt;Print ||        &lt;br /&gt;Print |Attachment Added but Not Yet Uploaded|&lt;br /&gt;Print |document.JSONValue: | &amp;amp; document.JSONValue        &lt;br /&gt;Print || &lt;br /&gt; &lt;br /&gt;&amp;apos; !! Document must be saved to disk before uploading attachments !! &lt;br /&gt;If Not document.isSaved Then Call document.Save() &lt;br /&gt; &lt;br /&gt;uploadedbytes = attachment.Upload()&lt;br /&gt;Print |attachment.Upload() returned | &amp;amp; uploadedbytes &amp;amp; | bytes.|&lt;br /&gt;Print || ", "signatureelements":["Function"]},{"label":"ContentLength","comment":"Number of Bytes used by the actual file referenced by the CouchAttachment object. ","valuetype":"Long-Unsigned","filenamebase":"ContentLength_Method","fqnprefix":"CouchVSE.CouchAttachment","qn":"Get.ContentLength","codesample":"&amp;apos; Sample code assumes previously instantiated attachment as CouchAttachment object \n  \nSub PrintCouchAttachmentInfo(attachment as CouchAttachment)\n    Print |attachment.Name: | &amp;amp; attachment.Name \n    Print |attachment.ContentLength: | &amp;amp; attachment.ContentLength \n    Print |attachment.ContentType: | &amp;amp; attachment.ContentType \n    Print |attachment.DiskFile: | &amp;amp; attachment.DiskFile \nEnd Sub ","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get ContentLength As Long","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Number of Bytes used by the actual file referenced by the CouchAttachment object. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Number of Bytes used by the actual file referenced by the CouchAttachment object. ","inlinecomment":" \t &apos; Number of Bytes used by the actual file referenced by the CouchAttachment object. ","parentclassname":"CouchAttachment","codesamplehtml":"&amp;apos; Sample code assumes previously instantiated attachment as CouchAttachment object &lt;br /&gt;  &lt;br /&gt;Sub PrintCouchAttachmentInfo(attachment as CouchAttachment)&lt;br /&gt;    Print |attachment.Name: | &amp;amp; attachment.Name &lt;br /&gt;    Print |attachment.ContentLength: | &amp;amp; attachment.ContentLength &lt;br /&gt;    Print |attachment.ContentType: | &amp;amp; attachment.ContentType &lt;br /&gt;    Print |attachment.DiskFile: | &amp;amp; attachment.DiskFile &lt;br /&gt;End Sub ", "attributes":["READ_ONLY"], "signatureelements":["Property","Get"]},{"label":"ContentType","comment":"String describing the content type of the CouchAttachment.   \n \nNOTE: There is no logic or detection processes backing this property.  It is manually set and completely arbitrary. ","valuetype":"String","filenamebase":"ContentType_Method","fqnprefix":"CouchVSE.CouchAttachment","qn":"Get.ContentType","codesample":"&amp;apos; Sample code assumes previously instantiated attachment as CouchAttachment object \n  \nSub PrintCouchAttachmentInfo(attachment as CouchAttachment)\n    Print |attachment.Name: | &amp;amp; attachment.Name \n    Print |attachment.ContentLength: | &amp;amp; attachment.ContentLength \n    Print |attachment.ContentType: | &amp;amp; attachment.ContentType \n    Print |attachment.DiskFile: | &amp;amp; attachment.DiskFile \nEnd Sub ","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get ContentType As String","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;String describing the content type of the CouchAttachment.   &lt;br /&gt; &lt;br /&gt;NOTE: There is no logic or detection processes backing this property.  It is manually set and completely arbitrary. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"String describing the content type of the CouchAttachment.   &lt;br /&gt; &lt;br /&gt;NOTE: There is no logic or detection processes backing this property.  It is manually set and completely arbitrary. ","inlinecomment":" \t &apos; String describing the content type of the CouchAttachment.   \n \nNOTE: There is no logic or detection processes backing this property.  It is manually set and completely arbitrary. ","parentclassname":"CouchAttachment","codesamplehtml":"&amp;apos; Sample code assumes previously instantiated attachment as CouchAttachment object &lt;br /&gt;  &lt;br /&gt;Sub PrintCouchAttachmentInfo(attachment as CouchAttachment)&lt;br /&gt;    Print |attachment.Name: | &amp;amp; attachment.Name &lt;br /&gt;    Print |attachment.ContentLength: | &amp;amp; attachment.ContentLength &lt;br /&gt;    Print |attachment.ContentType: | &amp;amp; attachment.ContentType &lt;br /&gt;    Print |attachment.DiskFile: | &amp;amp; attachment.DiskFile &lt;br /&gt;End Sub ", "attributes":["SET_CONST"], "signatureelements":["Property","Get"]},{"label":"DiskFile","comment":"The LOCAL filepath to the file for a CouchAttachment object.   \n \nNOTE: This is only valid for CouchAttachments which have been created during the current session. It will be blank for CouchAttachment objects retrieved from the CouchDatabas","valuetype":"String","filenamebase":"DiskFile_Method","fqnprefix":"CouchVSE.CouchAttachment","qn":"Get.DiskFile","codesample":"&amp;apos; Sample code assumes previously instantiated attachment as CouchAttachment object \n  \nSub PrintCouchAttachmentInfo(attachment as CouchAttachment)\n    Print |attachment.Name: | &amp;amp; attachment.Name \n    Print |attachment.ContentLength: | &amp;amp; attachment.ContentLength \n    Print |attachment.ContentType: | &amp;amp; attachment.ContentType \n    Print |attachment.DiskFile: | &amp;amp; attachment.DiskFile \nEnd Sub ","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get DiskFile As String","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;The LOCAL filepath to the file for a CouchAttachment object.   &lt;br /&gt; &lt;br /&gt;NOTE: This is only valid for CouchAttachments which have been created during the current session. It will be blank for CouchAttachment objects retrieved from the CouchDatabas&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"The LOCAL filepath to the file for a CouchAttachment object.   &lt;br /&gt; &lt;br /&gt;NOTE: This is only valid for CouchAttachments which have been created during the current session. It will be blank for CouchAttachment objects retrieved from the CouchDatabas","inlinecomment":" \t &apos; The LOCAL filepath to the file for a CouchAttachment object.   \n \nNOTE: This is only valid for CouchAttachments which have been created during the current session. It will be blank for CouchAttachment objects retrieved from the CouchDatabas","parentclassname":"CouchAttachment","codesamplehtml":"&amp;apos; Sample code assumes previously instantiated attachment as CouchAttachment object &lt;br /&gt;  &lt;br /&gt;Sub PrintCouchAttachmentInfo(attachment as CouchAttachment)&lt;br /&gt;    Print |attachment.Name: | &amp;amp; attachment.Name &lt;br /&gt;    Print |attachment.ContentLength: | &amp;amp; attachment.ContentLength &lt;br /&gt;    Print |attachment.ContentType: | &amp;amp; attachment.ContentType &lt;br /&gt;    Print |attachment.DiskFile: | &amp;amp; attachment.DiskFile &lt;br /&gt;End Sub ", "attributes":["READ_ONLY","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"MD5Hash","comment":"NOT IMPLEMENTED","valuetype":"String","filenamebase":"MD5Hash_Method","fqnprefix":"CouchVSE.CouchAttachment","qn":"Get.MD5Hash","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get MD5Hash As String","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;NOT IMPLEMENTED&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"NOT IMPLEMENTED","inlinecomment":" \t &apos; NOT IMPLEMENTED","parentclassname":"CouchAttachment","codesamplehtml":"", "attributes":["READ_ONLY","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"Name","comment":"Name of the CouchAttachment.  \n \nNOTE: There is no logic or detection processes backing this property.  It is manually set and completely arbitrary. ","valuetype":"String","filenamebase":"Name_Method","fqnprefix":"CouchVSE.CouchAttachment","qn":"Get.Name","codesample":"&amp;apos; Sample code assumes previously instantiated attachment as CouchAttachment object \n  \nSub PrintCouchAttachmentInfo(attachment as CouchAttachment)\n    Print |attachment.Name: | &amp;amp; attachment.Name \n    Print |attachment.ContentLength: | &amp;amp; attachment.ContentLength \n    Print |attachment.ContentType: | &amp;amp; attachment.ContentType \n    Print |attachment.DiskFile: | &amp;amp; attachment.DiskFile","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get Name As String","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Name of the CouchAttachment.  &lt;br /&gt; &lt;br /&gt;NOTE: There is no logic or detection processes backing this property.  It is manually set and completely arbitrary. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Name of the CouchAttachment.  &lt;br /&gt; &lt;br /&gt;NOTE: There is no logic or detection processes backing this property.  It is manually set and completely arbitrary. ","inlinecomment":" \t &apos; Name of the CouchAttachment.  \n \nNOTE: There is no logic or detection processes backing this property.  It is manually set and completely arbitrary. ","parentclassname":"CouchAttachment","codesamplehtml":"&amp;apos; Sample code assumes previously instantiated attachment as CouchAttachment object &lt;br /&gt;  &lt;br /&gt;Sub PrintCouchAttachmentInfo(attachment as CouchAttachment)&lt;br /&gt;    Print |attachment.Name: | &amp;amp; attachment.Name &lt;br /&gt;    Print |attachment.ContentLength: | &amp;amp; attachment.ContentLength &lt;br /&gt;    Print |attachment.ContentType: | &amp;amp; attachment.ContentType &lt;br /&gt;    Print |attachment.DiskFile: | &amp;amp; attachment.DiskFile", "attributes":["SET_CONST"], "signatureelements":["Property","Get"]},{"label":"ParentDocument","comment":"CouchDocument object for which the CouchAttachment is associated. ","valuetype":"CouchDocument","filenamebase":"ParentDocument_Method","fqnprefix":"CouchVSE.CouchAttachment","qn":"Get.ParentDocument","codesample":"&amp;apos; Sample code assumes previously instantiated attachment as CouchAttachment object\n \nDim document As CouchDocument \n \nSet document = attachment.ParentDocument","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get ParentDocument As CouchDocument","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;CouchDocument object for which the CouchAttachment is associated. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"CouchDocument object for which the CouchAttachment is associated. ","inlinecomment":" \t &apos; CouchDocument object for which the CouchAttachment is associated. ","parentclassname":"CouchAttachment","codesamplehtml":"&amp;apos; Sample code assumes previously instantiated attachment as CouchAttachment object&lt;br /&gt; &lt;br /&gt;Dim document As CouchDocument &lt;br /&gt; &lt;br /&gt;Set document = attachment.ParentDocument", "attributes":["READ_ONLY"], "signatureelements":["Property","Get"]},{"label":"ContentType","comment":"String describing the content type of the CouchAttachment.   \n \nNOTE: There is no logic or detection processes backing this property.  It is manually set and completely arbitrary. ","valuetype":"String","filenamebase":"ContentType_Method","fqnprefix":"CouchVSE.CouchAttachment","qn":"Set.ContentType","codesample":"&amp;apos; Sample code assumes previously instantiated attachment as CouchAttachment object \n  \nSub PrintCouchAttachmentInfo(attachment as CouchAttachment)\n    Print |attachment.Name: | &amp;amp; attachment.Name \n    Print |attachment.ContentLength: | &amp;amp; attachment.ContentLength \n    Print |attachment.ContentType: | &amp;amp; attachment.ContentType \n    Print |attachment.DiskFile: | &amp;amp; attachment.DiskFile \nEnd Sub ","signaturecode":260,"instancecode":256,"argumentsuffix":"","signature":"Property Set ContentType As String","modifiers":"Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;String describing the content type of the CouchAttachment.   &lt;br /&gt; &lt;br /&gt;NOTE: There is no logic or detection processes backing this property.  It is manually set and completely arbitrary. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"String describing the content type of the CouchAttachment.   &lt;br /&gt; &lt;br /&gt;NOTE: There is no logic or detection processes backing this property.  It is manually set and completely arbitrary. ","inlinecomment":" \t &apos; String describing the content type of the CouchAttachment.   \n \nNOTE: There is no logic or detection processes backing this property.  It is manually set and completely arbitrary. ","parentclassname":"CouchAttachment","codesamplehtml":"&amp;apos; Sample code assumes previously instantiated attachment as CouchAttachment object &lt;br /&gt;  &lt;br /&gt;Sub PrintCouchAttachmentInfo(attachment as CouchAttachment)&lt;br /&gt;    Print |attachment.Name: | &amp;amp; attachment.Name &lt;br /&gt;    Print |attachment.ContentLength: | &amp;amp; attachment.ContentLength &lt;br /&gt;    Print |attachment.ContentType: | &amp;amp; attachment.ContentType &lt;br /&gt;    Print |attachment.DiskFile: | &amp;amp; attachment.DiskFile &lt;br /&gt;End Sub ", "attributes":["SET_CONST"], "signatureelements":["Property","Set"]},{"label":"Name","comment":"Name of the CouchAttachment.  \n \nNOTE: There is no logic or detection processes backing this property.  It is manually set and completely arbitrary. ","valuetype":"String","filenamebase":"Name_Method","fqnprefix":"CouchVSE.CouchAttachment","qn":"Set.Name","codesample":"&amp;apos; Sample code assumes previously instantiated attachment as CouchAttachment object \n  \nSub PrintCouchAttachmentInfo(attachment as CouchAttachment)\n    Print |attachment.Name: | &amp;amp; attachment.Name \n    Print |attachment.ContentLength: | &amp;amp; attachment.ContentLength \n    Print |attachment.ContentType: | &amp;amp; attachment.ContentType \n    Print |attachment.DiskFile: | &amp;amp; attachment.DiskFile","signaturecode":260,"instancecode":256,"argumentsuffix":"","signature":"Property Set Name As String","modifiers":"Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Name of the CouchAttachment.  &lt;br /&gt; &lt;br /&gt;NOTE: There is no logic or detection processes backing this property.  It is manually set and completely arbitrary. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Name of the CouchAttachment.  &lt;br /&gt; &lt;br /&gt;NOTE: There is no logic or detection processes backing this property.  It is manually set and completely arbitrary. ","inlinecomment":" \t &apos; Name of the CouchAttachment.  \n \nNOTE: There is no logic or detection processes backing this property.  It is manually set and completely arbitrary. ","parentclassname":"CouchAttachment","codesamplehtml":"&amp;apos; Sample code assumes previously instantiated attachment as CouchAttachment object &lt;br /&gt;  &lt;br /&gt;Sub PrintCouchAttachmentInfo(attachment as CouchAttachment)&lt;br /&gt;    Print |attachment.Name: | &amp;amp; attachment.Name &lt;br /&gt;    Print |attachment.ContentLength: | &amp;amp; attachment.ContentLength &lt;br /&gt;    Print |attachment.ContentType: | &amp;amp; attachment.ContentType &lt;br /&gt;    Print |attachment.DiskFile: | &amp;amp; attachment.DiskFile", "attributes":["SET_CONST"], "signatureelements":["Property","Set"]}]}
