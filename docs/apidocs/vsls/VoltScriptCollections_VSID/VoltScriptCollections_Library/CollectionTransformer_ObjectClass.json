{"classname":"CollectionTransformer","comment":"Class to transform elements in a Collection to something else","valuetype":"","filenamebase":"CollectionTransformer_ObjectClass","fqnprefix":"VoltScriptCollections","qn":"CollectionTransformer","codesample":"%REM\nThe following code shows how to create a transformer to convert scalars to doubles. The code is very basic with no error handling.\n%END REM\nClass DoubleTransformer as CollectionTransformer\n    Function transform(source as Variant) as Variant\n        If (IsNumeric(source)) Then\n            If (Not TypeName(source) = &amp;quot;BOOLEAN&amp;quot; And Not IsDate(source)) Then\n                transform = CDbl(source)\n            End If\n        End If\n    End Function\nEnd Class\n\nDim coll1 as New Collection(&amp;quot;SCALAR&amp;quot;, Nothing, False, False)\nDim coll2 as New Collection(&amp;quot;DOUBLE&amp;quot;, Nothing, False, False)\nDim transformer as New DoubleTransformer()\n\n&amp;apos; Populating collection omitted\n\nCall coll1.transform(transformer, coll2)","signaturecode":3072,"instancecode":1024,"classtype":"Base","projectid":"FD17E29641C6117580258994003AF3B0","version":3,"classid":"E98AE656DE43682F802589940041028C","signature":"Public Class CollectionTransformer","modifiers":"Public","classname":"CollectionTransformer","parentclassname":"None","constructorsignature":"Public Sub New()","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Class to transform elements in a Collection to something else&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Class to transform elements in a Collection to something else","inlinecomment":" \t &apos; Class to transform elements in a Collection to something else","codesamplehtml":"%REM&lt;br /&gt;The following code shows how to create a transformer to convert scalars to doubles. The code is very basic with no error handling.&lt;br /&gt;%END REM&lt;br /&gt;Class DoubleTransformer as CollectionTransformer&lt;br /&gt;    Function transform(source as Variant) as Variant&lt;br /&gt;        If (IsNumeric(source)) Then&lt;br /&gt;            If (Not TypeName(source) = &amp;quot;BOOLEAN&amp;quot; And Not IsDate(source)) Then&lt;br /&gt;                transform = CDbl(source)&lt;br /&gt;            End If&lt;br /&gt;        End If&lt;br /&gt;    End Function&lt;br /&gt;End Class&lt;br /&gt;&lt;br /&gt;Dim coll1 as New Collection(&amp;quot;SCALAR&amp;quot;, Nothing, False, False)&lt;br /&gt;Dim coll2 as New Collection(&amp;quot;DOUBLE&amp;quot;, Nothing, False, False)&lt;br /&gt;Dim transformer as New DoubleTransformer()&lt;br /&gt;&lt;br /&gt;&amp;apos; Populating collection omitted&lt;br /&gt;&lt;br /&gt;Call coll1.transform(transformer, coll2)", "methods":[{"label":"transform","comment":"Function to transform a member of a Collection. If there is no return value, the element is skipped and nothing gets added to the new Collection for this element. Thus the function can perform a filter and a transform simultaneously.","valuetype":"Variant","filenamebase":"transform_Method","fqnprefix":"VoltScriptCollections.CollectionTransformer","qn":"transform","codesample":"%REM\nThe following code shows how to create a transformer to convert scalars to doubles. The code is very basic with no error handling.\n%END REM\nClass DoubleTransformer as CollectionTransformer\n    Function transform(source as Variant) as Variant\n        If (IsNumeric(source)) Then\n            If (Not IsBoolean(source) And Not IsDate(source)) Then\n                transform = CDbl(source)\n            End If\n        End If\n    End Function\nEnd Class\nDim coll1 as New Collection(&amp;quot;SCALAR&amp;quot;, Nothing, False, False)\nDim coll2 as New Collection(&amp;quot;DOUBLE&amp;quot;, Nothing, False, False)\nDim transformer as New DoubleTransformer()\n&amp;apos; Populating collection omitted\nCall coll1.transform(transformer, coll2)","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(source As Variant)","signature":"Public Function transform(source As Variant) As Variant","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Function to transform a member of a Collection. If there is no return value, the element is skipped and nothing gets added to the new Collection for this element. Thus the function can perform a filter and a transform simultaneously.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Function to transform a member of a Collection. If there is no return value, the element is skipped and nothing gets added to the new Collection for this element. Thus the function can perform a filter and a transform simultaneously.","inlinecomment":" \t &apos; Function to transform a member of a Collection. If there is no return value, the element is skipped and nothing gets added to the new Collection for this element. Thus the function can perform a filter and a transform simultaneously.","parentclassname":"CollectionTransformer","codesamplehtml":"%REM&lt;br /&gt;The following code shows how to create a transformer to convert scalars to doubles. The code is very basic with no error handling.&lt;br /&gt;%END REM&lt;br /&gt;Class DoubleTransformer as CollectionTransformer&lt;br /&gt;    Function transform(source as Variant) as Variant&lt;br /&gt;        If (IsNumeric(source)) Then&lt;br /&gt;            If (Not IsBoolean(source) And Not IsDate(source)) Then&lt;br /&gt;                transform = CDbl(source)&lt;br /&gt;            End If&lt;br /&gt;        End If&lt;br /&gt;    End Function&lt;br /&gt;End Class&lt;br /&gt;Dim coll1 as New Collection(&amp;quot;SCALAR&amp;quot;, Nothing, False, False)&lt;br /&gt;Dim coll2 as New Collection(&amp;quot;DOUBLE&amp;quot;, Nothing, False, False)&lt;br /&gt;Dim transformer as New DoubleTransformer()&lt;br /&gt;&amp;apos; Populating collection omitted&lt;br /&gt;Call coll1.transform(transformer, coll2)", "signatureelements":["Public","Function"], "arguments":[{"label":"source","comment":"Value to transform","valuetype":"Variant","filenamebase":"source_ValuedElement","fqnprefix":"VoltScriptCollectionsCollectionTransformertransform","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Value to transform&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Value to transform","inlinecomment":" \t &apos; Value to transform"}]},{"label":"New","comment":"","valuetype":"","filenamebase":"New_Method","fqnprefix":"VoltScriptCollections.CollectionTransformer","qn":"New","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"()","signature":"Public Sub New()","modifiers":"Public","commentblock":"","commenthtml":"","inlinecomment":"","parentclassname":"CollectionTransformer","codesamplehtml":"", "signatureelements":["Public","Sub"]}]}
