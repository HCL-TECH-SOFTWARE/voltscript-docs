{"classname":"ErrorEntry","comment":"Carrier for Error information.","valuetype":"","filenamebase":"ErrorEntry_ObjectClass","fqnprefix":"VoltScriptLogging","qn":"ErrorEntry","codesample":"","signaturecode":3072,"instancecode":1024,"classtype":"Base","projectid":"7AD3BBAF0294573900258A7F004F94A5","classid":"A3DEEBD0CC6671FE85258BCB0057776B","signature":"Public Class ErrorEntry","modifiers":"Public","classname":"ErrorEntry","parentclassname":"None","constructorsignature":"Public Sub New(message As String, code As Integer, lineNum As Integer, levelNum As Integer)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Carrier for Error information.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Carrier for Error information.","inlinecomment":" \t &apos; Carrier for Error information.","codesamplehtml":"", "methods":[{"label":"getLogMessage","comment":"Summary information about the Error to be included when creating a LogEvent. ","valuetype":"String","filenamebase":"getLogMessage_Method","fqnprefix":"VoltScriptLogging.ErrorEntry","qn":"getLogMessage","codesample":"Call globalLogSession.createLogEntry(levelNum, Me.getLogMessage(), Me.stackTrace)","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"()","signature":"Public Function getLogMessage() As String","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Summary information about the Error to be included when creating a LogEvent. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Summary information about the Error to be included when creating a LogEvent. ","inlinecomment":" \t &apos; Summary information about the Error to be included when creating a LogEvent. ","parentclassname":"ErrorEntry","codesamplehtml":"Call globalLogSession.createLogEntry(levelNum, Me.getLogMessage(), Me.stackTrace)", "signatureelements":["Public","Function"]},{"label":"className","comment":"VoltScript class from which the the object creation was triggered (passed into the constructor). ","valuetype":"String","filenamebase":"className_Method","fqnprefix":"VoltScriptLogging.ErrorEntry","qn":"Get.className","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get className As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;VoltScript class from which the the object creation was triggered (passed into the constructor). &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"VoltScript class from which the the object creation was triggered (passed into the constructor). ","inlinecomment":" \t &apos; VoltScript class from which the the object creation was triggered (passed into the constructor). ","parentclassname":"ErrorEntry","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"code","comment":"Error code of the error.","valuetype":"Integer","filenamebase":"code_Method","fqnprefix":"VoltScriptLogging.ErrorEntry","qn":"Get.code","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get code As Integer","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Error code of the error.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Error code of the error.","inlinecomment":" \t &apos; Error code of the error.","parentclassname":"ErrorEntry","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"libraryName","comment":"Name of the VSS library where the object creation was triggered. ","valuetype":"String","filenamebase":"libraryName_Method","fqnprefix":"VoltScriptLogging.ErrorEntry","qn":"Get.libraryName","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get libraryName As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Name of the VSS library where the object creation was triggered. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Name of the VSS library where the object creation was triggered. ","inlinecomment":" \t &apos; Name of the VSS library where the object creation was triggered. ","parentclassname":"ErrorEntry","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"lineNum","comment":"Line number of the running code where the Error was triggered.","valuetype":"Integer","filenamebase":"lineNum_Method","fqnprefix":"VoltScriptLogging.ErrorEntry","qn":"Get.lineNum","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get lineNum As Integer","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Line number of the running code where the Error was triggered.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Line number of the running code where the Error was triggered.","inlinecomment":" \t &apos; Line number of the running code where the Error was triggered.","parentclassname":"ErrorEntry","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"message","comment":"The text message of the object (passed as an argument to the object&amp;apos;s constructor).","valuetype":"String","filenamebase":"message_Method","fqnprefix":"VoltScriptLogging.ErrorEntry","qn":"Get.message","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get message As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;The text message of the object (passed as an argument to the object&amp;apos;s constructor).&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"The text message of the object (passed as an argument to the object&amp;apos;s constructor).","inlinecomment":" \t &apos; The text message of the object (passed as an argument to the object&amp;apos;s constructor).","parentclassname":"ErrorEntry","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"methodName","comment":"Name of the method (Property, Event, Sub, or Function) where the object creation was triggered. ","valuetype":"String","filenamebase":"methodName_Method","fqnprefix":"VoltScriptLogging.ErrorEntry","qn":"Get.methodName","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get methodName As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Name of the method (Property, Event, Sub, or Function) where the object creation was triggered. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Name of the method (Property, Event, Sub, or Function) where the object creation was triggered. ","inlinecomment":" \t &apos; Name of the method (Property, Event, Sub, or Function) where the object creation was triggered. ","parentclassname":"ErrorEntry","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"stackTrace","comment":"Stack Trace of the object creation, delimited by LF, in the format of &amp;quot;libraryName, methodName, linenum&amp;quot; for each line in the stack trace.","valuetype":"String","filenamebase":"stackTrace_Method","fqnprefix":"VoltScriptLogging.ErrorEntry","qn":"Get.stackTrace","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get stackTrace As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Stack Trace of the object creation, delimited by LF, in the format of &amp;quot;libraryName, methodName, linenum&amp;quot; for each line in the stack trace.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Stack Trace of the object creation, delimited by LF, in the format of &amp;quot;libraryName, methodName, linenum&amp;quot; for each line in the stack trace.","inlinecomment":" \t &apos; Stack Trace of the object creation, delimited by LF, in the format of &amp;quot;libraryName, methodName, linenum&amp;quot; for each line in the stack trace.","parentclassname":"ErrorEntry","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"New","comment":"Constructor. This will not add the error to the ErrorSession. It is called from ErrorSession.createErrorEntry() and ErrorSession.createCustomErrorEntry()","valuetype":"","filenamebase":"New_Method","fqnprefix":"VoltScriptLogging.ErrorEntry","qn":"New","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(message As String, code As Integer, lineNum As Integer, levelNum As Integer)","signature":"Public Sub New(message As String, code As Integer, lineNum As Integer, levelNum As Integer)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Constructor. This will not add the error to the ErrorSession. It is called from ErrorSession.createErrorEntry() and ErrorSession.createCustomErrorEntry()&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Constructor. This will not add the error to the ErrorSession. It is called from ErrorSession.createErrorEntry() and ErrorSession.createCustomErrorEntry()","inlinecomment":" \t &apos; Constructor. This will not add the error to the ErrorSession. It is called from ErrorSession.createErrorEntry() and ErrorSession.createCustomErrorEntry()","parentclassname":"ErrorEntry","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"message","comment":"Error message describing the error. If code is less than 1 the value of Error$() will be used.","valuetype":"String","filenamebase":"message_ValuedElement","fqnprefix":"VoltScriptLoggingErrorEntryNew","qn":"message","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Error message describing the error. If code is less than 1 the value of Error$() will be used.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Error message describing the error. If code is less than 1 the value of Error$() will be used.","inlinecomment":" \t &apos; Error message describing the error. If code is less than 1 the value of Error$() will be used."},{"label":"code","comment":"Numeric code of the error. If less than 1 the value of Err() will be used.","valuetype":"Integer","filenamebase":"code_ValuedElement","fqnprefix":"VoltScriptLoggingErrorEntryNew","qn":"code","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Numeric code of the error. If less than 1 the value of Err() will be used.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Numeric code of the error. If less than 1 the value of Err() will be used.","inlinecomment":" \t &apos; Numeric code of the error. If less than 1 the value of Err() will be used."},{"label":"lineNum","comment":"Line number in the source code where the error occurred. If code is less than 1 the value of Erl() will be used.","valuetype":"Integer","filenamebase":"lineNum_ValuedElement","fqnprefix":"VoltScriptLoggingErrorEntryNew","qn":"lineNum","argumentindex":3,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Line number in the source code where the error occurred. If code is less than 1 the value of Erl() will be used.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Line number in the source code where the error occurred. If code is less than 1 the value of Erl() will be used.","inlinecomment":" \t &apos; Line number in the source code where the error occurred. If code is less than 1 the value of Erl() will be used."},{"label":"levelNum","comment":"the Logging Level for conditionally creating a LogEntry","valuetype":"Integer","filenamebase":"levelNum_ValuedElement","fqnprefix":"VoltScriptLoggingErrorEntryNew","qn":"levelNum","argumentindex":4,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;the Logging Level for conditionally creating a LogEntry&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"the Logging Level for conditionally creating a LogEntry","inlinecomment":" \t &apos; the Logging Level for conditionally creating a LogEntry"}]},{"label":"printSummary","comment":"Outputs a summary of the object&amp;apos;s property information to console. Only relevant for basic debugging.","valuetype":"","filenamebase":"printSummary_Method","fqnprefix":"VoltScriptLogging.ErrorEntry","qn":"printSummary","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"()","signature":"Public Sub printSummary()","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Outputs a summary of the object&amp;apos;s property information to console. Only relevant for basic debugging.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Outputs a summary of the object&amp;apos;s property information to console. Only relevant for basic debugging.","inlinecomment":" \t &apos; Outputs a summary of the object&amp;apos;s property information to console. Only relevant for basic debugging.","parentclassname":"ErrorEntry","codesamplehtml":"", "signatureelements":["Public","Sub"]}]}
