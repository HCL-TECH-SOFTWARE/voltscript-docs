{"VSIDname":"DRAPI VSE","comment":"","valuetype":"","filenamebase":"DRAPIVSE_VSID","fqnprefix":"","qn":"DRAPIVSE","codesample":"","signaturecode":131072,"instancecode":131072,"signature":"VSID DRAPI VSE","modifiers":"","vsidname":"DRAPI VSE","commentblock":"","commenthtml":"","inlinecomment":"","codesamplehtml":"", "lsxs":[{"lsxname":"DrapiVSE","comment":"Domino REST API VSE","valuetype":"","filenamebase":"DrapiVSE_VSE","fqnprefix":"DRAPIVSE","qn":"DrapiVSE","codesample":"","signaturecode":32768,"instancecode":32768,"description":"Provides access to the Domino REST API (DRAPI) in a modern style.","codesamplehtml":"","baseid":1200,"baseguid":"45D1BAE8-41F0-4659-85F3-449A74E7DB1A","characterset":"UNICODE","lsxcreator":"Chester Moses","signature":"VSE DrapiVSE","modifiers":"","lsxname":"DrapiVSE","summary":"Domino REST API VSE","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Domino REST API VSE&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Domino REST API VSE","inlinecomment":" \t &apos; Domino REST API VSE", "classes":[{"classname":"DrapiDocument","comment":"Represents a document as returned by DRAPI.","valuetype":"DrapiResponse","filenamebase":"DrapiDocument_ObjectClass","fqnprefix":"DrapiVSE","qn":"DrapiDocument","codesample":"","signaturecode":3072,"instancecode":1024,"parentclassname":"DrapiResponse","classtype":"Derived","classderivetype":"DrapiResponse","classattribnewnotexposed":"UnexposedNew","projectid":"1CE507407C8F5ECC85258C7E00690863","version":3,"classid":"53D1829CAFA2664A85258C8800717734","lsxclassid":1,"signature":"Public Class DrapiDocument As DrapiResponse","modifiers":"Public","classname":"DrapiDocument","constructorsignature":"Function New() As DrapiDocument","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Represents a document as returned by DRAPI.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Represents a document as returned by DRAPI.","inlinecomment":" \t &apos; Represents a document as returned by DRAPI.","codesamplehtml":"", "methods":[{"label":"DeleteDocument","comment":"Convenience method, equivalent to calling DrapiRequest.DeleteDocument.","valuetype":"DrapiResponse","filenamebase":"DeleteDocument_Method","fqnprefix":"DrapiVSE.DrapiDocument","qn":"DeleteDocument","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(Mode As String)","signature":"Function DeleteDocument(Mode As String) As DrapiResponse","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Convenience method, equivalent to calling DrapiRequest.DeleteDocument.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Convenience method, equivalent to calling DrapiRequest.DeleteDocument.","inlinecomment":" \t &apos; Convenience method, equivalent to calling DrapiRequest.DeleteDocument.","parentclassname":"DrapiDocument","codesamplehtml":"", "signatureelements":["Function"], "arguments":[{"label":"Mode","comment":"Mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only","valuetype":"String","filenamebase":"Mode_ValuedElement","fqnprefix":"DrapiVSEDrapiDocumentDeleteDocument","qn":"Mode","argumentindex":1,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only","inlinecomment":" \t &apos; Mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only", "attributes":["CONST","OPTIONAL"]}]},{"label":"New","comment":"","valuetype":"DrapiDocument","filenamebase":"New_Method","fqnprefix":"DrapiVSE.DrapiDocument","qn":"New","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"()","signature":"Function New() As DrapiDocument","modifiers":"","commentblock":"","commenthtml":"","inlinecomment":"","parentclassname":"DrapiDocument","codesamplehtml":"", "signatureelements":["Function"]},{"label":"Put","comment":"Convenience for saving changes to this document. Equivalent to KeepRequest.PutDocument with this document&amp;apos;s JsonBody as the body argument.","valuetype":"DrapiResponse","filenamebase":"Put_Method","fqnprefix":"DrapiVSE.DrapiDocument","qn":"Put","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(Mode As String, Revision As String, ParentUNID As String, MarkUnread As Boolean)","signature":"Function Put(Mode As String, Revision As String, ParentUNID As String, MarkUnread As Boolean) As DrapiResponse","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Convenience for saving changes to this document. Equivalent to KeepRequest.PutDocument with this document&amp;apos;s JsonBody as the body argument.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Convenience for saving changes to this document. Equivalent to KeepRequest.PutDocument with this document&amp;apos;s JsonBody as the body argument.","inlinecomment":" \t &apos; Convenience for saving changes to this document. Equivalent to KeepRequest.PutDocument with this document&amp;apos;s JsonBody as the body argument.","parentclassname":"DrapiDocument","codesamplehtml":"", "signatureelements":["Function"], "arguments":[{"label":"Mode","comment":"Mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only\nIf db config &amp;quot;requireRevisionToUpdate&amp;quot; is enabled, then revision is required when update document and only update document when revision version is right.","valuetype":"String","filenamebase":"Mode_ValuedElement","fqnprefix":"DrapiVSEDrapiDocumentPut","qn":"Mode","argumentindex":1,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only&lt;br /&gt;If db config &amp;quot;requireRevisionToUpdate&amp;quot; is enabled, then revision is required when update document and only update document when revision version is right.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only&lt;br /&gt;If db config &amp;quot;requireRevisionToUpdate&amp;quot; is enabled, then revision is required when update document and only update document when revision version is right.","inlinecomment":" \t &apos; Mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only\nIf db config &amp;quot;requireRevisionToUpdate&amp;quot; is enabled, then revision is required when update document and only update document when revision version is right.", "attributes":["CONST","OPTIONAL"]},{"label":"Revision","comment":"This field records the current revision version of document. It&amp;apos;s a 32-character hex-encoded string of date.\nIf db config &amp;quot;requireRevisionToUpdate&amp;quot; is enabled, then revision is required when update document and only update document when revision version is right.","valuetype":"String","filenamebase":"Revision_ValuedElement","fqnprefix":"DrapiVSEDrapiDocumentPut","qn":"Revision","argumentindex":2,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;This field records the current revision version of document. It&amp;apos;s a 32-character hex-encoded string of date.&lt;br /&gt;If db config &amp;quot;requireRevisionToUpdate&amp;quot; is enabled, then revision is required when update document and only update document when revision version is right.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"This field records the current revision version of document. It&amp;apos;s a 32-character hex-encoded string of date.&lt;br /&gt;If db config &amp;quot;requireRevisionToUpdate&amp;quot; is enabled, then revision is required when update document and only update document when revision version is right.","inlinecomment":" \t &apos; This field records the current revision version of document. It&amp;apos;s a 32-character hex-encoded string of date.\nIf db config &amp;quot;requireRevisionToUpdate&amp;quot; is enabled, then revision is required when update document and only update document when revision version is right.", "attributes":["CONST","OPTIONAL"]},{"label":"ParentUNID","comment":"UNID of an existing document, to make this a response document","valuetype":"String","filenamebase":"ParentUNID_ValuedElement","fqnprefix":"DrapiVSEDrapiDocumentPut","qn":"ParentUNID","argumentindex":3,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;UNID of an existing document, to make this a response document&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"UNID of an existing document, to make this a response document","inlinecomment":" \t &apos; UNID of an existing document, to make this a response document", "attributes":["CONST","OPTIONAL"]},{"label":"MarkUnread","comment":"Mark the document as unread by the current user when the operation completes.","valuetype":"Boolean","filenamebase":"MarkUnread_ValuedElement","fqnprefix":"DrapiVSEDrapiDocumentPut","qn":"MarkUnread","argumentindex":4,"optionalvalue":"LSXFalse","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Mark the document as unread by the current user when the operation completes.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Mark the document as unread by the current user when the operation completes.","inlinecomment":" \t &apos; Mark the document as unread by the current user when the operation completes.", "attributes":["CONST","OPTIONAL"]}]},{"label":"Refresh","comment":"Convenience method for calling DrapiRequest.GetDocument with the same arguments as this DrapiDocument was created with. Updates JsonBody, if applicable.","valuetype":"DrapiResponse","filenamebase":"Refresh_Method","fqnprefix":"DrapiVSE.DrapiDocument","qn":"Refresh","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(Mode As String, MarkRead As Boolean, MarkUnread As Boolean)","signature":"Function Refresh(Mode As String, MarkRead As Boolean, MarkUnread As Boolean) As DrapiResponse","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Convenience method for calling DrapiRequest.GetDocument with the same arguments as this DrapiDocument was created with. Updates JsonBody, if applicable.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Convenience method for calling DrapiRequest.GetDocument with the same arguments as this DrapiDocument was created with. Updates JsonBody, if applicable.","inlinecomment":" \t &apos; Convenience method for calling DrapiRequest.GetDocument with the same arguments as this DrapiDocument was created with. Updates JsonBody, if applicable.","parentclassname":"DrapiDocument","codesamplehtml":"", "signatureelements":["Function"], "arguments":[{"label":"Mode","comment":"mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only","valuetype":"String","filenamebase":"Mode_ValuedElement","fqnprefix":"DrapiVSEDrapiDocumentRefresh","qn":"Mode","argumentindex":1,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only","inlinecomment":" \t &apos; mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only", "attributes":["CONST","OPTIONAL"]},{"label":"MarkRead","comment":"Mark the document as read by the current user when the operation completes.","valuetype":"Boolean","filenamebase":"MarkRead_ValuedElement","fqnprefix":"DrapiVSEDrapiDocumentRefresh","qn":"MarkRead","argumentindex":2,"optionalvalue":"LSXFalse","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Mark the document as read by the current user when the operation completes.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Mark the document as read by the current user when the operation completes.","inlinecomment":" \t &apos; Mark the document as read by the current user when the operation completes.", "attributes":["CONST","OPTIONAL"]},{"label":"MarkUnread","comment":"Mark the document as unread by the current user when the operation completes.","valuetype":"Boolean","filenamebase":"MarkUnread_ValuedElement","fqnprefix":"DrapiVSEDrapiDocumentRefresh","qn":"MarkUnread","argumentindex":3,"optionalvalue":"LSXFalse","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Mark the document as unread by the current user when the operation completes.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Mark the document as unread by the current user when the operation completes.","inlinecomment":" \t &apos; Mark the document as unread by the current user when the operation completes.", "attributes":["CONST","OPTIONAL"]}]},{"label":"JsonValue","comment":"Raw JSON value representing the content of this document.","valuetype":"String","filenamebase":"JsonValue_Method","fqnprefix":"DrapiVSE.DrapiDocument","qn":"Get.JsonValue","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get JsonValue As String","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Raw JSON value representing the content of this document.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Raw JSON value representing the content of this document.","inlinecomment":" \t &apos; Raw JSON value representing the content of this document.","parentclassname":"DrapiDocument","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"Metadata","comment":"Meta data about the document, such as form name. In JSON format.","valuetype":"String","filenamebase":"Metadata_Method","fqnprefix":"DrapiVSE.DrapiDocument","qn":"Get.Metadata","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get Metadata As String","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Meta data about the document, such as form name. In JSON format.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Meta data about the document, such as form name. In JSON format.","inlinecomment":" \t &apos; Meta data about the document, such as form name. In JSON format.","parentclassname":"DrapiDocument","codesamplehtml":"", "attributes":["READ_ONLY","GET_CONST","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"ParentRequest","comment":"The DrapiRequest that created this DrapiDocument.","valuetype":"DrapiRequest","filenamebase":"ParentRequest_Method","fqnprefix":"DrapiVSE.DrapiDocument","qn":"Get.ParentRequest","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get ParentRequest As DrapiRequest","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;The DrapiRequest that created this DrapiDocument.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"The DrapiRequest that created this DrapiDocument.","inlinecomment":" \t &apos; The DrapiRequest that created this DrapiDocument.","parentclassname":"DrapiDocument","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Property","Get"]},{"label":"RichTextFormat","comment":"Format that rich test is stored as.","valuetype":"String","filenamebase":"RichTextFormat_Method","fqnprefix":"DrapiVSE.DrapiDocument","qn":"Get.RichTextFormat","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get RichTextFormat As String","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Format that rich test is stored as.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Format that rich test is stored as.","inlinecomment":" \t &apos; Format that rich test is stored as.","parentclassname":"DrapiDocument","codesamplehtml":"", "attributes":["READ_ONLY","GET_CONST","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"UNID","comment":"Universal ID of the document.","valuetype":"String","filenamebase":"UNID_Method","fqnprefix":"DrapiVSE.DrapiDocument","qn":"Get.UNID","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get UNID As String","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Universal ID of the document.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Universal ID of the document.","inlinecomment":" \t &apos; Universal ID of the document.","parentclassname":"DrapiDocument","codesamplehtml":"", "attributes":["READ_ONLY","GET_CONST","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"JsonValue","comment":"Raw JSON value representing the content of this document.","valuetype":"String","filenamebase":"JsonValue_Method","fqnprefix":"DrapiVSE.DrapiDocument","qn":"Set.JsonValue","codesample":"","signaturecode":260,"instancecode":256,"argumentsuffix":"","signature":"Property Set JsonValue As String","modifiers":"Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Raw JSON value representing the content of this document.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Raw JSON value representing the content of this document.","inlinecomment":" \t &apos; Raw JSON value representing the content of this document.","parentclassname":"DrapiDocument","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Set"]}]},{"classname":"DrapiRequest","comment":"Provides access to the Domino REST API on a per-endpoint, per-request basis. Most methods will return a DrapiResponse with the requested data, or an error message from the server.","valuetype":"","filenamebase":"DrapiRequest_ObjectClass","fqnprefix":"DrapiVSE","qn":"DrapiRequest","codesample":"","signaturecode":3072,"instancecode":1024,"classtype":"Base","classattribnewnotexposed":"UnexposedNew","projectid":"1CE507407C8F5ECC85258C7E00690863","version":3,"classid":"6C9510900023CDC885258C7E006A4085","lsxclassid":1,"signature":"Public Class DrapiRequest","modifiers":"Public","classname":"DrapiRequest","parentclassname":"None","constructorsignature":"Function New() As DrapiRequest","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Provides access to the Domino REST API on a per-endpoint, per-request basis. Most methods will return a DrapiResponse with the requested data, or an error message from the server.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Provides access to the Domino REST API on a per-endpoint, per-request basis. Most methods will return a DrapiResponse with the requested data, or an error message from the server.","inlinecomment":" \t &apos; Provides access to the Domino REST API on a per-endpoint, per-request basis. Most methods will return a DrapiResponse with the requested data, or an error message from the server.","codesamplehtml":"", "methods":[{"label":"BulkCreateDocuments","comment":"Creates multiple documents in a single request. A JSON array is returned indicating success or failure for each document.","valuetype":"DrapiResponse","filenamebase":"BulkCreateDocuments_Method","fqnprefix":"DrapiVSE.DrapiRequest","qn":"BulkCreateDocuments","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(Body As String, RichTextAs As String)","signature":"Function BulkCreateDocuments(Body As String, RichTextAs As String) As DrapiResponse","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Creates multiple documents in a single request. A JSON array is returned indicating success or failure for each document.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Creates multiple documents in a single request. A JSON array is returned indicating success or failure for each document.","inlinecomment":" \t &apos; Creates multiple documents in a single request. A JSON array is returned indicating success or failure for each document.","parentclassname":"DrapiRequest","codesamplehtml":"", "signatureelements":["Function"], "arguments":[{"label":"Body","comment":"A JSON object with a &amp;quot;documents&amp;quot; array property describing the documents to create. ","valuetype":"String","filenamebase":"Body_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestBulkCreateDocuments","qn":"Body","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;A JSON object with a &amp;quot;documents&amp;quot; array property describing the documents to create. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"A JSON object with a &amp;quot;documents&amp;quot; array property describing the documents to create. ","inlinecomment":" \t &apos; A JSON object with a &amp;quot;documents&amp;quot; array property describing the documents to create. "},{"label":"RichTextAs","comment":"The format RichText fields will be returned as. Default is &amp;quot;html&amp;quot;.","valuetype":"String","filenamebase":"RichTextAs_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestBulkCreateDocuments","qn":"RichTextAs","argumentindex":2,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;The format RichText fields will be returned as. Default is &amp;quot;html&amp;quot;.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"The format RichText fields will be returned as. Default is &amp;quot;html&amp;quot;.","inlinecomment":" \t &apos; The format RichText fields will be returned as. Default is &amp;quot;html&amp;quot;.", "attributes":["CONST","OPTIONAL"]}]},{"label":"BulkDeleteDocuments","comment":"Delete multiple documents in a request.","valuetype":"DrapiResponse","filenamebase":"BulkDeleteDocuments_Method","fqnprefix":"DrapiVSE.DrapiRequest","qn":"BulkDeleteDocuments","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(UNIDs As String Array, Mode As String)","signature":"Function BulkDeleteDocuments(UNIDs As String Array, Mode As String) As DrapiResponse","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Delete multiple documents in a request.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Delete multiple documents in a request.","inlinecomment":" \t &apos; Delete multiple documents in a request.","parentclassname":"DrapiRequest","codesamplehtml":"", "signatureelements":["Function"], "arguments":[{"label":"UNIDs","comment":"String array of universal ID&amp;apos;s of documents to delete.","valuetype":"String","filenamebase":"UNIDs_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestBulkDeleteDocuments","qn":"UNIDs","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;String array of universal ID&amp;apos;s of documents to delete.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"String array of universal ID&amp;apos;s of documents to delete.","inlinecomment":" \t &apos; String array of universal ID&amp;apos;s of documents to delete.", "attributes":["Array"]},{"label":"Mode","comment":"Mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only.","valuetype":"String","filenamebase":"Mode_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestBulkDeleteDocuments","qn":"Mode","argumentindex":2,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only.","inlinecomment":" \t &apos; Mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only.", "attributes":["CONST","OPTIONAL"]}]},{"label":"BulkFolderDocuments","comment":"Adds or removes documents from a folder.","valuetype":"DrapiResponse","filenamebase":"BulkFolderDocuments_Method","fqnprefix":"DrapiVSE.DrapiRequest","qn":"BulkFolderDocuments","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(Action As String, FolderName As String, UNIDs As String Array, Mode As String)","signature":"Function BulkFolderDocuments(Action As String, FolderName As String, UNIDs As String Array, Mode As String) As DrapiResponse","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Adds or removes documents from a folder.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Adds or removes documents from a folder.","inlinecomment":" \t &apos; Adds or removes documents from a folder.","parentclassname":"DrapiRequest","codesamplehtml":"", "signatureelements":["Function"], "arguments":[{"label":"Action","comment":"&amp;quot;remove&amp;quot; to remove documents from the folder, &amp;quot;add&amp;quot; to add documents to the folder. Other options are not allowed. Case insensitive.","valuetype":"String","filenamebase":"Action_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestBulkFolderDocuments","qn":"Action","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;&amp;quot;remove&amp;quot; to remove documents from the folder, &amp;quot;add&amp;quot; to add documents to the folder. Other options are not allowed. Case insensitive.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"&amp;quot;remove&amp;quot; to remove documents from the folder, &amp;quot;add&amp;quot; to add documents to the folder. Other options are not allowed. Case insensitive.","inlinecomment":" \t &apos; &amp;quot;remove&amp;quot; to remove documents from the folder, &amp;quot;add&amp;quot; to add documents to the folder. Other options are not allowed. Case insensitive."},{"label":"FolderName","comment":"The name of the folder to perform the action on.","valuetype":"String","filenamebase":"FolderName_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestBulkFolderDocuments","qn":"FolderName","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;The name of the folder to perform the action on.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"The name of the folder to perform the action on.","inlinecomment":" \t &apos; The name of the folder to perform the action on."},{"label":"UNIDs","comment":"String array of document UNID&amp;apos;s to perform the action on.","valuetype":"String","filenamebase":"UNIDs_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestBulkFolderDocuments","qn":"UNIDs","argumentindex":3,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;String array of document UNID&amp;apos;s to perform the action on.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"String array of document UNID&amp;apos;s to perform the action on.","inlinecomment":" \t &apos; String array of document UNID&amp;apos;s to perform the action on.", "attributes":["Array"]},{"label":"Mode","comment":"Mode to use, &amp;quot;default&amp;quot; if empty or missing.","valuetype":"String","filenamebase":"Mode_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestBulkFolderDocuments","qn":"Mode","argumentindex":4,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Mode to use, &amp;quot;default&amp;quot; if empty or missing.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Mode to use, &amp;quot;default&amp;quot; if empty or missing.","inlinecomment":" \t &apos; Mode to use, &amp;quot;default&amp;quot; if empty or missing.", "attributes":["CONST","OPTIONAL"]}]},{"label":"BulkGetDocuments","comment":"Retrieve multiple documents in a single call.","valuetype":"DrapiResponse","filenamebase":"BulkGetDocuments_Method","fqnprefix":"DrapiVSE.DrapiRequest","qn":"BulkGetDocuments","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(UNIDs As String Array, RichTextAs As String, Mode As String, Meta As Boolean)","signature":"Function BulkGetDocuments(UNIDs As String Array, RichTextAs As String, Mode As String, Meta As Boolean) As DrapiResponse","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Retrieve multiple documents in a single call.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Retrieve multiple documents in a single call.","inlinecomment":" \t &apos; Retrieve multiple documents in a single call.","parentclassname":"DrapiRequest","codesamplehtml":"", "signatureelements":["Function"], "arguments":[{"label":"UNIDs","comment":"String array of document UNID&amp;apos;s to get.","valuetype":"String","filenamebase":"UNIDs_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestBulkGetDocuments","qn":"UNIDs","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;String array of document UNID&amp;apos;s to get.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"String array of document UNID&amp;apos;s to get.","inlinecomment":" \t &apos; String array of document UNID&amp;apos;s to get.", "attributes":["Array"]},{"label":"RichTextAs","comment":"The format RichText fields will be returned. The default if unspecified is html.","valuetype":"String","filenamebase":"RichTextAs_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestBulkGetDocuments","qn":"RichTextAs","argumentindex":2,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;The format RichText fields will be returned. The default if unspecified is html.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"The format RichText fields will be returned. The default if unspecified is html.","inlinecomment":" \t &apos; The format RichText fields will be returned. The default if unspecified is html.", "attributes":["CONST","OPTIONAL"]},{"label":"Mode","comment":"Mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only.","valuetype":"String","filenamebase":"Mode_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestBulkGetDocuments","qn":"Mode","argumentindex":3,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only.","inlinecomment":" \t &apos; Mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only.", "attributes":["CONST","OPTIONAL"]},{"label":"Meta","comment":"When set to false, all metadata Json items on the top level of an object get suppressed. Default is true","valuetype":"Boolean","filenamebase":"Meta_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestBulkGetDocuments","qn":"Meta","argumentindex":4,"optionalvalue":"LSXTrue","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;When set to false, all metadata Json items on the top level of an object get suppressed. Default is true&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"When set to false, all metadata Json items on the top level of an object get suppressed. Default is true","inlinecomment":" \t &apos; When set to false, all metadata Json items on the top level of an object get suppressed. Default is true", "attributes":["CONST","OPTIONAL"]}]},{"label":"BulkPatchDocuments","comment":"Update multiple documents in a single call.","valuetype":"DrapiResponse","filenamebase":"BulkPatchDocuments_Method","fqnprefix":"DrapiVSE.DrapiRequest","qn":"BulkPatchDocuments","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(DQLQuery As String, ReplaceItems As String, RichTextAs As String, Mode As String, MaxScanDocs As Integer, NoViews As Boolean, ReturnUpdates As Boolean)","signature":"Function BulkPatchDocuments(DQLQuery As String, ReplaceItems As String, RichTextAs As String, Mode As String, MaxScanDocs As Integer, NoViews As Boolean, ReturnUpdates As Boolean) As DrapiResponse","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Update multiple documents in a single call.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Update multiple documents in a single call.","inlinecomment":" \t &apos; Update multiple documents in a single call.","parentclassname":"DrapiRequest","codesamplehtml":"", "signatureelements":["Function"], "arguments":[{"label":"DQLQuery","comment":"DQL string used to identify documents to update. &amp;quot;query&amp;quot; field of body sent.","valuetype":"String","filenamebase":"DQLQuery_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestBulkPatchDocuments","qn":"DQLQuery","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;DQL string used to identify documents to update. &amp;quot;query&amp;quot; field of body sent.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"DQL string used to identify documents to update. &amp;quot;query&amp;quot; field of body sent.","inlinecomment":" \t &apos; DQL string used to identify documents to update. &amp;quot;query&amp;quot; field of body sent."},{"label":"ReplaceItems","comment":"JSON string of items to replace. &amp;quot;replaceItems&amp;quot; field of body sent.","valuetype":"String","filenamebase":"ReplaceItems_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestBulkPatchDocuments","qn":"ReplaceItems","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;JSON string of items to replace. &amp;quot;replaceItems&amp;quot; field of body sent.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"JSON string of items to replace. &amp;quot;replaceItems&amp;quot; field of body sent.","inlinecomment":" \t &apos; JSON string of items to replace. &amp;quot;replaceItems&amp;quot; field of body sent."},{"label":"RichTextAs","comment":"The format RichText fields will be returned as. Default is &amp;quot;html&amp;quot;.","valuetype":"String","filenamebase":"RichTextAs_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestBulkPatchDocuments","qn":"RichTextAs","argumentindex":3,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;The format RichText fields will be returned as. Default is &amp;quot;html&amp;quot;.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"The format RichText fields will be returned as. Default is &amp;quot;html&amp;quot;.","inlinecomment":" \t &apos; The format RichText fields will be returned as. Default is &amp;quot;html&amp;quot;.", "attributes":["CONST","OPTIONAL"]},{"label":"Mode","comment":"Form Access Mode to use when updating documents","valuetype":"String","filenamebase":"Mode_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestBulkPatchDocuments","qn":"Mode","argumentindex":4,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Form Access Mode to use when updating documents&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Form Access Mode to use when updating documents","inlinecomment":" \t &apos; Form Access Mode to use when updating documents", "attributes":["CONST","OPTIONAL"]},{"label":"MaxScanDocs","comment":"Maximum number of documents to scan.","valuetype":"Integer-Unsigned","filenamebase":"MaxScanDocs_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestBulkPatchDocuments","qn":"MaxScanDocs","argumentindex":5,"optionalvalue":0,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Maximum number of documents to scan.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Maximum number of documents to scan.","inlinecomment":" \t &apos; Maximum number of documents to scan.", "attributes":["CONST","OPTIONAL"]},{"label":"NoViews","comment":"Whether to use views when performing DQL query","valuetype":"Boolean","filenamebase":"NoViews_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestBulkPatchDocuments","qn":"NoViews","argumentindex":6,"optionalvalue":"LSXFalse","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Whether to use views when performing DQL query&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Whether to use views when performing DQL query","inlinecomment":" \t &apos; Whether to use views when performing DQL query", "attributes":["CONST","OPTIONAL"]},{"label":"ReturnUpdates","comment":"Whether to return document content for updated documents or just a summary status update JSON object of documents upated","valuetype":"Boolean","filenamebase":"ReturnUpdates_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestBulkPatchDocuments","qn":"ReturnUpdates","argumentindex":7,"optionalvalue":"LSXFalse","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Whether to return document content for updated documents or just a summary status update JSON object of documents upated&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Whether to return document content for updated documents or just a summary status update JSON object of documents upated","inlinecomment":" \t &apos; Whether to return document content for updated documents or just a summary status update JSON object of documents upated", "attributes":["CONST","OPTIONAL"]}]},{"label":"CreateAttachment","comment":"Creates a new attachment in an existing document, using the provided file path.","valuetype":"DrapiResponse","filenamebase":"CreateAttachment_Method","fqnprefix":"DrapiVSE.DrapiRequest","qn":"CreateAttachment","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(UNID As String, SourceFile As String, FieldName As String)","signature":"Function CreateAttachment(UNID As String, SourceFile As String, FieldName As String) As DrapiResponse","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Creates a new attachment in an existing document, using the provided file path.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Creates a new attachment in an existing document, using the provided file path.","inlinecomment":" \t &apos; Creates a new attachment in an existing document, using the provided file path.","parentclassname":"DrapiRequest","codesamplehtml":"", "signatureelements":["Function"], "arguments":[{"label":"UNID","comment":"Universal Id of the document to be acted upon.","valuetype":"String","filenamebase":"UNID_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestCreateAttachment","qn":"UNID","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Universal Id of the document to be acted upon.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Universal Id of the document to be acted upon.","inlinecomment":" \t &apos; Universal Id of the document to be acted upon."},{"label":"SourceFile","comment":"Path of the file to attach from the local file system.","valuetype":"String","filenamebase":"SourceFile_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestCreateAttachment","qn":"SourceFile","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Path of the file to attach from the local file system.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Path of the file to attach from the local file system.","inlinecomment":" \t &apos; Path of the file to attach from the local file system."},{"label":"FieldName","comment":"Name of the rich text field to attach this attachment to. If this is empty, the attachment is attached to the document.","valuetype":"String","filenamebase":"FieldName_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestCreateAttachment","qn":"FieldName","argumentindex":3,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Name of the rich text field to attach this attachment to. If this is empty, the attachment is attached to the document.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Name of the rich text field to attach this attachment to. If this is empty, the attachment is attached to the document.","inlinecomment":" \t &apos; Name of the rich text field to attach this attachment to. If this is empty, the attachment is attached to the document.", "attributes":["CONST","OPTIONAL"]}]},{"label":"CreateDocument","comment":"Create a new document for the request&amp;apos;s scope.","valuetype":"DrapiDocument","filenamebase":"CreateDocument_Method","fqnprefix":"DrapiVSE.DrapiRequest","qn":"CreateDocument","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(JSONBody As String, RichTextAs As String, ParentUNID As String)","signature":"Function CreateDocument(JSONBody As String, RichTextAs As String, ParentUNID As String) As DrapiDocument","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Create a new document for the request&amp;apos;s scope.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Create a new document for the request&amp;apos;s scope.","inlinecomment":" \t &apos; Create a new document for the request&amp;apos;s scope.","parentclassname":"DrapiRequest","codesamplehtml":"", "signatureelements":["Function"], "arguments":[{"label":"JSONBody","comment":"Document body in JSON format. Key/value pairs of fields and their values to update, &amp;apos;Form&amp;apos; is required.","valuetype":"String","filenamebase":"JSONBody_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestCreateDocument","qn":"JSONBody","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Document body in JSON format. Key/value pairs of fields and their values to update, &amp;apos;Form&amp;apos; is required.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Document body in JSON format. Key/value pairs of fields and their values to update, &amp;apos;Form&amp;apos; is required.","inlinecomment":" \t &apos; Document body in JSON format. Key/value pairs of fields and their values to update, &amp;apos;Form&amp;apos; is required."},{"label":"RichTextAs","comment":"The format RichText fields will be returned. The default if unspecified is mime.","valuetype":"String","filenamebase":"RichTextAs_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestCreateDocument","qn":"RichTextAs","argumentindex":2,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;The format RichText fields will be returned. The default if unspecified is mime.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"The format RichText fields will be returned. The default if unspecified is mime.","inlinecomment":" \t &apos; The format RichText fields will be returned. The default if unspecified is mime.", "attributes":["CONST","OPTIONAL"]},{"label":"ParentUNID","comment":"UNID of an existing document, to make this a response document.","valuetype":"String","filenamebase":"ParentUNID_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestCreateDocument","qn":"ParentUNID","argumentindex":3,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;UNID of an existing document, to make this a response document.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"UNID of an existing document, to make this a response document.","inlinecomment":" \t &apos; UNID of an existing document, to make this a response document.", "attributes":["CONST","OPTIONAL"]}]},{"label":"CreateDocumentRaw","comment":"Create a new document for a specified form without data conversion.","valuetype":"DrapiResponse","filenamebase":"CreateDocumentRaw_Method","fqnprefix":"DrapiVSE.DrapiRequest","qn":"CreateDocumentRaw","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(Form As String, JSONBody As String, ParentUNID As String)","signature":"Function CreateDocumentRaw(Form As String, JSONBody As String, ParentUNID As String) As DrapiResponse","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Create a new document for a specified form without data conversion.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Create a new document for a specified form without data conversion.","inlinecomment":" \t &apos; Create a new document for a specified form without data conversion.","parentclassname":"DrapiRequest","codesamplehtml":"", "signatureelements":["Function"], "arguments":[{"label":"Form","comment":"Name of the form to create a document for.","valuetype":"String","filenamebase":"Form_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestCreateDocumentRaw","qn":"Form","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Name of the form to create a document for.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Name of the form to create a document for.","inlinecomment":" \t &apos; Name of the form to create a document for."},{"label":"JSONBody","comment":"Document body in JSON format. Key/value pairs of fields and their values to update, &amp;apos;Form&amp;apos; is required.","valuetype":"String","filenamebase":"JSONBody_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestCreateDocumentRaw","qn":"JSONBody","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Document body in JSON format. Key/value pairs of fields and their values to update, &amp;apos;Form&amp;apos; is required.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Document body in JSON format. Key/value pairs of fields and their values to update, &amp;apos;Form&amp;apos; is required.","inlinecomment":" \t &apos; Document body in JSON format. Key/value pairs of fields and their values to update, &amp;apos;Form&amp;apos; is required."},{"label":"ParentUNID","comment":"UNID of an existing document, to make this a response document","valuetype":"String","filenamebase":"ParentUNID_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestCreateDocumentRaw","qn":"ParentUNID","argumentindex":3,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;UNID of an existing document, to make this a response document&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"UNID of an existing document, to make this a response document","inlinecomment":" \t &apos; UNID of an existing document, to make this a response document", "attributes":["CONST","OPTIONAL"]}]},{"label":"DeleteAttachment","comment":"Removes an attachment from a document.","valuetype":"DrapiResponse","filenamebase":"DeleteAttachment_Method","fqnprefix":"DrapiVSE.DrapiRequest","qn":"DeleteAttachment","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(UNID As String, AttachmentName As String, FieldName As String)","signature":"Function DeleteAttachment(UNID As String, AttachmentName As String, FieldName As String) As DrapiResponse","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Removes an attachment from a document.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Removes an attachment from a document.","inlinecomment":" \t &apos; Removes an attachment from a document.","parentclassname":"DrapiRequest","codesamplehtml":"", "signatureelements":["Function"], "arguments":[{"label":"UNID","comment":"Universal Id of the document to be acted upon.","valuetype":"String","filenamebase":"UNID_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestDeleteAttachment","qn":"UNID","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Universal Id of the document to be acted upon.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Universal Id of the document to be acted upon.","inlinecomment":" \t &apos; Universal Id of the document to be acted upon."},{"label":"AttachmentName","comment":"Name of the attachment to delete.","valuetype":"String","filenamebase":"AttachmentName_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestDeleteAttachment","qn":"AttachmentName","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Name of the attachment to delete.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Name of the attachment to delete.","inlinecomment":" \t &apos; Name of the attachment to delete."},{"label":"FieldName","comment":"Name of the field in which the attachment resides. Pass this to remove the hotspot for the attachment from that rich text field, otherwise the hotspot will remain. If the attachment is attached directly to the document, not a field, there is not need to do this.","valuetype":"String","filenamebase":"FieldName_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestDeleteAttachment","qn":"FieldName","argumentindex":3,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Name of the field in which the attachment resides. Pass this to remove the hotspot for the attachment from that rich text field, otherwise the hotspot will remain. If the attachment is attached directly to the document, not a field, there is not need to do this.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Name of the field in which the attachment resides. Pass this to remove the hotspot for the attachment from that rich text field, otherwise the hotspot will remain. If the attachment is attached directly to the document, not a field, there is not need to do this.","inlinecomment":" \t &apos; Name of the field in which the attachment resides. Pass this to remove the hotspot for the attachment from that rich text field, otherwise the hotspot will remain. If the attachment is attached directly to the document, not a field, there is not need to do this.", "attributes":["CONST","OPTIONAL"]}]},{"label":"DeleteDocument","comment":"Deletes the specified document.","valuetype":"DrapiResponse","filenamebase":"DeleteDocument_Method","fqnprefix":"DrapiVSE.DrapiRequest","qn":"DeleteDocument","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(UNID As String, Mode As String)","signature":"Function DeleteDocument(UNID As String, Mode As String) As DrapiResponse","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Deletes the specified document.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Deletes the specified document.","inlinecomment":" \t &apos; Deletes the specified document.","parentclassname":"DrapiRequest","codesamplehtml":"", "signatureelements":["Function"], "arguments":[{"label":"UNID","comment":"Universal ID of the document to be acted upon.","valuetype":"String","filenamebase":"UNID_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestDeleteDocument","qn":"UNID","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Universal ID of the document to be acted upon.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Universal ID of the document to be acted upon.","inlinecomment":" \t &apos; Universal ID of the document to be acted upon."},{"label":"Mode","comment":"Mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only.","valuetype":"String","filenamebase":"Mode_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestDeleteDocument","qn":"Mode","argumentindex":2,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only.","inlinecomment":" \t &apos; Mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only.", "attributes":["CONST","OPTIONAL"]}]},{"label":"DeleteNamedDocument","comment":"Delete a named document.","valuetype":"DrapiResponse","filenamebase":"DeleteNamedDocument_Method","fqnprefix":"DrapiVSE.DrapiRequest","qn":"DeleteNamedDocument","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(Name As String, Key As String, User As Boolean)","signature":"Function DeleteNamedDocument(Name As String, Key As String, User As Boolean) As DrapiResponse","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Delete a named document.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Delete a named document.","inlinecomment":" \t &apos; Delete a named document.","parentclassname":"DrapiRequest","codesamplehtml":"", "signatureelements":["Function"], "arguments":[{"label":"Name","comment":"The name of the named document to delete.","valuetype":"String","filenamebase":"Name_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestDeleteNamedDocument","qn":"Name","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;The name of the named document to delete.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"The name of the named document to delete.","inlinecomment":" \t &apos; The name of the named document to delete."},{"label":"Key","comment":"Named document key. Leave blank if setting the user parameter to true.","valuetype":"String","filenamebase":"Key_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestDeleteNamedDocument","qn":"Key","argumentindex":2,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Named document key. Leave blank if setting the user parameter to true.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Named document key. Leave blank if setting the user parameter to true.","inlinecomment":" \t &apos; Named document key. Leave blank if setting the user parameter to true.", "attributes":["CONST","OPTIONAL"]},{"label":"User","comment":"Override key with the current user name.","valuetype":"Boolean","filenamebase":"User_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestDeleteNamedDocument","qn":"User","argumentindex":3,"optionalvalue":"LSXFalse","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Override key with the current user name.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Override key with the current user name.","inlinecomment":" \t &apos; Override key with the current user name.", "attributes":["CONST","OPTIONAL"]}]},{"label":"DeleteProfileDocument","comment":"Delete a profile document.","valuetype":"DrapiResponse","filenamebase":"DeleteProfileDocument_Method","fqnprefix":"DrapiVSE.DrapiRequest","qn":"DeleteProfileDocument","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(ProfileName As String, Key As String, User As Boolean)","signature":"Function DeleteProfileDocument(ProfileName As String, Key As String, User As Boolean) As DrapiResponse","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Delete a profile document.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Delete a profile document.","inlinecomment":" \t &apos; Delete a profile document.","parentclassname":"DrapiRequest","codesamplehtml":"", "signatureelements":["Function"], "arguments":[{"label":"ProfileName","comment":"The name of the profile document.","valuetype":"String","filenamebase":"ProfileName_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestDeleteProfileDocument","qn":"ProfileName","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;The name of the profile document.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"The name of the profile document.","inlinecomment":" \t &apos; The name of the profile document."},{"label":"Key","comment":"Profile document key. Leave blank if setting the user parameter to true.","valuetype":"String","filenamebase":"Key_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestDeleteProfileDocument","qn":"Key","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Profile document key. Leave blank if setting the user parameter to true.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Profile document key. Leave blank if setting the user parameter to true.","inlinecomment":" \t &apos; Profile document key. Leave blank if setting the user parameter to true.", "attributes":["CONST","OPTIONAL"]},{"label":"User","comment":"Override key with the current user name.","valuetype":"Boolean","filenamebase":"User_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestDeleteProfileDocument","qn":"User","argumentindex":3,"optionalvalue":"LSXFalse","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Override key with the current user name.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Override key with the current user name.","inlinecomment":" \t &apos; Override key with the current user name.", "attributes":["CONST","OPTIONAL"]}]},{"label":"DQLQuery","comment":"Send a DQL query and get JSON documents back.","valuetype":"DrapiResponse","filenamebase":"DQLQuery_Method","fqnprefix":"DrapiVSE.DrapiRequest","qn":"DQLQuery","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(JSONBody As String, Action As String, Count As Integer, Start As Integer, RichTextAs As String)","signature":"Function DQLQuery(JSONBody As String, Action As String, Count As Integer, Start As Integer, RichTextAs As String) As DrapiResponse","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Send a DQL query and get JSON documents back.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Send a DQL query and get JSON documents back.","inlinecomment":" \t &apos; Send a DQL query and get JSON documents back.","parentclassname":"DrapiRequest","codesamplehtml":"", "signatureelements":["Function"], "arguments":[{"label":"JSONBody","comment":"JSON body to be sent to /query POST endpoint.","valuetype":"String","filenamebase":"JSONBody_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestDQLQuery","qn":"JSONBody","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;JSON body to be sent to /query POST endpoint.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"JSON body to be sent to /query POST endpoint.","inlinecomment":" \t &apos; JSON body to be sent to /query POST endpoint."},{"label":"Action","comment":"What shall be executed: parse the query, explain or execute. (TODO: enums / constants)","valuetype":"String","filenamebase":"Action_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestDQLQuery","qn":"Action","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;What shall be executed: parse the query, explain or execute. (TODO: enums / constants)&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"What shall be executed: parse the query, explain or execute. (TODO: enums / constants)","inlinecomment":" \t &apos; What shall be executed: parse the query, explain or execute. (TODO: enums / constants)"},{"label":"Count","comment":"How many entries shall be returned, default = Integer.MaxInteger","valuetype":"Integer-Unsigned","filenamebase":"Count_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestDQLQuery","qn":"Count","argumentindex":3,"optionalvalue":0,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;How many entries shall be returned, default = Integer.MaxInteger&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"How many entries shall be returned, default = Integer.MaxInteger","inlinecomment":" \t &apos; How many entries shall be returned, default = Integer.MaxInteger", "attributes":["CONST","OPTIONAL"]},{"label":"Start","comment":"at which entry should return values start (zero based), default = 0","valuetype":"Integer-Unsigned","filenamebase":"Start_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestDQLQuery","qn":"Start","argumentindex":4,"optionalvalue":0,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;at which entry should return values start (zero based), default = 0&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"at which entry should return values start (zero based), default = 0","inlinecomment":" \t &apos; at which entry should return values start (zero based), default = 0", "attributes":["CONST","OPTIONAL"]},{"label":"RichTextAs","comment":"The format of RichText. HTML is default","valuetype":"String","filenamebase":"RichTextAs_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestDQLQuery","qn":"RichTextAs","argumentindex":5,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;The format of RichText. HTML is default&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"The format of RichText. HTML is default","inlinecomment":" \t &apos; The format of RichText. HTML is default", "attributes":["CONST","OPTIONAL"]}]},{"label":"GetAttachment","comment":"Get the attachment of a document, saving it to a local file.\nExisting local files will not be overwritten on an error.","valuetype":"DrapiResponse","filenamebase":"GetAttachment_Method","fqnprefix":"DrapiVSE.DrapiRequest","qn":"GetAttachment","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(UNID As String, AttachmentName As String, DestinationFile As String, Overwrite As Boolean)","signature":"Function GetAttachment(UNID As String, AttachmentName As String, DestinationFile As String, Overwrite As Boolean) As DrapiResponse","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Get the attachment of a document, saving it to a local file.&lt;br /&gt;Existing local files will not be overwritten on an error.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Get the attachment of a document, saving it to a local file.&lt;br /&gt;Existing local files will not be overwritten on an error.","inlinecomment":" \t &apos; Get the attachment of a document, saving it to a local file.\nExisting local files will not be overwritten on an error.","parentclassname":"DrapiRequest","codesamplehtml":"", "signatureelements":["Function"], "arguments":[{"label":"UNID","comment":"Universal Id of the document to be acted upon.","valuetype":"String","filenamebase":"UNID_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestGetAttachment","qn":"UNID","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Universal Id of the document to be acted upon.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Universal Id of the document to be acted upon.","inlinecomment":" \t &apos; Universal Id of the document to be acted upon."},{"label":"AttachmentName","comment":"Name of the attachment to get.","valuetype":"String","filenamebase":"AttachmentName_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestGetAttachment","qn":"AttachmentName","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Name of the attachment to get.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Name of the attachment to get.","inlinecomment":" \t &apos; Name of the attachment to get."},{"label":"DestinationFile","comment":"Name of attachment file to create.","valuetype":"String","filenamebase":"DestinationFile_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestGetAttachment","qn":"DestinationFile","argumentindex":3,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Name of attachment file to create.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Name of attachment file to create.","inlinecomment":" \t &apos; Name of attachment file to create."},{"label":"Overwrite","comment":"If the existing file for DestinationFile should be overwritten if it already exists. Defaults to false.","valuetype":"Boolean","filenamebase":"Overwrite_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestGetAttachment","qn":"Overwrite","argumentindex":4,"optionalvalue":"LSXFalse","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;If the existing file for DestinationFile should be overwritten if it already exists. Defaults to false.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"If the existing file for DestinationFile should be overwritten if it already exists. Defaults to false.","inlinecomment":" \t &apos; If the existing file for DestinationFile should be overwritten if it already exists. Defaults to false.", "attributes":["CONST","OPTIONAL"]}]},{"label":"GetAttachmentNames","comment":"Retrieves a list of all attachments on a document.","valuetype":"DrapiResponse","filenamebase":"GetAttachmentNames_Method","fqnprefix":"DrapiVSE.DrapiRequest","qn":"GetAttachmentNames","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(UNID As String, IncludeEmbedded As Boolean, IncludeProtocolURL As Boolean)","signature":"Function GetAttachmentNames(UNID As String, IncludeEmbedded As Boolean, IncludeProtocolURL As Boolean) As DrapiResponse","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Retrieves a list of all attachments on a document.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Retrieves a list of all attachments on a document.","inlinecomment":" \t &apos; Retrieves a list of all attachments on a document.","parentclassname":"DrapiRequest","codesamplehtml":"", "signatureelements":["Function"], "arguments":[{"label":"UNID","comment":"Universal Id of the document to be acted upon.","valuetype":"String","filenamebase":"UNID_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestGetAttachmentNames","qn":"UNID","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Universal Id of the document to be acted upon.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Universal Id of the document to be acted upon.","inlinecomment":" \t &apos; Universal Id of the document to be acted upon."},{"label":"IncludeEmbedded","comment":"If set to true will also parse the RichText fields for embedded files and return their path.","valuetype":"Boolean","filenamebase":"IncludeEmbedded_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestGetAttachmentNames","qn":"IncludeEmbedded","argumentindex":2,"optionalvalue":"LSXFalse","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;If set to true will also parse the RichText fields for embedded files and return their path.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"If set to true will also parse the RichText fields for embedded files and return their path.","inlinecomment":" \t &apos; If set to true will also parse the RichText fields for embedded files and return their path.", "attributes":["CONST","OPTIONAL"]},{"label":"IncludeProtocolURL","comment":"If set to true, the response will change to also return protocol URLs on attachments that has a supported protocol for its extensions.","valuetype":"Boolean","filenamebase":"IncludeProtocolURL_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestGetAttachmentNames","qn":"IncludeProtocolURL","argumentindex":3,"optionalvalue":"LSXFalse","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;If set to true, the response will change to also return protocol URLs on attachments that has a supported protocol for its extensions.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"If set to true, the response will change to also return protocol URLs on attachments that has a supported protocol for its extensions.","inlinecomment":" \t &apos; If set to true, the response will change to also return protocol URLs on attachments that has a supported protocol for its extensions.", "attributes":["CONST","OPTIONAL"]}]},{"label":"GetDocument","comment":"Retrives a given document in the specified mode.","valuetype":"DrapiDocument","filenamebase":"GetDocument_Method","fqnprefix":"DrapiVSE.DrapiRequest","qn":"GetDocument","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(UNID As String, RichTextAs As String, FormMode As String, MarkRead As Boolean, MarkUnread As Boolean)","signature":"Function GetDocument(UNID As String, RichTextAs As String, FormMode As String, MarkRead As Boolean, MarkUnread As Boolean) As DrapiDocument","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Retrives a given document in the specified mode.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Retrives a given document in the specified mode.","inlinecomment":" \t &apos; Retrives a given document in the specified mode.","parentclassname":"DrapiRequest","codesamplehtml":"", "signatureelements":["Function"], "arguments":[{"label":"UNID","comment":"Universal Id of the document to be acted upon","valuetype":"String","filenamebase":"UNID_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestGetDocument","qn":"UNID","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Universal Id of the document to be acted upon&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Universal Id of the document to be acted upon","inlinecomment":" \t &apos; Universal Id of the document to be acted upon"},{"label":"RichTextAs","comment":"The format RichText fields will be returned. The default if unspecified is html.","valuetype":"String","filenamebase":"RichTextAs_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestGetDocument","qn":"RichTextAs","argumentindex":2,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;The format RichText fields will be returned. The default if unspecified is html.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"The format RichText fields will be returned. The default if unspecified is html.","inlinecomment":" \t &apos; The format RichText fields will be returned. The default if unspecified is html.", "attributes":["CONST","OPTIONAL"]},{"label":"FormMode","comment":"Mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only.","valuetype":"String","filenamebase":"FormMode_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestGetDocument","qn":"FormMode","argumentindex":3,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only.","inlinecomment":" \t &apos; Mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only.", "attributes":["CONST","OPTIONAL"]},{"label":"MarkRead","comment":"Mark the document as read by the current user when the operation completes.","valuetype":"Boolean","filenamebase":"MarkRead_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestGetDocument","qn":"MarkRead","argumentindex":4,"optionalvalue":"LSXFalse","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Mark the document as read by the current user when the operation completes.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Mark the document as read by the current user when the operation completes.","inlinecomment":" \t &apos; Mark the document as read by the current user when the operation completes.", "attributes":["CONST","OPTIONAL"]},{"label":"MarkUnread","comment":"Mark the document as unread by the current user when the operation completes","valuetype":"Boolean","filenamebase":"MarkUnread_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestGetDocument","qn":"MarkUnread","argumentindex":5,"optionalvalue":"LSXFalse","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Mark the document as unread by the current user when the operation completes&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Mark the document as unread by the current user when the operation completes","inlinecomment":" \t &apos; Mark the document as unread by the current user when the operation completes", "attributes":["CONST","OPTIONAL"]}]},{"label":"GetDocumentMeta","comment":"Retrieves document meta data including the form name ","valuetype":"DrapiResponse","filenamebase":"GetDocumentMeta_Method","fqnprefix":"DrapiVSE.DrapiRequest","qn":"GetDocumentMeta","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(UNID As String)","signature":"Function GetDocumentMeta(UNID As String) As DrapiResponse","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Retrieves document meta data including the form name &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Retrieves document meta data including the form name ","inlinecomment":" \t &apos; Retrieves document meta data including the form name ","parentclassname":"DrapiRequest","codesamplehtml":"", "signatureelements":["Function"], "arguments":[{"label":"UNID","comment":"Universal Id of the document to be acted upon.","valuetype":"String","filenamebase":"UNID_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestGetDocumentMeta","qn":"UNID","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Universal Id of the document to be acted upon.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Universal Id of the document to be acted upon.","inlinecomment":" \t &apos; Universal Id of the document to be acted upon."}]},{"label":"GetDocumentModes","comment":"Returns the modes available and fields that can be edited.","valuetype":"DrapiResponse","filenamebase":"GetDocumentModes_Method","fqnprefix":"DrapiVSE.DrapiRequest","qn":"GetDocumentModes","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(UNID As String)","signature":"Function GetDocumentModes(UNID As String) As DrapiResponse","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Returns the modes available and fields that can be edited.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Returns the modes available and fields that can be edited.","inlinecomment":" \t &apos; Returns the modes available and fields that can be edited.","parentclassname":"DrapiRequest","codesamplehtml":"", "signatureelements":["Function"], "arguments":[{"label":"UNID","comment":"Universal Id of the document to be acted upon.","valuetype":"String","filenamebase":"UNID_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestGetDocumentModes","qn":"UNID","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Universal Id of the document to be acted upon.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Universal Id of the document to be acted upon.","inlinecomment":" \t &apos; Universal Id of the document to be acted upon."}]},{"label":"GetDocumentRaw","comment":"All items are returned, no item name normalization or translation is applied No schema to normalize or filter the document is applied. Json is returned as-is from the Note.\nTo be able to use this endpoint a form mode &amp;quot;raw&amp;quot; must exist for the value of &amp;quot;form&amp;quot; item in the document and the current user needs the permission (set by formula in the &amp;quot;raw&amp;quot; mode) to use the mode\nUse on your own risk!","valuetype":"DrapiResponse","filenamebase":"GetDocumentRaw_Method","fqnprefix":"DrapiVSE.DrapiRequest","qn":"GetDocumentRaw","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(UNID As String)","signature":"Function GetDocumentRaw(UNID As String) As DrapiResponse","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;All items are returned, no item name normalization or translation is applied No schema to normalize or filter the document is applied. Json is returned as-is from the Note.&lt;br /&gt;To be able to use this endpoint a form mode &amp;quot;raw&amp;quot; must exist for the value of &amp;quot;form&amp;quot; item in the document and the current user needs the permission (set by formula in the &amp;quot;raw&amp;quot; mode) to use the mode&lt;br /&gt;Use on your own risk!&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"All items are returned, no item name normalization or translation is applied No schema to normalize or filter the document is applied. Json is returned as-is from the Note.&lt;br /&gt;To be able to use this endpoint a form mode &amp;quot;raw&amp;quot; must exist for the value of &amp;quot;form&amp;quot; item in the document and the current user needs the permission (set by formula in the &amp;quot;raw&amp;quot; mode) to use the mode&lt;br /&gt;Use on your own risk!","inlinecomment":" \t &apos; All items are returned, no item name normalization or translation is applied No schema to normalize or filter the document is applied. Json is returned as-is from the Note.\nTo be able to use this endpoint a form mode &amp;quot;raw&amp;quot; must exist for the value of &amp;quot;form&amp;quot; item in the document and the current user needs the permission (set by formula in the &amp;quot;raw&amp;quot; mode) to use the mode\nUse on your own risk!","parentclassname":"DrapiRequest","codesamplehtml":"", "signatureelements":["Function"], "arguments":[{"label":"UNID","comment":"Universal Id of the document to be acted upon.","valuetype":"String","filenamebase":"UNID_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestGetDocumentRaw","qn":"UNID","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Universal Id of the document to be acted upon.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Universal Id of the document to be acted upon.","inlinecomment":" \t &apos; Universal Id of the document to be acted upon."}]},{"label":"GetDQLQueryResultsProcessor","comment":"Send a DQL query and get JSON QRP results back.","valuetype":"DrapiResponse","filenamebase":"GetDQLQueryResultsProcessor_Method","fqnprefix":"DrapiVSE.DrapiRequest","qn":"GetDQLQueryResultsProcessor","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(JSONBody As String, Count As Long, Layout As String)","signature":"Function GetDQLQueryResultsProcessor(JSONBody As String, Count As Long, Layout As String) As DrapiResponse","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Send a DQL query and get JSON QRP results back.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Send a DQL query and get JSON QRP results back.","inlinecomment":" \t &apos; Send a DQL query and get JSON QRP results back.","parentclassname":"DrapiRequest","codesamplehtml":"", "signatureelements":["Function"], "arguments":[{"label":"JSONBody","comment":"Body of request to send to /query/qrp/json","valuetype":"String","filenamebase":"JSONBody_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestGetDQLQueryResultsProcessor","qn":"JSONBody","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Body of request to send to /query/qrp/json&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Body of request to send to /query/qrp/json","inlinecomment":" \t &apos; Body of request to send to /query/qrp/json"},{"label":"Count","comment":"How many entries shall be returned, default = Integer.MaxInteger","valuetype":"Long-Unsigned","filenamebase":"Count_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestGetDQLQueryResultsProcessor","qn":"Count","argumentindex":2,"optionalvalue":0,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;How many entries shall be returned, default = Integer.MaxInteger&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"How many entries shall be returned, default = Integer.MaxInteger","inlinecomment":" \t &apos; How many entries shall be returned, default = Integer.MaxInteger", "attributes":["CONST","OPTIONAL"]},{"label":"Layout","comment":"Name of the layout to use for output. When a layout value is provided, the column array gets ignored and the column definitions are read from the database schema (since 1.1.3). The layout can contain formula in the coumn definition. Specifying a non-existing layout name results in a 400 error. Requiring a layout to use formula mitigates the risk of Formula-phishing around the barbecan field protection.","valuetype":"String","filenamebase":"Layout_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestGetDQLQueryResultsProcessor","qn":"Layout","argumentindex":3,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Name of the layout to use for output. When a layout value is provided, the column array gets ignored and the column definitions are read from the database schema (since 1.1.3). The layout can contain formula in the coumn definition. Specifying a non-existing layout name results in a 400 error. Requiring a layout to use formula mitigates the risk of Formula-phishing around the barbecan field protection.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Name of the layout to use for output. When a layout value is provided, the column array gets ignored and the column definitions are read from the database schema (since 1.1.3). The layout can contain formula in the coumn definition. Specifying a non-existing layout name results in a 400 error. Requiring a layout to use formula mitigates the risk of Formula-phishing around the barbecan field protection.","inlinecomment":" \t &apos; Name of the layout to use for output. When a layout value is provided, the column array gets ignored and the column definitions are read from the database schema (since 1.1.3). The layout can contain formula in the coumn definition. Specifying a non-existing layout name results in a 400 error. Requiring a layout to use formula mitigates the risk of Formula-phishing around the barbecan field protection.", "attributes":["CONST","OPTIONAL"]}]},{"label":"GetListEntries","comment":"Pulls in view data.","valuetype":"DrapiResponse","filenamebase":"GetListEntries_Method","fqnprefix":"DrapiVSE.DrapiRequest","qn":"GetListEntries","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(Name As String, Parameters As GetListEntriesArgs)","signature":"Function GetListEntries(Name As String, Parameters As GetListEntriesArgs) As DrapiResponse","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Pulls in view data.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Pulls in view data.","inlinecomment":" \t &apos; Pulls in view data.","parentclassname":"DrapiRequest","codesamplehtml":"", "signatureelements":["Function"], "arguments":[{"label":"Name","comment":"Name of the view or folder.","valuetype":"String","filenamebase":"Name_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestGetListEntries","qn":"Name","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Name of the view or folder.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Name of the view or folder.","inlinecomment":" \t &apos; Name of the view or folder."},{"label":"Parameters","comment":"Parameters for the view data to be requested. See documentation on GetListEntriesArgs for more. ","valuetype":"GetListEntriesArgs","filenamebase":"Parameters_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestGetListEntries","qn":"Parameters","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Parameters for the view data to be requested. See documentation on GetListEntriesArgs for more. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Parameters for the view data to be requested. See documentation on GetListEntriesArgs for more. ","inlinecomment":" \t &apos; Parameters for the view data to be requested. See documentation on GetListEntriesArgs for more. "}]},{"label":"GetListPivot","comment":"Processes view data as pivot. Computes min, max, count, total of retrieved view entries.","valuetype":"DrapiResponse","filenamebase":"GetListPivot_Method","fqnprefix":"DrapiVSE.DrapiRequest","qn":"GetListPivot","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(Name As String, PivotColumn As String, Keys As Variant)","signature":"Function GetListPivot(Name As String, PivotColumn As String, Keys As Variant) As DrapiResponse","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Processes view data as pivot. Computes min, max, count, total of retrieved view entries.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Processes view data as pivot. Computes min, max, count, total of retrieved view entries.","inlinecomment":" \t &apos; Processes view data as pivot. Computes min, max, count, total of retrieved view entries.","parentclassname":"DrapiRequest","codesamplehtml":"", "signatureelements":["Function"], "arguments":[{"label":"Name","comment":"Name of the view or folder","valuetype":"String","filenamebase":"Name_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestGetListPivot","qn":"Name","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Name of the view or folder&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Name of the view or folder","inlinecomment":" \t &apos; Name of the view or folder"},{"label":"PivotColumn","comment":"Name of the column to provide the data for the pivot aggregator","valuetype":"String","filenamebase":"PivotColumn_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestGetListPivot","qn":"PivotColumn","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Name of the column to provide the data for the pivot aggregator&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Name of the column to provide the data for the pivot aggregator","inlinecomment":" \t &apos; Name of the column to provide the data for the pivot aggregator"},{"label":"Keys","comment":"A String or String Array. Useful for categorized or sorted lists. Limits return values to entries matching the key or keys. Use multiple key parameter items to specify multiple keys in request URL. The keys specified must be in the same order as the sorted columns from left to right. Unsorted columns will be ignored.","valuetype":"Variant","filenamebase":"Keys_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestGetListPivot","qn":"Keys","argumentindex":3,"optionalvalue":"NULL","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;A String or String Array. Useful for categorized or sorted lists. Limits return values to entries matching the key or keys. Use multiple key parameter items to specify multiple keys in request URL. The keys specified must be in the same order as the sorted columns from left to right. Unsorted columns will be ignored.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"A String or String Array. Useful for categorized or sorted lists. Limits return values to entries matching the key or keys. Use multiple key parameter items to specify multiple keys in request URL. The keys specified must be in the same order as the sorted columns from left to right. Unsorted columns will be ignored.","inlinecomment":" \t &apos; A String or String Array. Useful for categorized or sorted lists. Limits return values to entries matching the key or keys. Use multiple key parameter items to specify multiple keys in request URL. The keys specified must be in the same order as the sorted columns from left to right. Unsorted columns will be ignored.", "attributes":["CONST","OPTIONAL"]}]},{"label":"GetLists","comment":"Gets all views / folders for the selected database, retrieving only those matching a filter if desired.","valuetype":"DrapiResponse","filenamebase":"GetLists_Method","fqnprefix":"DrapiVSE.DrapiRequest","qn":"GetLists","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(Filter As String, Columns As Boolean, Type As String)","signature":"Function GetLists(Filter As String, Columns As Boolean, Type As String) As DrapiResponse","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Gets all views / folders for the selected database, retrieving only those matching a filter if desired.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Gets all views / folders for the selected database, retrieving only those matching a filter if desired.","inlinecomment":" \t &apos; Gets all views / folders for the selected database, retrieving only those matching a filter if desired.","parentclassname":"DrapiRequest","codesamplehtml":"", "signatureelements":["Function"], "arguments":[{"label":"Filter","comment":"If present, perform a case insensitive partial text match that retrieves any lists that contains the input as a part of the list title.","valuetype":"String","filenamebase":"Filter_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestGetLists","qn":"Filter","argumentindex":1,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;If present, perform a case insensitive partial text match that retrieves any lists that contains the input as a part of the list title.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"If present, perform a case insensitive partial text match that retrieves any lists that contains the input as a part of the list title.","inlinecomment":" \t &apos; If present, perform a case insensitive partial text match that retrieves any lists that contains the input as a part of the list title.", "attributes":["CONST","OPTIONAL"]},{"label":"Columns","comment":"When set to true, column information gets returned. Use with caution, slows down the API.","valuetype":"Boolean","filenamebase":"Columns_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestGetLists","qn":"Columns","argumentindex":2,"optionalvalue":"LSXFalse","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;When set to true, column information gets returned. Use with caution, slows down the API.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"When set to true, column information gets returned. Use with caution, slows down the API.","inlinecomment":" \t &apos; When set to true, column information gets returned. Use with caution, slows down the API.", "attributes":["CONST","OPTIONAL"]},{"label":"Type","comment":"Type of view to return. Options are &amp;quot;views&amp;quot;, &amp;quot;folders&amp;quot;, and &amp;quot;all&amp;quot;, default &amp;quot;all&amp;quot;.  ","valuetype":"String","filenamebase":"Type_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestGetLists","qn":"Type","argumentindex":3,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Type of view to return. Options are &amp;quot;views&amp;quot;, &amp;quot;folders&amp;quot;, and &amp;quot;all&amp;quot;, default &amp;quot;all&amp;quot;.  &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Type of view to return. Options are &amp;quot;views&amp;quot;, &amp;quot;folders&amp;quot;, and &amp;quot;all&amp;quot;, default &amp;quot;all&amp;quot;.  ","inlinecomment":" \t &apos; Type of view to return. Options are &amp;quot;views&amp;quot;, &amp;quot;folders&amp;quot;, and &amp;quot;all&amp;quot;, default &amp;quot;all&amp;quot;.  ", "attributes":["CONST","OPTIONAL"]}]},{"label":"GetNamedDocument","comment":"The named document is created upon first access using the specified name. Upon retrieval of the named document using the same name, it will return the existing named document.","valuetype":"DrapiResponse","filenamebase":"GetNamedDocument_Method","fqnprefix":"DrapiVSE.DrapiRequest","qn":"GetNamedDocument","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(Name As String, Key As String, User As Boolean)","signature":"Function GetNamedDocument(Name As String, Key As String, User As Boolean) As DrapiResponse","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;The named document is created upon first access using the specified name. Upon retrieval of the named document using the same name, it will return the existing named document.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"The named document is created upon first access using the specified name. Upon retrieval of the named document using the same name, it will return the existing named document.","inlinecomment":" \t &apos; The named document is created upon first access using the specified name. Upon retrieval of the named document using the same name, it will return the existing named document.","parentclassname":"DrapiRequest","codesamplehtml":"", "signatureelements":["Function"], "arguments":[{"label":"Name","comment":"The name of the named document to get.","valuetype":"String","filenamebase":"Name_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestGetNamedDocument","qn":"Name","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;The name of the named document to get.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"The name of the named document to get.","inlinecomment":" \t &apos; The name of the named document to get."},{"label":"Key","comment":"Named document key. Leave blank if setting the user parameter to true.","valuetype":"String","filenamebase":"Key_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestGetNamedDocument","qn":"Key","argumentindex":2,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Named document key. Leave blank if setting the user parameter to true.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Named document key. Leave blank if setting the user parameter to true.","inlinecomment":" \t &apos; Named document key. Leave blank if setting the user parameter to true.", "attributes":["CONST","OPTIONAL"]},{"label":"User","comment":"Override key with the current user name.","valuetype":"Boolean","filenamebase":"User_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestGetNamedDocument","qn":"User","argumentindex":3,"optionalvalue":"LSXFalse","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Override key with the current user name.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Override key with the current user name.","inlinecomment":" \t &apos; Override key with the current user name.", "attributes":["CONST","OPTIONAL"]}]},{"label":"GetNamedDocumentList","comment":"Retrieve a list of named documents. Leaving off name and/or key returns all named documents.","valuetype":"DrapiResponse","filenamebase":"GetNamedDocumentList_Method","fqnprefix":"DrapiVSE.DrapiRequest","qn":"GetNamedDocumentList","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(Name As String, Key As String, User As Boolean)","signature":"Function GetNamedDocumentList(Name As String, Key As String, User As Boolean) As DrapiResponse","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Retrieve a list of named documents. Leaving off name and/or key returns all named documents.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Retrieve a list of named documents. Leaving off name and/or key returns all named documents.","inlinecomment":" \t &apos; Retrieve a list of named documents. Leaving off name and/or key returns all named documents.","parentclassname":"DrapiRequest","codesamplehtml":"", "signatureelements":["Function"], "arguments":[{"label":"Name","comment":"The name of the named document","valuetype":"String","filenamebase":"Name_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestGetNamedDocumentList","qn":"Name","argumentindex":1,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;The name of the named document&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"The name of the named document","inlinecomment":" \t &apos; The name of the named document", "attributes":["CONST","OPTIONAL"]},{"label":"Key","comment":"Named document key. Leave blank if setting the user parameter to true.","valuetype":"String","filenamebase":"Key_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestGetNamedDocumentList","qn":"Key","argumentindex":2,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Named document key. Leave blank if setting the user parameter to true.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Named document key. Leave blank if setting the user parameter to true.","inlinecomment":" \t &apos; Named document key. Leave blank if setting the user parameter to true.", "attributes":["CONST","OPTIONAL"]},{"label":"User","comment":"Override key with the current user name.","valuetype":"Boolean","filenamebase":"User_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestGetNamedDocumentList","qn":"User","argumentindex":3,"optionalvalue":"LSXFalse","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Override key with the current user name.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Override key with the current user name.","inlinecomment":" \t &apos; Override key with the current user name.", "attributes":["CONST","OPTIONAL"]}]},{"label":"GetProfileDocument","comment":"The profile document is created upon first access using the specified profileName. Upon retrieval of the profile document using the same profileName, it will return the existing profile Document.","valuetype":"DrapiResponse","filenamebase":"GetProfileDocument_Method","fqnprefix":"DrapiVSE.DrapiRequest","qn":"GetProfileDocument","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(ProfileName As String, Key As String, User As Boolean)","signature":"Function GetProfileDocument(ProfileName As String, Key As String, User As Boolean) As DrapiResponse","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;The profile document is created upon first access using the specified profileName. Upon retrieval of the profile document using the same profileName, it will return the existing profile Document.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"The profile document is created upon first access using the specified profileName. Upon retrieval of the profile document using the same profileName, it will return the existing profile Document.","inlinecomment":" \t &apos; The profile document is created upon first access using the specified profileName. Upon retrieval of the profile document using the same profileName, it will return the existing profile Document.","parentclassname":"DrapiRequest","codesamplehtml":"", "signatureelements":["Function"], "arguments":[{"label":"ProfileName","comment":"The name of the profile document to get.","valuetype":"String","filenamebase":"ProfileName_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestGetProfileDocument","qn":"ProfileName","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;The name of the profile document to get.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"The name of the profile document to get.","inlinecomment":" \t &apos; The name of the profile document to get."},{"label":"Key","comment":"Profile document key. Leave blank if setting the user parameter to true.","valuetype":"String","filenamebase":"Key_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestGetProfileDocument","qn":"Key","argumentindex":2,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Profile document key. Leave blank if setting the user parameter to true.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Profile document key. Leave blank if setting the user parameter to true.","inlinecomment":" \t &apos; Profile document key. Leave blank if setting the user parameter to true.", "attributes":["CONST","OPTIONAL"]},{"label":"User","comment":"Override key with the current user name.","valuetype":"Boolean","filenamebase":"User_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestGetProfileDocument","qn":"User","argumentindex":3,"optionalvalue":"LSXFalse","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Override key with the current user name.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Override key with the current user name.","inlinecomment":" \t &apos; Override key with the current user name.", "attributes":["CONST","OPTIONAL"]}]},{"label":"GetProfileDocumentList","comment":"Retrieve a list of profile documents. Leaving off name and/or key returns all profile documents.","valuetype":"DrapiResponse","filenamebase":"GetProfileDocumentList_Method","fqnprefix":"DrapiVSE.DrapiRequest","qn":"GetProfileDocumentList","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(ProfileName As String, Key As String, User As Boolean)","signature":"Function GetProfileDocumentList(ProfileName As String, Key As String, User As Boolean) As DrapiResponse","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Retrieve a list of profile documents. Leaving off name and/or key returns all profile documents.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Retrieve a list of profile documents. Leaving off name and/or key returns all profile documents.","inlinecomment":" \t &apos; Retrieve a list of profile documents. Leaving off name and/or key returns all profile documents.","parentclassname":"DrapiRequest","codesamplehtml":"", "signatureelements":["Function"], "arguments":[{"label":"ProfileName","comment":"The name of the profile document","valuetype":"String","filenamebase":"ProfileName_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestGetProfileDocumentList","qn":"ProfileName","argumentindex":1,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;The name of the profile document&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"The name of the profile document","inlinecomment":" \t &apos; The name of the profile document", "attributes":["CONST","OPTIONAL"]},{"label":"Key","comment":"Profile document key. Leave blank if setting the user parameter to true.","valuetype":"String","filenamebase":"Key_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestGetProfileDocumentList","qn":"Key","argumentindex":2,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Profile document key. Leave blank if setting the user parameter to true.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Profile document key. Leave blank if setting the user parameter to true.","inlinecomment":" \t &apos; Profile document key. Leave blank if setting the user parameter to true.", "attributes":["CONST","OPTIONAL"]},{"label":"User","comment":"Override key with the current user name.","valuetype":"Boolean","filenamebase":"User_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestGetProfileDocumentList","qn":"User","argumentindex":3,"optionalvalue":"LSXFalse","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Override key with the current user name.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Override key with the current user name.","inlinecomment":" \t &apos; Override key with the current user name.", "attributes":["CONST","OPTIONAL"]}]},{"label":"GetRichText","comment":"Return a stream of data from a Rich Text field in the format specified.","valuetype":"DrapiResponse","filenamebase":"GetRichText_Method","fqnprefix":"DrapiVSE.DrapiRequest","qn":"GetRichText","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(UNID As String, RichTextAs As String, Item As String, Mode As String)","signature":"Function GetRichText(UNID As String, RichTextAs As String, Item As String, Mode As String) As DrapiResponse","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Return a stream of data from a Rich Text field in the format specified.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Return a stream of data from a Rich Text field in the format specified.","inlinecomment":" \t &apos; Return a stream of data from a Rich Text field in the format specified.","parentclassname":"DrapiRequest","codesamplehtml":"", "signatureelements":["Function"], "arguments":[{"label":"UNID","comment":"Universal Id of the document to be acted upon.","valuetype":"String","filenamebase":"UNID_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestGetRichText","qn":"UNID","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Universal Id of the document to be acted upon.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Universal Id of the document to be acted upon.","inlinecomment":" \t &apos; Universal Id of the document to be acted upon."},{"label":"RichTextAs","comment":"Format to return data as. Build in methods are: plain,mime,html,markdown","valuetype":"String","filenamebase":"RichTextAs_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestGetRichText","qn":"RichTextAs","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Format to return data as. Build in methods are: plain,mime,html,markdown&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Format to return data as. Build in methods are: plain,mime,html,markdown","inlinecomment":" \t &apos; Format to return data as. Build in methods are: plain,mime,html,markdown"},{"label":"Item","comment":"Name of the RichText item to retrieve. When omitted &amp;quot;Body&amp;quot; is used as item name","valuetype":"String","filenamebase":"Item_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestGetRichText","qn":"Item","argumentindex":3,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Name of the RichText item to retrieve. When omitted &amp;quot;Body&amp;quot; is used as item name&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Name of the RichText item to retrieve. When omitted &amp;quot;Body&amp;quot; is used as item name","inlinecomment":" \t &apos; Name of the RichText item to retrieve. When omitted &amp;quot;Body&amp;quot; is used as item name", "attributes":["CONST","OPTIONAL"]},{"label":"Mode","comment":"Mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only","valuetype":"String","filenamebase":"Mode_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestGetRichText","qn":"Mode","argumentindex":4,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only","inlinecomment":" \t &apos; Mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only", "attributes":["CONST","OPTIONAL"]}]},{"label":"GetRichTextProcessors","comment":"Returns a list of rich text processors a user can use. Each entry can be set ar RichTextAs parameters.","valuetype":"DrapiResponse","filenamebase":"GetRichTextProcessors_Method","fqnprefix":"DrapiVSE.DrapiRequest","qn":"GetRichTextProcessors","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"()","signature":"Function GetRichTextProcessors() As DrapiResponse","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Returns a list of rich text processors a user can use. Each entry can be set ar RichTextAs parameters.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Returns a list of rich text processors a user can use. Each entry can be set ar RichTextAs parameters.","inlinecomment":" \t &apos; Returns a list of rich text processors a user can use. Each entry can be set ar RichTextAs parameters.","parentclassname":"DrapiRequest","codesamplehtml":"", "signatureelements":["Function"]},{"label":"GetScopeInfo","comment":"Get the configuration for this Request&amp;apos;s scope.","valuetype":"DrapiResponse","filenamebase":"GetScopeInfo_Method","fqnprefix":"DrapiVSE.DrapiRequest","qn":"GetScopeInfo","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"()","signature":"Function GetScopeInfo() As DrapiResponse","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Get the configuration for this Request&amp;apos;s scope.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Get the configuration for this Request&amp;apos;s scope.","inlinecomment":" \t &apos; Get the configuration for this Request&amp;apos;s scope.","parentclassname":"DrapiRequest","codesamplehtml":"", "signatureelements":["Function"]},{"label":"GetServerInfo","comment":"Get information about Domino and Domino REST API version.","valuetype":"DrapiServerInfo","filenamebase":"GetServerInfo_Method","fqnprefix":"DrapiVSE.DrapiRequest","qn":"GetServerInfo","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"()","signature":"Function GetServerInfo() As DrapiServerInfo","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Get information about Domino and Domino REST API version.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Get information about Domino and Domino REST API version.","inlinecomment":" \t &apos; Get information about Domino and Domino REST API version.","parentclassname":"DrapiRequest","codesamplehtml":"", "signatureelements":["Function"]},{"label":"GetUserInfo","comment":"Get information about the currently authenticated user.","valuetype":"DrapiResponse","filenamebase":"GetUserInfo_Method","fqnprefix":"DrapiVSE.DrapiRequest","qn":"GetUserInfo","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(CheckAccess As Variant)","signature":"Function GetUserInfo(CheckAccess As Variant) As DrapiResponse","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Get information about the currently authenticated user.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Get information about the currently authenticated user.","inlinecomment":" \t &apos; Get information about the currently authenticated user.","parentclassname":"DrapiRequest","codesamplehtml":"", "signatureelements":["Function"], "arguments":[{"label":"CheckAccess","comment":"String or String Array of scopes to check user&amp;apos;s access to. ","valuetype":"Variant","filenamebase":"CheckAccess_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestGetUserInfo","qn":"CheckAccess","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;String or String Array of scopes to check user&amp;apos;s access to. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"String or String Array of scopes to check user&amp;apos;s access to. ","inlinecomment":" \t &apos; String or String Array of scopes to check user&amp;apos;s access to. ", "attributes":["CONST","OPTIONAL"]}]},{"label":"New","comment":"","valuetype":"DrapiRequest","filenamebase":"New_Method","fqnprefix":"DrapiVSE.DrapiRequest","qn":"New","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"()","signature":"Function New() As DrapiRequest","modifiers":"","commentblock":"","commenthtml":"","inlinecomment":"","parentclassname":"DrapiRequest","codesamplehtml":"", "signatureelements":["Function"]},{"label":"PatchDocument","comment":"Perform a document update only on the fields specified in the body. Provide a JSON structure that is a subset of the document items. Items not mentioned stay untouched, items with null values are removed ","valuetype":"DrapiDocument","filenamebase":"PatchDocument_Method","fqnprefix":"DrapiVSE.DrapiRequest","qn":"PatchDocument","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(UNID As String, Body As String, RichTextAs As String, Mode As String, Revision As String, ParentUnid As String, MarkUnread As Boolean)","signature":"Function PatchDocument(UNID As String, Body As String, RichTextAs As String, Mode As String, Revision As String, ParentUnid As String, MarkUnread As Boolean) As DrapiDocument","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Perform a document update only on the fields specified in the body. Provide a JSON structure that is a subset of the document items. Items not mentioned stay untouched, items with null values are removed &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Perform a document update only on the fields specified in the body. Provide a JSON structure that is a subset of the document items. Items not mentioned stay untouched, items with null values are removed ","inlinecomment":" \t &apos; Perform a document update only on the fields specified in the body. Provide a JSON structure that is a subset of the document items. Items not mentioned stay untouched, items with null values are removed ","parentclassname":"DrapiRequest","codesamplehtml":"", "signatureelements":["Function"], "arguments":[{"label":"UNID","comment":"Universal Id of the document to be acted upon.","valuetype":"String","filenamebase":"UNID_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestPatchDocument","qn":"UNID","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Universal Id of the document to be acted upon.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Universal Id of the document to be acted upon.","inlinecomment":" \t &apos; Universal Id of the document to be acted upon."},{"label":"Body","comment":"Document body to be updated. A JSON structure that is a subset of the document items. Items not mentioned stay untouched, items with null values are removed.","valuetype":"String","filenamebase":"Body_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestPatchDocument","qn":"Body","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Document body to be updated. A JSON structure that is a subset of the document items. Items not mentioned stay untouched, items with null values are removed.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Document body to be updated. A JSON structure that is a subset of the document items. Items not mentioned stay untouched, items with null values are removed.","inlinecomment":" \t &apos; Document body to be updated. A JSON structure that is a subset of the document items. Items not mentioned stay untouched, items with null values are removed."},{"label":"RichTextAs","comment":"The format RichText fields will be returned. The default if unspecified is html.","valuetype":"String","filenamebase":"RichTextAs_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestPatchDocument","qn":"RichTextAs","argumentindex":3,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;The format RichText fields will be returned. The default if unspecified is html.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"The format RichText fields will be returned. The default if unspecified is html.","inlinecomment":" \t &apos; The format RichText fields will be returned. The default if unspecified is html.", "attributes":["CONST","OPTIONAL"]},{"label":"Mode","comment":"Mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only.","valuetype":"String","filenamebase":"Mode_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestPatchDocument","qn":"Mode","argumentindex":4,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only.","inlinecomment":" \t &apos; Mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only.", "attributes":["CONST","OPTIONAL"]},{"label":"Revision","comment":"This field records the current revision version of document. It&amp;apos;s a 32-character hex-encoded string of date.\nIf db config &amp;quot;requireRevisionToUpdate&amp;quot; is enabled, then revision is required when update document and only update document when revision version is right.","valuetype":"String","filenamebase":"Revision_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestPatchDocument","qn":"Revision","argumentindex":5,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;This field records the current revision version of document. It&amp;apos;s a 32-character hex-encoded string of date.&lt;br /&gt;If db config &amp;quot;requireRevisionToUpdate&amp;quot; is enabled, then revision is required when update document and only update document when revision version is right.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"This field records the current revision version of document. It&amp;apos;s a 32-character hex-encoded string of date.&lt;br /&gt;If db config &amp;quot;requireRevisionToUpdate&amp;quot; is enabled, then revision is required when update document and only update document when revision version is right.","inlinecomment":" \t &apos; This field records the current revision version of document. It&amp;apos;s a 32-character hex-encoded string of date.\nIf db config &amp;quot;requireRevisionToUpdate&amp;quot; is enabled, then revision is required when update document and only update document when revision version is right.", "attributes":["CONST","OPTIONAL"]},{"label":"ParentUnid","comment":"UNID of an existing document, to make this a response document","valuetype":"String","filenamebase":"ParentUnid_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestPatchDocument","qn":"ParentUnid","argumentindex":6,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;UNID of an existing document, to make this a response document&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"UNID of an existing document, to make this a response document","inlinecomment":" \t &apos; UNID of an existing document, to make this a response document", "attributes":["CONST","OPTIONAL"]},{"label":"MarkUnread","comment":"Mark the document as unread by the current user when the operation completes.","valuetype":"Boolean","filenamebase":"MarkUnread_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestPatchDocument","qn":"MarkUnread","argumentindex":7,"optionalvalue":"LSXFalse","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Mark the document as unread by the current user when the operation completes.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Mark the document as unread by the current user when the operation completes.","inlinecomment":" \t &apos; Mark the document as unread by the current user when the operation completes.", "attributes":["CONST","OPTIONAL"]}]},{"label":"PostNamedDocument","comment":"Create or update a named document. Requires Author access for user documents and editor access for general named documents.","valuetype":"DrapiResponse","filenamebase":"PostNamedDocument_Method","fqnprefix":"DrapiVSE.DrapiRequest","qn":"PostNamedDocument","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(Name As String, JSONBody As String, Key As String, User As Boolean)","signature":"Function PostNamedDocument(Name As String, JSONBody As String, Key As String, User As Boolean) As DrapiResponse","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Create or update a named document. Requires Author access for user documents and editor access for general named documents.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Create or update a named document. Requires Author access for user documents and editor access for general named documents.","inlinecomment":" \t &apos; Create or update a named document. Requires Author access for user documents and editor access for general named documents.","parentclassname":"DrapiRequest","codesamplehtml":"", "signatureelements":["Function"], "arguments":[{"label":"Name","comment":"The name of the named document.","valuetype":"String","filenamebase":"Name_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestPostNamedDocument","qn":"Name","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;The name of the named document.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"The name of the named document.","inlinecomment":" \t &apos; The name of the named document."},{"label":"JSONBody","comment":"JSON string describing the document, including a form attribute.","valuetype":"String","filenamebase":"JSONBody_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestPostNamedDocument","qn":"JSONBody","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;JSON string describing the document, including a form attribute.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"JSON string describing the document, including a form attribute.","inlinecomment":" \t &apos; JSON string describing the document, including a form attribute."},{"label":"Key","comment":"Named document key. Leave blank if setting the user parameter to true.","valuetype":"String","filenamebase":"Key_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestPostNamedDocument","qn":"Key","argumentindex":3,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Named document key. Leave blank if setting the user parameter to true.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Named document key. Leave blank if setting the user parameter to true.","inlinecomment":" \t &apos; Named document key. Leave blank if setting the user parameter to true.", "attributes":["CONST","OPTIONAL"]},{"label":"User","comment":"Override key with the current user name.","valuetype":"Boolean","filenamebase":"User_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestPostNamedDocument","qn":"User","argumentindex":4,"optionalvalue":"LSXFalse","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Override key with the current user name.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Override key with the current user name.","inlinecomment":" \t &apos; Override key with the current user name.", "attributes":["CONST","OPTIONAL"]}]},{"label":"PostProfileDocument","comment":"Creates or updates a profile document. Requires Author access for user documents and editor access for general profiles.","valuetype":"DrapiResponse","filenamebase":"PostProfileDocument_Method","fqnprefix":"DrapiVSE.DrapiRequest","qn":"PostProfileDocument","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(ProfileName As String, JSONBody As String, Key As String, User As Boolean)","signature":"Function PostProfileDocument(ProfileName As String, JSONBody As String, Key As String, User As Boolean) As DrapiResponse","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Creates or updates a profile document. Requires Author access for user documents and editor access for general profiles.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Creates or updates a profile document. Requires Author access for user documents and editor access for general profiles.","inlinecomment":" \t &apos; Creates or updates a profile document. Requires Author access for user documents and editor access for general profiles.","parentclassname":"DrapiRequest","codesamplehtml":"", "signatureelements":["Function"], "arguments":[{"label":"ProfileName","comment":"The name of the profile document.","valuetype":"String","filenamebase":"ProfileName_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestPostProfileDocument","qn":"ProfileName","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;The name of the profile document.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"The name of the profile document.","inlinecomment":" \t &apos; The name of the profile document."},{"label":"JSONBody","comment":"JSON string describing the document, including a form attribute.","valuetype":"String","filenamebase":"JSONBody_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestPostProfileDocument","qn":"JSONBody","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;JSON string describing the document, including a form attribute.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"JSON string describing the document, including a form attribute.","inlinecomment":" \t &apos; JSON string describing the document, including a form attribute."},{"label":"Key","comment":"Profile document key. Leave blank if setting the user parameter to true.","valuetype":"String","filenamebase":"Key_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestPostProfileDocument","qn":"Key","argumentindex":3,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Profile document key. Leave blank if setting the user parameter to true.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Profile document key. Leave blank if setting the user parameter to true.","inlinecomment":" \t &apos; Profile document key. Leave blank if setting the user parameter to true.", "attributes":["CONST","OPTIONAL"]},{"label":"User","comment":"Override key with the current user name.","valuetype":"Boolean","filenamebase":"User_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestPostProfileDocument","qn":"User","argumentindex":4,"optionalvalue":"LSXFalse","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Override key with the current user name.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Override key with the current user name.","inlinecomment":" \t &apos; Override key with the current user name.", "attributes":["CONST","OPTIONAL"]}]},{"label":"PutDocument","comment":"Perform an update on the document at the relevant mode.","valuetype":"DrapiDocument","filenamebase":"PutDocument_Method","fqnprefix":"DrapiVSE.DrapiRequest","qn":"PutDocument","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(UNID As String, Body As String, RichTextAs As String, Mode As String, Revision As String, ParentUNID As String, MarkUnread As Boolean)","signature":"Function PutDocument(UNID As String, Body As String, RichTextAs As String, Mode As String, Revision As String, ParentUNID As String, MarkUnread As Boolean) As DrapiDocument","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Perform an update on the document at the relevant mode.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Perform an update on the document at the relevant mode.","inlinecomment":" \t &apos; Perform an update on the document at the relevant mode.","parentclassname":"DrapiRequest","codesamplehtml":"", "signatureelements":["Function"], "arguments":[{"label":"UNID","comment":"Universal Id of the document to be acted upon.","valuetype":"String","filenamebase":"UNID_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestPutDocument","qn":"UNID","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Universal Id of the document to be acted upon.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Universal Id of the document to be acted upon.","inlinecomment":" \t &apos; Universal Id of the document to be acted upon."},{"label":"Body","comment":"Key/value pairs of fields and their values to update. Some modes may not allow any editable fields, in which case an empty JSON object should be passed. &amp;apos;Form&amp;apos; is required.","valuetype":"String","filenamebase":"Body_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestPutDocument","qn":"Body","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Key/value pairs of fields and their values to update. Some modes may not allow any editable fields, in which case an empty JSON object should be passed. &amp;apos;Form&amp;apos; is required.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Key/value pairs of fields and their values to update. Some modes may not allow any editable fields, in which case an empty JSON object should be passed. &amp;apos;Form&amp;apos; is required.","inlinecomment":" \t &apos; Key/value pairs of fields and their values to update. Some modes may not allow any editable fields, in which case an empty JSON object should be passed. &amp;apos;Form&amp;apos; is required."},{"label":"RichTextAs","comment":"The format RichText fields will be returned. The default if unspecified is html.","valuetype":"String","filenamebase":"RichTextAs_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestPutDocument","qn":"RichTextAs","argumentindex":3,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;The format RichText fields will be returned. The default if unspecified is html.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"The format RichText fields will be returned. The default if unspecified is html.","inlinecomment":" \t &apos; The format RichText fields will be returned. The default if unspecified is html.", "attributes":["CONST","OPTIONAL"]},{"label":"Mode","comment":"mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only.","valuetype":"String","filenamebase":"Mode_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestPutDocument","qn":"Mode","argumentindex":4,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only.","inlinecomment":" \t &apos; mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only.", "attributes":["CONST","OPTIONAL"]},{"label":"Revision","comment":"This field records the current revision version of document. It&amp;apos;s a 32-character hex-encoded string of date.\nIf db config &amp;quot;requireRevisionToUpdate&amp;quot; is enabled, then revision is required when update document and only update document when revision version is right.","valuetype":"String","filenamebase":"Revision_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestPutDocument","qn":"Revision","argumentindex":5,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;This field records the current revision version of document. It&amp;apos;s a 32-character hex-encoded string of date.&lt;br /&gt;If db config &amp;quot;requireRevisionToUpdate&amp;quot; is enabled, then revision is required when update document and only update document when revision version is right.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"This field records the current revision version of document. It&amp;apos;s a 32-character hex-encoded string of date.&lt;br /&gt;If db config &amp;quot;requireRevisionToUpdate&amp;quot; is enabled, then revision is required when update document and only update document when revision version is right.","inlinecomment":" \t &apos; This field records the current revision version of document. It&amp;apos;s a 32-character hex-encoded string of date.\nIf db config &amp;quot;requireRevisionToUpdate&amp;quot; is enabled, then revision is required when update document and only update document when revision version is right.", "attributes":["CONST","OPTIONAL"]},{"label":"ParentUNID","comment":"UNID of an existing document, to make this a response document","valuetype":"String","filenamebase":"ParentUNID_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestPutDocument","qn":"ParentUNID","argumentindex":6,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;UNID of an existing document, to make this a response document&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"UNID of an existing document, to make this a response document","inlinecomment":" \t &apos; UNID of an existing document, to make this a response document", "attributes":["CONST","OPTIONAL"]},{"label":"MarkUnread","comment":"Mark the document as unread by the current user when the operation completes.","valuetype":"Boolean","filenamebase":"MarkUnread_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestPutDocument","qn":"MarkUnread","argumentindex":7,"optionalvalue":"LSXFalse","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Mark the document as unread by the current user when the operation completes.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Mark the document as unread by the current user when the operation completes.","inlinecomment":" \t &apos; Mark the document as unread by the current user when the operation completes.", "attributes":["CONST","OPTIONAL"]}]},{"label":"PutDocumentRaw","comment":"All items are updated, no item name normalization or translation is applied No schema to normalize or filter the document is applied. Json is written as-is into the Note.\nTo be able to use this endpoint a form mode &amp;quot;raw&amp;quot; must exist for the value of &amp;quot;form&amp;quot; item in the document and the current user needs the permission (set by formula in the &amp;quot;raw&amp;quot; mode) to use the mode\nUse on your own risk!","valuetype":"DrapiResponse","filenamebase":"PutDocumentRaw_Method","fqnprefix":"DrapiVSE.DrapiRequest","qn":"PutDocumentRaw","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(UNID As String, JSONBody As String, ParentUNID As String)","signature":"Function PutDocumentRaw(UNID As String, JSONBody As String, ParentUNID As String) As DrapiResponse","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;All items are updated, no item name normalization or translation is applied No schema to normalize or filter the document is applied. Json is written as-is into the Note.&lt;br /&gt;To be able to use this endpoint a form mode &amp;quot;raw&amp;quot; must exist for the value of &amp;quot;form&amp;quot; item in the document and the current user needs the permission (set by formula in the &amp;quot;raw&amp;quot; mode) to use the mode&lt;br /&gt;Use on your own risk!&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"All items are updated, no item name normalization or translation is applied No schema to normalize or filter the document is applied. Json is written as-is into the Note.&lt;br /&gt;To be able to use this endpoint a form mode &amp;quot;raw&amp;quot; must exist for the value of &amp;quot;form&amp;quot; item in the document and the current user needs the permission (set by formula in the &amp;quot;raw&amp;quot; mode) to use the mode&lt;br /&gt;Use on your own risk!","inlinecomment":" \t &apos; All items are updated, no item name normalization or translation is applied No schema to normalize or filter the document is applied. Json is written as-is into the Note.\nTo be able to use this endpoint a form mode &amp;quot;raw&amp;quot; must exist for the value of &amp;quot;form&amp;quot; item in the document and the current user needs the permission (set by formula in the &amp;quot;raw&amp;quot; mode) to use the mode\nUse on your own risk!","parentclassname":"DrapiRequest","codesamplehtml":"", "signatureelements":["Function"], "arguments":[{"label":"UNID","comment":"Universal Id of the document to be acted upon","valuetype":"String","filenamebase":"UNID_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestPutDocumentRaw","qn":"UNID","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Universal Id of the document to be acted upon&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Universal Id of the document to be acted upon","inlinecomment":" \t &apos; Universal Id of the document to be acted upon"},{"label":"JSONBody","comment":"Key/value pairs of fields and their values to update. Some modes may not allow any editable fields, in which case an empty JSON object should be passed. &amp;apos;Form&amp;apos; is required.","valuetype":"String","filenamebase":"JSONBody_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestPutDocumentRaw","qn":"JSONBody","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Key/value pairs of fields and their values to update. Some modes may not allow any editable fields, in which case an empty JSON object should be passed. &amp;apos;Form&amp;apos; is required.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Key/value pairs of fields and their values to update. Some modes may not allow any editable fields, in which case an empty JSON object should be passed. &amp;apos;Form&amp;apos; is required.","inlinecomment":" \t &apos; Key/value pairs of fields and their values to update. Some modes may not allow any editable fields, in which case an empty JSON object should be passed. &amp;apos;Form&amp;apos; is required."},{"label":"ParentUNID","comment":"UNID of an existing document, to make this a response document.","valuetype":"String","filenamebase":"ParentUNID_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestPutDocumentRaw","qn":"ParentUNID","argumentindex":3,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;UNID of an existing document, to make this a response document.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"UNID of an existing document, to make this a response document.","inlinecomment":" \t &apos; UNID of an existing document, to make this a response document.", "attributes":["CONST","OPTIONAL"]}]},{"label":"RunAgent","comment":"Runs an existing agent, serverside. Existing limits of agent execution duration apply. This should only be used for short-running agents and simulated calling the agent from a browser\nFormula type agent&amp;apos;s target is anything other than &amp;quot;None&amp;quot; is unsupported trigger.\nUnsupported trigger will get &amp;quot;Unsupported trigger and search in the background or embedded agent&amp;quot;","valuetype":"DrapiResponse","filenamebase":"RunAgent_Method","fqnprefix":"DrapiVSE.DrapiRequest","qn":"RunAgent","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(AgentName As String)","signature":"Function RunAgent(AgentName As String) As DrapiResponse","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Runs an existing agent, serverside. Existing limits of agent execution duration apply. This should only be used for short-running agents and simulated calling the agent from a browser&lt;br /&gt;Formula type agent&amp;apos;s target is anything other than &amp;quot;None&amp;quot; is unsupported trigger.&lt;br /&gt;Unsupported trigger will get &amp;quot;Unsupported trigger and search in the background or embedded agent&amp;quot;&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Runs an existing agent, serverside. Existing limits of agent execution duration apply. This should only be used for short-running agents and simulated calling the agent from a browser&lt;br /&gt;Formula type agent&amp;apos;s target is anything other than &amp;quot;None&amp;quot; is unsupported trigger.&lt;br /&gt;Unsupported trigger will get &amp;quot;Unsupported trigger and search in the background or embedded agent&amp;quot;","inlinecomment":" \t &apos; Runs an existing agent, serverside. Existing limits of agent execution duration apply. This should only be used for short-running agents and simulated calling the agent from a browser\nFormula type agent&amp;apos;s target is anything other than &amp;quot;None&amp;quot; is unsupported trigger.\nUnsupported trigger will get &amp;quot;Unsupported trigger and search in the background or embedded agent&amp;quot;","parentclassname":"DrapiRequest","codesamplehtml":"", "signatureelements":["Function"], "arguments":[{"label":"AgentName","comment":"Name of agent to run.","valuetype":"String","filenamebase":"AgentName_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestRunAgent","qn":"AgentName","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Name of agent to run.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Name of agent to run.","inlinecomment":" \t &apos; Name of agent to run."}]},{"label":"RunAgentWithContext","comment":"Runs an existing agent, serverside, passing an UNID of a document to act upon. NotesSession.documentContext can be used in the agent to access the relevant document. Existing limits of agent execution duration apply. This should only be used for short-running agents and simulated calling the agent from a browser. ","valuetype":"DrapiResponse","filenamebase":"RunAgentWithContext_Method","fqnprefix":"DrapiVSE.DrapiRequest","qn":"RunAgentWithContext","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(AgentName As String, UNIDs As Variant, ReturnMode As String)","signature":"Function RunAgentWithContext(AgentName As String, UNIDs As Variant, ReturnMode As String) As DrapiResponse","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Runs an existing agent, serverside, passing an UNID of a document to act upon. NotesSession.documentContext can be used in the agent to access the relevant document. Existing limits of agent execution duration apply. This should only be used for short-running agents and simulated calling the agent from a browser. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Runs an existing agent, serverside, passing an UNID of a document to act upon. NotesSession.documentContext can be used in the agent to access the relevant document. Existing limits of agent execution duration apply. This should only be used for short-running agents and simulated calling the agent from a browser. ","inlinecomment":" \t &apos; Runs an existing agent, serverside, passing an UNID of a document to act upon. NotesSession.documentContext can be used in the agent to access the relevant document. Existing limits of agent execution duration apply. This should only be used for short-running agents and simulated calling the agent from a browser. ","parentclassname":"DrapiRequest","codesamplehtml":"", "signatureelements":["Function"], "arguments":[{"label":"AgentName","comment":"Name of Agent to run.","valuetype":"String","filenamebase":"AgentName_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestRunAgentWithContext","qn":"AgentName","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Name of Agent to run.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Name of Agent to run.","inlinecomment":" \t &apos; Name of Agent to run."},{"label":"UNIDs","comment":"String or String Array of document UNID&amp;apos;s to run on.","valuetype":"Variant","filenamebase":"UNIDs_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestRunAgentWithContext","qn":"UNIDs","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;String or String Array of document UNID&amp;apos;s to run on.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"String or String Array of document UNID&amp;apos;s to run on.","inlinecomment":" \t &apos; String or String Array of document UNID&amp;apos;s to run on."},{"label":"ReturnMode","comment":"","valuetype":"String","filenamebase":"ReturnMode_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestRunAgentWithContext","qn":"ReturnMode","argumentindex":3,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"","commenthtml":"","inlinecomment":"", "attributes":["CONST","OPTIONAL"]}]},{"label":"RunFormula","comment":"Executes a formula and returns results. ","valuetype":"DrapiResponse","filenamebase":"RunFormula_Method","fqnprefix":"DrapiVSE.DrapiRequest","qn":"RunFormula","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(JSONBody As String)","signature":"Function RunFormula(JSONBody As String) As DrapiResponse","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Executes a formula and returns results. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Executes a formula and returns results. ","inlinecomment":" \t &apos; Executes a formula and returns results. ","parentclassname":"DrapiRequest","codesamplehtml":"", "signatureelements":["Function"], "arguments":[{"label":"JSONBody","comment":"JSON body of formula to be checked. See DRAPI API for more details.","valuetype":"String","filenamebase":"JSONBody_ValuedElement","fqnprefix":"DrapiVSEDrapiRequestRunFormula","qn":"JSONBody","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;JSON body of formula to be checked. See DRAPI API for more details.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"JSON body of formula to be checked. See DRAPI API for more details.","inlinecomment":" \t &apos; JSON body of formula to be checked. See DRAPI API for more details."}]},{"label":"Parent","comment":"DrapiServer that contains this request","valuetype":"DrapiServer","filenamebase":"Parent_Method","fqnprefix":"DrapiVSE.DrapiRequest","qn":"Get.Parent","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get Parent As DrapiServer","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;DrapiServer that contains this request&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"DrapiServer that contains this request","inlinecomment":" \t &apos; DrapiServer that contains this request","parentclassname":"DrapiRequest","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Property","Get"]},{"label":"Scope","comment":"Scope associated with the request. Many methods require the scope to be set.","valuetype":"String","filenamebase":"Scope_Method","fqnprefix":"DrapiVSE.DrapiRequest","qn":"Get.Scope","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get Scope As String","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Scope associated with the request. Many methods require the scope to be set.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Scope associated with the request. Many methods require the scope to be set.","inlinecomment":" \t &apos; Scope associated with the request. Many methods require the scope to be set.","parentclassname":"DrapiRequest","codesamplehtml":"", "attributes":["SET_CONST"], "signatureelements":["Property","Get"]},{"label":"Scope","comment":"Scope associated with the request. Many methods require the scope to be set.","valuetype":"String","filenamebase":"Scope_Method","fqnprefix":"DrapiVSE.DrapiRequest","qn":"Set.Scope","codesample":"","signaturecode":260,"instancecode":256,"argumentsuffix":"","signature":"Property Set Scope As String","modifiers":"Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Scope associated with the request. Many methods require the scope to be set.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Scope associated with the request. Many methods require the scope to be set.","inlinecomment":" \t &apos; Scope associated with the request. Many methods require the scope to be set.","parentclassname":"DrapiRequest","codesamplehtml":"", "attributes":["SET_CONST"], "signatureelements":["Property","Set"]}]},{"classname":"DrapiResponse","comment":"The response from the Domino REST API server after making a request. Contains information about the request made, and details on any errors that may have occured.","valuetype":"","filenamebase":"DrapiResponse_ObjectClass","fqnprefix":"DrapiVSE","qn":"DrapiResponse","codesample":"","signaturecode":3072,"instancecode":1024,"classtype":"Base","classattribnewnotexposed":"UnexposedNew","projectid":"1CE507407C8F5ECC85258C7E00690863","version":3,"classid":"A5DFC53FC96724D685258C7E006A4934","lsxclassid":1,"signature":"Public Class DrapiResponse","modifiers":"Public","classname":"DrapiResponse","parentclassname":"None","constructorsignature":"Function New() As DrapiResponse","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;The response from the Domino REST API server after making a request. Contains information about the request made, and details on any errors that may have occured.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"The response from the Domino REST API server after making a request. Contains information about the request made, and details on any errors that may have occured.","inlinecomment":" \t &apos; The response from the Domino REST API server after making a request. Contains information about the request made, and details on any errors that may have occured.","codesamplehtml":"", "methods":[{"label":"New","comment":"","valuetype":"DrapiResponse","filenamebase":"New_Method","fqnprefix":"DrapiVSE.DrapiResponse","qn":"New","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"()","signature":"Function New() As DrapiResponse","modifiers":"","commentblock":"","commenthtml":"","inlinecomment":"","parentclassname":"DrapiResponse","codesamplehtml":"", "signatureelements":["Function"]},{"label":"ContentBody","comment":"Data returned from the server. Will typically be in JSON format.","valuetype":"String","filenamebase":"ContentBody_Method","fqnprefix":"DrapiVSE.DrapiResponse","qn":"Get.ContentBody","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get ContentBody As String","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Data returned from the server. Will typically be in JSON format.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Data returned from the server. Will typically be in JSON format.","inlinecomment":" \t &apos; Data returned from the server. Will typically be in JSON format.","parentclassname":"DrapiResponse","codesamplehtml":"", "attributes":["READ_ONLY","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"ContentLength","comment":"Provides easy access to the Content-Length HTTP header returned from the server. For chunked encoding, the length will be -1.","valuetype":"Long-Signed","filenamebase":"ContentLength_Method","fqnprefix":"DrapiVSE.DrapiResponse","qn":"Get.ContentLength","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get ContentLength As Long","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Provides easy access to the Content-Length HTTP header returned from the server. For chunked encoding, the length will be -1.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Provides easy access to the Content-Length HTTP header returned from the server. For chunked encoding, the length will be -1.","inlinecomment":" \t &apos; Provides easy access to the Content-Length HTTP header returned from the server. For chunked encoding, the length will be -1.","parentclassname":"DrapiResponse","codesamplehtml":"", "attributes":["READ_ONLY","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"ContentType","comment":"Meida type returned by the server. This will typically be &amp;quot;application/json&amp;quot;.","valuetype":"String","filenamebase":"ContentType_Method","fqnprefix":"DrapiVSE.DrapiResponse","qn":"Get.ContentType","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get ContentType As String","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Meida type returned by the server. This will typically be &amp;quot;application/json&amp;quot;.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Meida type returned by the server. This will typically be &amp;quot;application/json&amp;quot;.","inlinecomment":" \t &apos; Meida type returned by the server. This will typically be &amp;quot;application/json&amp;quot;.","parentclassname":"DrapiResponse","codesamplehtml":"", "attributes":["READ_ONLY","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"Done","comment":"If the server has finished sending the response. Will only be false if an asynchronous request is sent.","valuetype":"Boolean","filenamebase":"Done_Method","fqnprefix":"DrapiVSE.DrapiResponse","qn":"Get.Done","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get Done As Boolean","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;If the server has finished sending the response. Will only be false if an asynchronous request is sent.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"If the server has finished sending the response. Will only be false if an asynchronous request is sent.","inlinecomment":" \t &apos; If the server has finished sending the response. Will only be false if an asynchronous request is sent.","parentclassname":"DrapiResponse","codesamplehtml":"", "attributes":["READ_ONLY","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"ErrorMessage","comment":"If an error was returned from the remote server, this is the included message.","valuetype":"String","filenamebase":"ErrorMessage_Method","fqnprefix":"DrapiVSE.DrapiResponse","qn":"Get.ErrorMessage","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get ErrorMessage As String","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;If an error was returned from the remote server, this is the included message.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"If an error was returned from the remote server, this is the included message.","inlinecomment":" \t &apos; If an error was returned from the remote server, this is the included message.","parentclassname":"DrapiResponse","codesamplehtml":"", "attributes":["READ_ONLY","GET_CONST","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"OperationPerformed","comment":"The name of the DrapiRequest method that created this DrapiResponse.","valuetype":"String","filenamebase":"OperationPerformed_Method","fqnprefix":"DrapiVSE.DrapiResponse","qn":"Get.OperationPerformed","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get OperationPerformed As String","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;The name of the DrapiRequest method that created this DrapiResponse.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"The name of the DrapiRequest method that created this DrapiResponse.","inlinecomment":" \t &apos; The name of the DrapiRequest method that created this DrapiResponse.","parentclassname":"DrapiResponse","codesamplehtml":"", "attributes":["READ_ONLY","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"ResponseCode","comment":"The HTTP response code returned from the server. If an internal error occurred and no response was received, this will be 0.","valuetype":"Integer-Signed","filenamebase":"ResponseCode_Method","fqnprefix":"DrapiVSE.DrapiResponse","qn":"Get.ResponseCode","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get ResponseCode As Integer","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;The HTTP response code returned from the server. If an internal error occurred and no response was received, this will be 0.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"The HTTP response code returned from the server. If an internal error occurred and no response was received, this will be 0.","inlinecomment":" \t &apos; The HTTP response code returned from the server. If an internal error occurred and no response was received, this will be 0.","parentclassname":"DrapiResponse","codesamplehtml":"", "attributes":["READ_ONLY","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"TransactionMicroseconds","comment":"How long the request took to complete in microseconds.","valuetype":"Double","filenamebase":"TransactionMicroseconds_Method","fqnprefix":"DrapiVSE.DrapiResponse","qn":"Get.TransactionMicroseconds","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get TransactionMicroseconds As Double","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;How long the request took to complete in microseconds.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"How long the request took to complete in microseconds.","inlinecomment":" \t &apos; How long the request took to complete in microseconds.","parentclassname":"DrapiResponse","codesamplehtml":"", "attributes":["READ_ONLY","SET_CONST"], "signatureelements":["Property","Get"]}]},{"classname":"DrapiServer","comment":"Class for configuring sessions with a DRAPI server.","valuetype":"","filenamebase":"DrapiServer_ObjectClass","fqnprefix":"DrapiVSE","qn":"DrapiServer","codesample":"","signaturecode":3072,"instancecode":1024,"classtype":"Base","projectid":"1CE507407C8F5ECC85258C7E00690863","version":3,"classid":"CFD3C80453F7DAA785258C7E00691BBD","lsxclassid":1,"signature":"Public Class DrapiServer","modifiers":"Public","classname":"DrapiServer","parentclassname":"None","constructorsignature":"Function New() As DrapiServer","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Class for configuring sessions with a DRAPI server.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Class for configuring sessions with a DRAPI server.","inlinecomment":" \t &apos; Class for configuring sessions with a DRAPI server.","codesamplehtml":"", "methods":[{"label":"CreateRequest","comment":"Creates a DrapiRequest object to make requests to the configured server.","valuetype":"DrapiRequest","filenamebase":"CreateRequest_Method","fqnprefix":"DrapiVSE.DrapiServer","qn":"CreateRequest","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(ScopeName As String)","signature":"Function CreateRequest(ScopeName As String) As DrapiRequest","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Creates a DrapiRequest object to make requests to the configured server.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Creates a DrapiRequest object to make requests to the configured server.","inlinecomment":" \t &apos; Creates a DrapiRequest object to make requests to the configured server.","parentclassname":"DrapiServer","codesamplehtml":"", "signatureelements":["Function"], "arguments":[{"label":"ScopeName","comment":"Scope to use for the request. Domino databases are made known through a scope that defines access to forms, fields, views, and agents.","valuetype":"String","filenamebase":"ScopeName_ValuedElement","fqnprefix":"DrapiVSEDrapiServerCreateRequest","qn":"ScopeName","argumentindex":1,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Scope to use for the request. Domino databases are made known through a scope that defines access to forms, fields, views, and agents.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Scope to use for the request. Domino databases are made known through a scope that defines access to forms, fields, views, and agents.","inlinecomment":" \t &apos; Scope to use for the request. Domino databases are made known through a scope that defines access to forms, fields, views, and agents.", "attributes":["CONST","OPTIONAL"]}]},{"label":"Login","comment":"Logs into a Domino REST API server and sets this DrapiServer&amp;apos;s JWT token to the one provided by the server.","valuetype":"DrapiResponse","filenamebase":"Login_Method","fqnprefix":"DrapiVSE.DrapiServer","qn":"Login","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(User As String, Password As String)","signature":"Function Login(User As String, Password As String) As DrapiResponse","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Logs into a Domino REST API server and sets this DrapiServer&amp;apos;s JWT token to the one provided by the server.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Logs into a Domino REST API server and sets this DrapiServer&amp;apos;s JWT token to the one provided by the server.","inlinecomment":" \t &apos; Logs into a Domino REST API server and sets this DrapiServer&amp;apos;s JWT token to the one provided by the server.","parentclassname":"DrapiServer","codesamplehtml":"", "signatureelements":["Function"], "arguments":[{"label":"User","comment":"User name of the account to log into.","valuetype":"String","filenamebase":"User_ValuedElement","fqnprefix":"DrapiVSEDrapiServerLogin","qn":"User","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;User name of the account to log into.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"User name of the account to log into.","inlinecomment":" \t &apos; User name of the account to log into."},{"label":"Password","comment":"Password of the account.","valuetype":"String","filenamebase":"Password_ValuedElement","fqnprefix":"DrapiVSEDrapiServerLogin","qn":"Password","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Password of the account.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Password of the account.","inlinecomment":" \t &apos; Password of the account."}]},{"label":"Logout","comment":"Logs out the current user from the Domino REST API server, invalidating the JWT token.","valuetype":"DrapiResponse","filenamebase":"Logout_Method","fqnprefix":"DrapiVSE.DrapiServer","qn":"Logout","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"()","signature":"Function Logout() As DrapiResponse","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Logs out the current user from the Domino REST API server, invalidating the JWT token.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Logs out the current user from the Domino REST API server, invalidating the JWT token.","inlinecomment":" \t &apos; Logs out the current user from the Domino REST API server, invalidating the JWT token.","parentclassname":"DrapiServer","codesamplehtml":"", "signatureelements":["Function"]},{"label":"New","comment":"Constructor.","valuetype":"DrapiServer","filenamebase":"New_Method","fqnprefix":"DrapiVSE.DrapiServer","qn":"New","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"()","signature":"Function New() As DrapiServer","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Constructor.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Constructor.","inlinecomment":" \t &apos; Constructor.","parentclassname":"DrapiServer","codesamplehtml":"", "signatureelements":["Function"]},{"label":"RegisterVSEPath","comment":"Internal method used by the runtime.","valuetype":"Boolean","filenamebase":"RegisterVSEPath_Method","fqnprefix":"DrapiVSE.DrapiServer","qn":"RegisterVSEPath","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"()","signature":"Function RegisterVSEPath() As Boolean","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Internal method used by the runtime.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Internal method used by the runtime.","inlinecomment":" \t &apos; Internal method used by the runtime.","parentclassname":"DrapiServer","codesamplehtml":"", "signatureelements":["Function"]},{"label":"Connected","comment":"Set to True if this DrapiServer&amp;apos;s Login method was successfully called.","valuetype":"Boolean","filenamebase":"Connected_Method","fqnprefix":"DrapiVSE.DrapiServer","qn":"Get.Connected","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get Connected As Boolean","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Set to True if this DrapiServer&amp;apos;s Login method was successfully called.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Set to True if this DrapiServer&amp;apos;s Login method was successfully called.","inlinecomment":" \t &apos; Set to True if this DrapiServer&amp;apos;s Login method was successfully called.","parentclassname":"DrapiServer","codesamplehtml":"", "attributes":["READ_ONLY","GET_CONST","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"JWTToken","comment":"The JWT token string (encrypted and Base-64 encoded) used to log in to the DRAPI server. The property will be set automatically if a token is provided in the script invocation, or when the script sucessfully executes a Login call. This propery will need to be set for most methods of DrapiRequest associated with this server object.","valuetype":"String","filenamebase":"JWTToken_Method","fqnprefix":"DrapiVSE.DrapiServer","qn":"Get.JWTToken","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get JWTToken As String","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;The JWT token string (encrypted and Base-64 encoded) used to log in to the DRAPI server. The property will be set automatically if a token is provided in the script invocation, or when the script sucessfully executes a Login call. This propery will need to be set for most methods of DrapiRequest associated with this server object.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"The JWT token string (encrypted and Base-64 encoded) used to log in to the DRAPI server. The property will be set automatically if a token is provided in the script invocation, or when the script sucessfully executes a Login call. This propery will need to be set for most methods of DrapiRequest associated with this server object.","inlinecomment":" \t &apos; The JWT token string (encrypted and Base-64 encoded) used to log in to the DRAPI server. The property will be set automatically if a token is provided in the script invocation, or when the script sucessfully executes a Login call. This propery will need to be set for most methods of DrapiRequest associated with this server object.","parentclassname":"DrapiServer","codesamplehtml":"", "attributes":["SET_CONST"], "signatureelements":["Property","Get"]},{"label":"LibCurlVersion","comment":"Version of libcurl used by this VSE for HTTP requests.","valuetype":"String","filenamebase":"LibCurlVersion_Method","fqnprefix":"DrapiVSE.DrapiServer","qn":"Get.LibCurlVersion","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get LibCurlVersion As String","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Version of libcurl used by this VSE for HTTP requests.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Version of libcurl used by this VSE for HTTP requests.","inlinecomment":" \t &apos; Version of libcurl used by this VSE for HTTP requests.","parentclassname":"DrapiServer","codesamplehtml":"", "attributes":["READ_ONLY","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"ServerURL","comment":"Base URL for Domino REST API calls, protocol + server + &amp;quot;api/v1&amp;quot;, e.g. &amp;quot;http://localhost:8880/api/v1&amp;quot; to connect to a locally running Domino server.","valuetype":"String","filenamebase":"ServerURL_Method","fqnprefix":"DrapiVSE.DrapiServer","qn":"Get.ServerURL","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get ServerURL As String","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Base URL for Domino REST API calls, protocol + server + &amp;quot;api/v1&amp;quot;, e.g. &amp;quot;http://localhost:8880/api/v1&amp;quot; to connect to a locally running Domino server.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Base URL for Domino REST API calls, protocol + server + &amp;quot;api/v1&amp;quot;, e.g. &amp;quot;http://localhost:8880/api/v1&amp;quot; to connect to a locally running Domino server.","inlinecomment":" \t &apos; Base URL for Domino REST API calls, protocol + server + &amp;quot;api/v1&amp;quot;, e.g. &amp;quot;http://localhost:8880/api/v1&amp;quot; to connect to a locally running Domino server.","parentclassname":"DrapiServer","codesamplehtml":"", "attributes":["SET_CONST"], "signatureelements":["Property","Get"]},{"label":"SSLHostValidation","comment":"Turn on or off SSL host validation. Without a valid certificate or unless SSLHostValidation is set to False, the request will return a status 0, if the server requires SSL verification. Settng SSLHostValidation to false can be used for internal HTTPS URLs on servers with self-signed certs.\nDefault value is True.","valuetype":"Boolean","filenamebase":"SSLHostValidation_Method","fqnprefix":"DrapiVSE.DrapiServer","qn":"Get.SSLHostValidation","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get SSLHostValidation As Boolean","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Turn on or off SSL host validation. Without a valid certificate or unless SSLHostValidation is set to False, the request will return a status 0, if the server requires SSL verification. Settng SSLHostValidation to false can be used for internal HTTPS URLs on servers with self-signed certs.&lt;br /&gt;Default value is True.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Turn on or off SSL host validation. Without a valid certificate or unless SSLHostValidation is set to False, the request will return a status 0, if the server requires SSL verification. Settng SSLHostValidation to false can be used for internal HTTPS URLs on servers with self-signed certs.&lt;br /&gt;Default value is True.","inlinecomment":" \t &apos; Turn on or off SSL host validation. Without a valid certificate or unless SSLHostValidation is set to False, the request will return a status 0, if the server requires SSL verification. Settng SSLHostValidation to false can be used for internal HTTPS URLs on servers with self-signed certs.\nDefault value is True.","parentclassname":"DrapiServer","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"VerboseLogging","comment":"Whether this Server should create a .log file with verbose logging output from libcurl when a request to the DRAPI server is made. This is helpful when debugging networking issues related to VPN&amp;apos;s, proxies, self-signed SSL certificates, etc.","valuetype":"Boolean","filenamebase":"VerboseLogging_Method","fqnprefix":"DrapiVSE.DrapiServer","qn":"Get.VerboseLogging","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get VerboseLogging As Boolean","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Whether this Server should create a .log file with verbose logging output from libcurl when a request to the DRAPI server is made. This is helpful when debugging networking issues related to VPN&amp;apos;s, proxies, self-signed SSL certificates, etc.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Whether this Server should create a .log file with verbose logging output from libcurl when a request to the DRAPI server is made. This is helpful when debugging networking issues related to VPN&amp;apos;s, proxies, self-signed SSL certificates, etc.","inlinecomment":" \t &apos; Whether this Server should create a .log file with verbose logging output from libcurl when a request to the DRAPI server is made. This is helpful when debugging networking issues related to VPN&amp;apos;s, proxies, self-signed SSL certificates, etc.","parentclassname":"DrapiServer","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"VSEVersion","comment":"Release version of this VSE.","valuetype":"String","filenamebase":"VSEVersion_Method","fqnprefix":"DrapiVSE.DrapiServer","qn":"Get.VSEVersion","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get VSEVersion As String","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Release version of this VSE.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Release version of this VSE.","inlinecomment":" \t &apos; Release version of this VSE.","parentclassname":"DrapiServer","codesamplehtml":"", "attributes":["READ_ONLY","GET_CONST","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"JWTToken","comment":"The JWT token string (encrypted and Base-64 encoded) used to log in to the DRAPI server. The property will be set automatically if a token is provided in the script invocation, or when the script sucessfully executes a Login call. This propery will need to be set for most methods of DrapiRequest associated with this server object.","valuetype":"String","filenamebase":"JWTToken_Method","fqnprefix":"DrapiVSE.DrapiServer","qn":"Set.JWTToken","codesample":"","signaturecode":260,"instancecode":256,"argumentsuffix":"","signature":"Property Set JWTToken As String","modifiers":"Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;The JWT token string (encrypted and Base-64 encoded) used to log in to the DRAPI server. The property will be set automatically if a token is provided in the script invocation, or when the script sucessfully executes a Login call. This propery will need to be set for most methods of DrapiRequest associated with this server object.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"The JWT token string (encrypted and Base-64 encoded) used to log in to the DRAPI server. The property will be set automatically if a token is provided in the script invocation, or when the script sucessfully executes a Login call. This propery will need to be set for most methods of DrapiRequest associated with this server object.","inlinecomment":" \t &apos; The JWT token string (encrypted and Base-64 encoded) used to log in to the DRAPI server. The property will be set automatically if a token is provided in the script invocation, or when the script sucessfully executes a Login call. This propery will need to be set for most methods of DrapiRequest associated with this server object.","parentclassname":"DrapiServer","codesamplehtml":"", "attributes":["SET_CONST"], "signatureelements":["Property","Set"]},{"label":"ServerURL","comment":"Base URL for Domino REST API calls, protocol + server + &amp;quot;api/v1&amp;quot;, e.g. &amp;quot;http://localhost:8880/api/v1&amp;quot; to connect to a locally running Domino server.","valuetype":"String","filenamebase":"ServerURL_Method","fqnprefix":"DrapiVSE.DrapiServer","qn":"Set.ServerURL","codesample":"","signaturecode":260,"instancecode":256,"argumentsuffix":"","signature":"Property Set ServerURL As String","modifiers":"Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Base URL for Domino REST API calls, protocol + server + &amp;quot;api/v1&amp;quot;, e.g. &amp;quot;http://localhost:8880/api/v1&amp;quot; to connect to a locally running Domino server.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Base URL for Domino REST API calls, protocol + server + &amp;quot;api/v1&amp;quot;, e.g. &amp;quot;http://localhost:8880/api/v1&amp;quot; to connect to a locally running Domino server.","inlinecomment":" \t &apos; Base URL for Domino REST API calls, protocol + server + &amp;quot;api/v1&amp;quot;, e.g. &amp;quot;http://localhost:8880/api/v1&amp;quot; to connect to a locally running Domino server.","parentclassname":"DrapiServer","codesamplehtml":"", "attributes":["SET_CONST"], "signatureelements":["Property","Set"]},{"label":"SSLHostValidation","comment":"Turn on or off SSL host validation. Without a valid certificate or unless SSLHostValidation is set to False, the request will return a status 0, if the server requires SSL verification. Settng SSLHostValidation to false can be used for internal HTTPS URLs on servers with self-signed certs.\nDefault value is True.","valuetype":"Boolean","filenamebase":"SSLHostValidation_Method","fqnprefix":"DrapiVSE.DrapiServer","qn":"Set.SSLHostValidation","codesample":"","signaturecode":260,"instancecode":256,"argumentsuffix":"","signature":"Property Set SSLHostValidation As Boolean","modifiers":"Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Turn on or off SSL host validation. Without a valid certificate or unless SSLHostValidation is set to False, the request will return a status 0, if the server requires SSL verification. Settng SSLHostValidation to false can be used for internal HTTPS URLs on servers with self-signed certs.&lt;br /&gt;Default value is True.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Turn on or off SSL host validation. Without a valid certificate or unless SSLHostValidation is set to False, the request will return a status 0, if the server requires SSL verification. Settng SSLHostValidation to false can be used for internal HTTPS URLs on servers with self-signed certs.&lt;br /&gt;Default value is True.","inlinecomment":" \t &apos; Turn on or off SSL host validation. Without a valid certificate or unless SSLHostValidation is set to False, the request will return a status 0, if the server requires SSL verification. Settng SSLHostValidation to false can be used for internal HTTPS URLs on servers with self-signed certs.\nDefault value is True.","parentclassname":"DrapiServer","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Set"]},{"label":"VerboseLogging","comment":"Whether this Server should create a .log file with verbose logging output from libcurl when a request to the DRAPI server is made. This is helpful when debugging networking issues related to VPN&amp;apos;s, proxies, self-signed SSL certificates, etc.","valuetype":"Boolean","filenamebase":"VerboseLogging_Method","fqnprefix":"DrapiVSE.DrapiServer","qn":"Set.VerboseLogging","codesample":"","signaturecode":260,"instancecode":256,"argumentsuffix":"","signature":"Property Set VerboseLogging As Boolean","modifiers":"Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Whether this Server should create a .log file with verbose logging output from libcurl when a request to the DRAPI server is made. This is helpful when debugging networking issues related to VPN&amp;apos;s, proxies, self-signed SSL certificates, etc.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Whether this Server should create a .log file with verbose logging output from libcurl when a request to the DRAPI server is made. This is helpful when debugging networking issues related to VPN&amp;apos;s, proxies, self-signed SSL certificates, etc.","inlinecomment":" \t &apos; Whether this Server should create a .log file with verbose logging output from libcurl when a request to the DRAPI server is made. This is helpful when debugging networking issues related to VPN&amp;apos;s, proxies, self-signed SSL certificates, etc.","parentclassname":"DrapiServer","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Set"]}]},{"classname":"DrapiServerInfo","comment":"Contains information about Domino and the Domino REST API version.","valuetype":"DrapiResponse","filenamebase":"DrapiServerInfo_ObjectClass","fqnprefix":"DrapiVSE","qn":"DrapiServerInfo","codesample":"","signaturecode":3072,"instancecode":1024,"parentclassname":"DrapiResponse","classtype":"Derived","classderivetype":"DrapiResponse","classattribnewnotexposed":"UnexposedNew","projectid":"1CE507407C8F5ECC85258C7E00690863","version":3,"classid":"5A4FE908DF1A44B085258C98004B5FDB","lsxclassid":1,"signature":"Public Class DrapiServerInfo As DrapiResponse","modifiers":"Public","classname":"DrapiServerInfo","constructorsignature":"Function New() As DrapiServerInfo","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Contains information about Domino and the Domino REST API version.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Contains information about Domino and the Domino REST API version.","inlinecomment":" \t &apos; Contains information about Domino and the Domino REST API version.","codesamplehtml":"", "methods":[{"label":"New","comment":"","valuetype":"DrapiServerInfo","filenamebase":"New_Method","fqnprefix":"DrapiVSE.DrapiServerInfo","qn":"New","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"()","signature":"Function New() As DrapiServerInfo","modifiers":"","commentblock":"","commenthtml":"","inlinecomment":"","parentclassname":"DrapiServerInfo","codesamplehtml":"", "signatureelements":["Function"]},{"label":"DominoVersion","comment":"A string representing the version of Domino the server is running.","valuetype":"String","filenamebase":"DominoVersion_Method","fqnprefix":"DrapiVSE.DrapiServerInfo","qn":"Get.DominoVersion","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get DominoVersion As String","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;A string representing the version of Domino the server is running.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"A string representing the version of Domino the server is running.","inlinecomment":" \t &apos; A string representing the version of Domino the server is running.","parentclassname":"DrapiServerInfo","codesamplehtml":"", "attributes":["READ_ONLY","GET_CONST","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"DrapiVersion","comment":"A string representing the version of the Domino REST API the server is running.","valuetype":"String","filenamebase":"DrapiVersion_Method","fqnprefix":"DrapiVSE.DrapiServerInfo","qn":"Get.DrapiVersion","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get DrapiVersion As String","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;A string representing the version of the Domino REST API the server is running.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"A string representing the version of the Domino REST API the server is running.","inlinecomment":" \t &apos; A string representing the version of the Domino REST API the server is running.","parentclassname":"DrapiServerInfo","codesamplehtml":"", "attributes":["READ_ONLY","GET_CONST","SET_CONST"], "signatureelements":["Property","Get"]}]},{"classname":"GetListEntriesArgs","comment":"Arguments object for KeepScope.GetListEntries. See documentation for GetViewEntries for details on the parameters:\nhttps://redocly.github.io/redoc/?url=https://opensource.hcltechsw.com/Domino-rest-api/assets/downloads/openapi.basis.json#tag/data/operation/fetchViewEntries","valuetype":"","filenamebase":"GetListEntriesArgs_ObjectClass","fqnprefix":"DrapiVSE","qn":"GetListEntriesArgs","codesample":"","signaturecode":3072,"instancecode":1024,"classtype":"Base","projectid":"1CE507407C8F5ECC85258C7E00690863","version":3,"classid":"963F80603552889A85258CB4005B45A4","lsxclassid":1,"signature":"Public Class GetListEntriesArgs","modifiers":"Public","classname":"GetListEntriesArgs","parentclassname":"None","constructorsignature":"Function New() As GetListEntriesArgs","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Arguments object for KeepScope.GetListEntries. See documentation for GetViewEntries for details on the parameters:&lt;br /&gt;https://redocly.github.io/redoc/?url=https://opensource.hcltechsw.com/Domino-rest-api/assets/downloads/openapi.basis.json#tag/data/operation/fetchViewEntries&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Arguments object for KeepScope.GetListEntries. See documentation for GetViewEntries for details on the parameters:&lt;br /&gt;https://redocly.github.io/redoc/?url=https://opensource.hcltechsw.com/Domino-rest-api/assets/downloads/openapi.basis.json#tag/data/operation/fetchViewEntries","inlinecomment":" \t &apos; Arguments object for KeepScope.GetListEntries. See documentation for GetViewEntries for details on the parameters:\nhttps://redocly.github.io/redoc/?url=https://opensource.hcltechsw.com/Domino-rest-api/assets/downloads/openapi.basis.json#tag/data/operation/fetchViewEntries","codesamplehtml":"", "methods":[{"label":"New","comment":"","valuetype":"GetListEntriesArgs","filenamebase":"New_Method","fqnprefix":"DrapiVSE.GetListEntriesArgs","qn":"New","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"()","signature":"Function New() As GetListEntriesArgs","modifiers":"","commentblock":"","commenthtml":"","inlinecomment":"","parentclassname":"GetListEntriesArgs","codesamplehtml":"", "signatureelements":["Function"]},{"label":"Categories","comment":"Categories to restrict view queries to.","valuetype":"String","filenamebase":"Categories_Method","fqnprefix":"DrapiVSE.GetListEntriesArgs","qn":"Get.Categories","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get Categories As String Array","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Categories to restrict view queries to.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Categories to restrict view queries to.","inlinecomment":" \t &apos; Categories to restrict view queries to.","parentclassname":"GetListEntriesArgs","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST","Array"], "signatureelements":["Property","Get"]},{"label":"Column","comment":"Column for alternative sorting. This requires the list to be designed for indexing on this column.","valuetype":"String","filenamebase":"Column_Method","fqnprefix":"DrapiVSE.GetListEntriesArgs","qn":"Get.Column","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get Column As String","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Column for alternative sorting. This requires the list to be designed for indexing on this column.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Column for alternative sorting. This requires the list to be designed for indexing on this column.","inlinecomment":" \t &apos; Column for alternative sorting. This requires the list to be designed for indexing on this column.","parentclassname":"GetListEntriesArgs","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"Count","comment":"How many entries shall be returned, default = 1000, All entries up to Integer.MAX_VALUE = -1 ","valuetype":"Long-Unsigned","filenamebase":"Count_Method","fqnprefix":"DrapiVSE.GetListEntriesArgs","qn":"Get.Count","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get Count As Long","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;How many entries shall be returned, default = 1000, All entries up to Integer.MAX_VALUE = -1 &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"How many entries shall be returned, default = 1000, All entries up to Integer.MAX_VALUE = -1 ","inlinecomment":" \t &apos; How many entries shall be returned, default = 1000, All entries up to Integer.MAX_VALUE = -1 ","parentclassname":"GetListEntriesArgs","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"Direction","comment":"The direction for alternative sorting. This is ignored unless &amp;quot;column&amp;quot; query parameter is passed as well. This requires the list to be designed for indexing on this column in the desired direction. Defaults to ascending if column is set. Options are &amp;quot;asc&amp;quot; for ascending or &amp;quot;desc&amp;quot; for descending.","valuetype":"String","filenamebase":"Direction_Method","fqnprefix":"DrapiVSE.GetListEntriesArgs","qn":"Get.Direction","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get Direction As String","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;The direction for alternative sorting. This is ignored unless &amp;quot;column&amp;quot; query parameter is passed as well. This requires the list to be designed for indexing on this column in the desired direction. Defaults to ascending if column is set. Options are &amp;quot;asc&amp;quot; for ascending or &amp;quot;desc&amp;quot; for descending.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"The direction for alternative sorting. This is ignored unless &amp;quot;column&amp;quot; query parameter is passed as well. This requires the list to be designed for indexing on this column in the desired direction. Defaults to ascending if column is set. Options are &amp;quot;asc&amp;quot; for ascending or &amp;quot;desc&amp;quot; for descending.","inlinecomment":" \t &apos; The direction for alternative sorting. This is ignored unless &amp;quot;column&amp;quot; query parameter is passed as well. This requires the list to be designed for indexing on this column in the desired direction. Defaults to ascending if column is set. Options are &amp;quot;asc&amp;quot; for ascending or &amp;quot;desc&amp;quot; for descending.","parentclassname":"GetListEntriesArgs","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"DistinctDocuments","comment":"Determines whether, when documents=true, only distinct documents should be retrieved if they exist multiple times in the list.","valuetype":"Boolean","filenamebase":"DistinctDocuments_Method","fqnprefix":"DrapiVSE.GetListEntriesArgs","qn":"Get.DistinctDocuments","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get DistinctDocuments As Boolean","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Determines whether, when documents=true, only distinct documents should be retrieved if they exist multiple times in the list.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Determines whether, when documents=true, only distinct documents should be retrieved if they exist multiple times in the list.","inlinecomment":" \t &apos; Determines whether, when documents=true, only distinct documents should be retrieved if they exist multiple times in the list.","parentclassname":"GetListEntriesArgs","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"FTSearchQuery","comment":"Full-text search query to filter the contents of the list.","valuetype":"String","filenamebase":"FTSearchQuery_Method","fqnprefix":"DrapiVSE.GetListEntriesArgs","qn":"Get.FTSearchQuery","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get FTSearchQuery As String","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Full-text search query to filter the contents of the list.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Full-text search query to filter the contents of the list.","inlinecomment":" \t &apos; Full-text search query to filter the contents of the list.","parentclassname":"GetListEntriesArgs","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"KeyAllowPartial","comment":"Select by partial Key. Default is false (key match is exact)","valuetype":"Boolean","filenamebase":"KeyAllowPartial_Method","fqnprefix":"DrapiVSE.GetListEntriesArgs","qn":"Get.KeyAllowPartial","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get KeyAllowPartial As Boolean","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Select by partial Key. Default is false (key match is exact)&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Select by partial Key. Default is false (key match is exact)","inlinecomment":" \t &apos; Select by partial Key. Default is false (key match is exact)","parentclassname":"GetListEntriesArgs","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"Keys","comment":"Useful for categorized or sorted lists. Limits return values to entries matching the key or keys. Use multiple key parameter items to specify multiple keys in request URL. The keys specified must be in the same order as the sorted columns from left to right. Unsorted columns will be ignored.","valuetype":"String","filenamebase":"Keys_Method","fqnprefix":"DrapiVSE.GetListEntriesArgs","qn":"Get.Keys","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get Keys As String Array","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Useful for categorized or sorted lists. Limits return values to entries matching the key or keys. Use multiple key parameter items to specify multiple keys in request URL. The keys specified must be in the same order as the sorted columns from left to right. Unsorted columns will be ignored.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Useful for categorized or sorted lists. Limits return values to entries matching the key or keys. Use multiple key parameter items to specify multiple keys in request URL. The keys specified must be in the same order as the sorted columns from left to right. Unsorted columns will be ignored.","inlinecomment":" \t &apos; Useful for categorized or sorted lists. Limits return values to entries matching the key or keys. Use multiple key parameter items to specify multiple keys in request URL. The keys specified must be in the same order as the sorted columns from left to right. Unsorted columns will be ignored.","parentclassname":"GetListEntriesArgs","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST","Array"], "signatureelements":["Property","Get"]},{"label":"KeyType","comment":"The type of the keys used in StartKey and UntilKey. Options are &amp;quot;number&amp;quot;, &amp;quot;text&amp;quot;, &amp;quot;time&amp;quot;.","valuetype":"String","filenamebase":"KeyType_Method","fqnprefix":"DrapiVSE.GetListEntriesArgs","qn":"Get.KeyType","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get KeyType As String","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;The type of the keys used in StartKey and UntilKey. Options are &amp;quot;number&amp;quot;, &amp;quot;text&amp;quot;, &amp;quot;time&amp;quot;.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"The type of the keys used in StartKey and UntilKey. Options are &amp;quot;number&amp;quot;, &amp;quot;text&amp;quot;, &amp;quot;time&amp;quot;.","inlinecomment":" \t &apos; The type of the keys used in StartKey and UntilKey. Options are &amp;quot;number&amp;quot;, &amp;quot;text&amp;quot;, &amp;quot;time&amp;quot;.","parentclassname":"GetListEntriesArgs","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"MarkRead","comment":"When retrieving documents instead of view entries, mark them as read by the current user after retrieval.","valuetype":"Boolean","filenamebase":"MarkRead_Method","fqnprefix":"DrapiVSE.GetListEntriesArgs","qn":"Get.MarkRead","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get MarkRead As Boolean","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;When retrieving documents instead of view entries, mark them as read by the current user after retrieval.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"When retrieving documents instead of view entries, mark them as read by the current user after retrieval.","inlinecomment":" \t &apos; When retrieving documents instead of view entries, mark them as read by the current user after retrieval.","parentclassname":"GetListEntriesArgs","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"MarkUnread","comment":"When retrieving documents instead of view entries, mark them as unread by the current user after retrieval.","valuetype":"Boolean","filenamebase":"MarkUnread_Method","fqnprefix":"DrapiVSE.GetListEntriesArgs","qn":"Get.MarkUnread","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get MarkUnread As Boolean","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;When retrieving documents instead of view entries, mark them as unread by the current user after retrieval.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"When retrieving documents instead of view entries, mark them as unread by the current user after retrieval.","inlinecomment":" \t &apos; When retrieving documents instead of view entries, mark them as unread by the current user after retrieval.","parentclassname":"GetListEntriesArgs","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"Meta","comment":"When set to false, all metadata Json items on the top level of an object get suppressed. Default is true.","valuetype":"Boolean","filenamebase":"Meta_Method","fqnprefix":"DrapiVSE.GetListEntriesArgs","qn":"Get.Meta","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get Meta As Boolean","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;When set to false, all metadata Json items on the top level of an object get suppressed. Default is true.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"When set to false, all metadata Json items on the top level of an object get suppressed. Default is true.","inlinecomment":" \t &apos; When set to false, all metadata Json items on the top level of an object get suppressed. Default is true.","parentclassname":"GetListEntriesArgs","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"MetaAdditional","comment":"Additional metadata that is not included in the View. This may have a slight performance cost so use only if necessary. ","valuetype":"Boolean","filenamebase":"MetaAdditional_Method","fqnprefix":"DrapiVSE.GetListEntriesArgs","qn":"Get.MetaAdditional","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get MetaAdditional As Boolean","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Additional metadata that is not included in the View. This may have a slight performance cost so use only if necessary. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Additional metadata that is not included in the View. This may have a slight performance cost so use only if necessary. ","inlinecomment":" \t &apos; Additional metadata that is not included in the View. This may have a slight performance cost so use only if necessary. ","parentclassname":"GetListEntriesArgs","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"Mode","comment":"Document mode to retrieve the documents with. (Every Form can have multiple modes, each can be different from other modes). Also, Current logged-in user must have access for the specified mode. ","valuetype":"String","filenamebase":"Mode_Method","fqnprefix":"DrapiVSE.GetListEntriesArgs","qn":"Get.Mode","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get Mode As String","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Document mode to retrieve the documents with. (Every Form can have multiple modes, each can be different from other modes). Also, Current logged-in user must have access for the specified mode. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Document mode to retrieve the documents with. (Every Form can have multiple modes, each can be different from other modes). Also, Current logged-in user must have access for the specified mode. ","inlinecomment":" \t &apos; Document mode to retrieve the documents with. (Every Form can have multiple modes, each can be different from other modes). Also, Current logged-in user must have access for the specified mode. ","parentclassname":"GetListEntriesArgs","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"ReturnDocuments","comment":"Shall the query return documents instead of view entries","valuetype":"Boolean","filenamebase":"ReturnDocuments_Method","fqnprefix":"DrapiVSE.GetListEntriesArgs","qn":"Get.ReturnDocuments","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get ReturnDocuments As Boolean","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Shall the query return documents instead of view entries&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Shall the query return documents instead of view entries","inlinecomment":" \t &apos; Shall the query return documents instead of view entries","parentclassname":"GetListEntriesArgs","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"RichTextAs","comment":"The format RichText fields will be returned when retrieving documents instead of view entries. The default if unspecified is mime.","valuetype":"String","filenamebase":"RichTextAs_Method","fqnprefix":"DrapiVSE.GetListEntriesArgs","qn":"Get.RichTextAs","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get RichTextAs As String","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;The format RichText fields will be returned when retrieving documents instead of view entries. The default if unspecified is mime.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"The format RichText fields will be returned when retrieving documents instead of view entries. The default if unspecified is mime.","inlinecomment":" \t &apos; The format RichText fields will be returned when retrieving documents instead of view entries. The default if unspecified is mime.","parentclassname":"GetListEntriesArgs","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"Scope","comment":"What shall the view return. Options: &amp;quot;document&amp;quot; for document entries, &amp;quot;categories&amp;quot; for category names, or &amp;quot;all&amp;quot; for everything.","valuetype":"String","filenamebase":"Scope_Method","fqnprefix":"DrapiVSE.GetListEntriesArgs","qn":"Get.Scope","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get Scope As String","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;What shall the view return. Options: &amp;quot;document&amp;quot; for document entries, &amp;quot;categories&amp;quot; for category names, or &amp;quot;all&amp;quot; for everything.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"What shall the view return. Options: &amp;quot;document&amp;quot; for document entries, &amp;quot;categories&amp;quot; for category names, or &amp;quot;all&amp;quot; for everything.","inlinecomment":" \t &apos; What shall the view return. Options: &amp;quot;document&amp;quot; for document entries, &amp;quot;categories&amp;quot; for category names, or &amp;quot;all&amp;quot; for everything.","parentclassname":"GetListEntriesArgs","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"Start","comment":"at which entry should return values start (zero based), default = 0","valuetype":"Long-Unsigned","filenamebase":"Start_Method","fqnprefix":"DrapiVSE.GetListEntriesArgs","qn":"Get.Start","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get Start As Long","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;at which entry should return values start (zero based), default = 0&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"at which entry should return values start (zero based), default = 0","inlinecomment":" \t &apos; at which entry should return values start (zero based), default = 0","parentclassname":"GetListEntriesArgs","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"StartKey","comment":"Key value for the first entry to retrieve. This is treated as a greater-than-or-equal lookup.","valuetype":"String","filenamebase":"StartKey_Method","fqnprefix":"DrapiVSE.GetListEntriesArgs","qn":"Get.StartKey","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get StartKey As String","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Key value for the first entry to retrieve. This is treated as a greater-than-or-equal lookup.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Key value for the first entry to retrieve. This is treated as a greater-than-or-equal lookup.","inlinecomment":" \t &apos; Key value for the first entry to retrieve. This is treated as a greater-than-or-equal lookup.","parentclassname":"GetListEntriesArgs","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"StartsWith","comment":"A character combination to perform a partial match to identify a starting point. The character combination will be applied to the &amp;quot;column&amp;quot; and &amp;quot;direction&amp;quot; passed in the query string. This cannot be combined with the &amp;quot;keys&amp;quot; parameter, i.e. you cannot filter on keys and startwith within that key.","valuetype":"String","filenamebase":"StartsWith_Method","fqnprefix":"DrapiVSE.GetListEntriesArgs","qn":"Get.StartsWith","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get StartsWith As String","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;A character combination to perform a partial match to identify a starting point. The character combination will be applied to the &amp;quot;column&amp;quot; and &amp;quot;direction&amp;quot; passed in the query string. This cannot be combined with the &amp;quot;keys&amp;quot; parameter, i.e. you cannot filter on keys and startwith within that key.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"A character combination to perform a partial match to identify a starting point. The character combination will be applied to the &amp;quot;column&amp;quot; and &amp;quot;direction&amp;quot; passed in the query string. This cannot be combined with the &amp;quot;keys&amp;quot; parameter, i.e. you cannot filter on keys and startwith within that key.","inlinecomment":" \t &apos; A character combination to perform a partial match to identify a starting point. The character combination will be applied to the &amp;quot;column&amp;quot; and &amp;quot;direction&amp;quot; passed in the query string. This cannot be combined with the &amp;quot;keys&amp;quot; parameter, i.e. you cannot filter on keys and startwith within that key.","parentclassname":"GetListEntriesArgs","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"UnreadOnly","comment":"Retrieve only unread entries. Cannot be combined with documents=true, documentsOnly=true, or methods to select or query documents","valuetype":"Boolean","filenamebase":"UnreadOnly_Method","fqnprefix":"DrapiVSE.GetListEntriesArgs","qn":"Get.UnreadOnly","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get UnreadOnly As Boolean","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Retrieve only unread entries. Cannot be combined with documents=true, documentsOnly=true, or methods to select or query documents&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Retrieve only unread entries. Cannot be combined with documents=true, documentsOnly=true, or methods to select or query documents","inlinecomment":" \t &apos; Retrieve only unread entries. Cannot be combined with documents=true, documentsOnly=true, or methods to select or query documents","parentclassname":"GetListEntriesArgs","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"UntilKey","comment":"Key value to stop traversal when used in combination with startKey. This is treated as a greater-than-or-equal lookup and represents the first value to not return","valuetype":"String","filenamebase":"UntilKey_Method","fqnprefix":"DrapiVSE.GetListEntriesArgs","qn":"Get.UntilKey","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get UntilKey As String","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Key value to stop traversal when used in combination with startKey. This is treated as a greater-than-or-equal lookup and represents the first value to not return&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Key value to stop traversal when used in combination with startKey. This is treated as a greater-than-or-equal lookup and represents the first value to not return","inlinecomment":" \t &apos; Key value to stop traversal when used in combination with startKey. This is treated as a greater-than-or-equal lookup and represents the first value to not return","parentclassname":"GetListEntriesArgs","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"Categories","comment":"Categories to restrict view queries to.","valuetype":"String","filenamebase":"Categories_Method","fqnprefix":"DrapiVSE.GetListEntriesArgs","qn":"Set.Categories","codesample":"","signaturecode":260,"instancecode":256,"argumentsuffix":"","signature":"Property Set Categories As String Array","modifiers":"Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Categories to restrict view queries to.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Categories to restrict view queries to.","inlinecomment":" \t &apos; Categories to restrict view queries to.","parentclassname":"GetListEntriesArgs","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST","Array"], "signatureelements":["Property","Set"]},{"label":"Column","comment":"Column for alternative sorting. This requires the list to be designed for indexing on this column.","valuetype":"String","filenamebase":"Column_Method","fqnprefix":"DrapiVSE.GetListEntriesArgs","qn":"Set.Column","codesample":"","signaturecode":260,"instancecode":256,"argumentsuffix":"","signature":"Property Set Column As String","modifiers":"Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Column for alternative sorting. This requires the list to be designed for indexing on this column.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Column for alternative sorting. This requires the list to be designed for indexing on this column.","inlinecomment":" \t &apos; Column for alternative sorting. This requires the list to be designed for indexing on this column.","parentclassname":"GetListEntriesArgs","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Set"]},{"label":"Count","comment":"How many entries shall be returned, default = 1000, All entries up to Integer.MAX_VALUE = -1 ","valuetype":"Long-Unsigned","filenamebase":"Count_Method","fqnprefix":"DrapiVSE.GetListEntriesArgs","qn":"Set.Count","codesample":"","signaturecode":260,"instancecode":256,"argumentsuffix":"","signature":"Property Set Count As Long","modifiers":"Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;How many entries shall be returned, default = 1000, All entries up to Integer.MAX_VALUE = -1 &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"How many entries shall be returned, default = 1000, All entries up to Integer.MAX_VALUE = -1 ","inlinecomment":" \t &apos; How many entries shall be returned, default = 1000, All entries up to Integer.MAX_VALUE = -1 ","parentclassname":"GetListEntriesArgs","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Set"]},{"label":"Direction","comment":"The direction for alternative sorting. This is ignored unless &amp;quot;column&amp;quot; query parameter is passed as well. This requires the list to be designed for indexing on this column in the desired direction. Defaults to ascending if column is set. Options are &amp;quot;asc&amp;quot; for ascending or &amp;quot;desc&amp;quot; for descending.","valuetype":"String","filenamebase":"Direction_Method","fqnprefix":"DrapiVSE.GetListEntriesArgs","qn":"Set.Direction","codesample":"","signaturecode":260,"instancecode":256,"argumentsuffix":"","signature":"Property Set Direction As String","modifiers":"Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;The direction for alternative sorting. This is ignored unless &amp;quot;column&amp;quot; query parameter is passed as well. This requires the list to be designed for indexing on this column in the desired direction. Defaults to ascending if column is set. Options are &amp;quot;asc&amp;quot; for ascending or &amp;quot;desc&amp;quot; for descending.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"The direction for alternative sorting. This is ignored unless &amp;quot;column&amp;quot; query parameter is passed as well. This requires the list to be designed for indexing on this column in the desired direction. Defaults to ascending if column is set. Options are &amp;quot;asc&amp;quot; for ascending or &amp;quot;desc&amp;quot; for descending.","inlinecomment":" \t &apos; The direction for alternative sorting. This is ignored unless &amp;quot;column&amp;quot; query parameter is passed as well. This requires the list to be designed for indexing on this column in the desired direction. Defaults to ascending if column is set. Options are &amp;quot;asc&amp;quot; for ascending or &amp;quot;desc&amp;quot; for descending.","parentclassname":"GetListEntriesArgs","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Set"]},{"label":"DistinctDocuments","comment":"Determines whether, when documents=true, only distinct documents should be retrieved if they exist multiple times in the list.","valuetype":"Boolean","filenamebase":"DistinctDocuments_Method","fqnprefix":"DrapiVSE.GetListEntriesArgs","qn":"Set.DistinctDocuments","codesample":"","signaturecode":260,"instancecode":256,"argumentsuffix":"","signature":"Property Set DistinctDocuments As Boolean","modifiers":"Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Determines whether, when documents=true, only distinct documents should be retrieved if they exist multiple times in the list.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Determines whether, when documents=true, only distinct documents should be retrieved if they exist multiple times in the list.","inlinecomment":" \t &apos; Determines whether, when documents=true, only distinct documents should be retrieved if they exist multiple times in the list.","parentclassname":"GetListEntriesArgs","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Set"]},{"label":"FTSearchQuery","comment":"Full-text search query to filter the contents of the list.","valuetype":"String","filenamebase":"FTSearchQuery_Method","fqnprefix":"DrapiVSE.GetListEntriesArgs","qn":"Set.FTSearchQuery","codesample":"","signaturecode":260,"instancecode":256,"argumentsuffix":"","signature":"Property Set FTSearchQuery As String","modifiers":"Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Full-text search query to filter the contents of the list.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Full-text search query to filter the contents of the list.","inlinecomment":" \t &apos; Full-text search query to filter the contents of the list.","parentclassname":"GetListEntriesArgs","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Set"]},{"label":"KeyAllowPartial","comment":"Select by partial Key. Default is false (key match is exact)","valuetype":"Boolean","filenamebase":"KeyAllowPartial_Method","fqnprefix":"DrapiVSE.GetListEntriesArgs","qn":"Set.KeyAllowPartial","codesample":"","signaturecode":260,"instancecode":256,"argumentsuffix":"","signature":"Property Set KeyAllowPartial As Boolean","modifiers":"Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Select by partial Key. Default is false (key match is exact)&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Select by partial Key. Default is false (key match is exact)","inlinecomment":" \t &apos; Select by partial Key. Default is false (key match is exact)","parentclassname":"GetListEntriesArgs","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Set"]},{"label":"Keys","comment":"Useful for categorized or sorted lists. Limits return values to entries matching the key or keys. Use multiple key parameter items to specify multiple keys in request URL. The keys specified must be in the same order as the sorted columns from left to right. Unsorted columns will be ignored.","valuetype":"String","filenamebase":"Keys_Method","fqnprefix":"DrapiVSE.GetListEntriesArgs","qn":"Set.Keys","codesample":"","signaturecode":260,"instancecode":256,"argumentsuffix":"","signature":"Property Set Keys As String Array","modifiers":"Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Useful for categorized or sorted lists. Limits return values to entries matching the key or keys. Use multiple key parameter items to specify multiple keys in request URL. The keys specified must be in the same order as the sorted columns from left to right. Unsorted columns will be ignored.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Useful for categorized or sorted lists. Limits return values to entries matching the key or keys. Use multiple key parameter items to specify multiple keys in request URL. The keys specified must be in the same order as the sorted columns from left to right. Unsorted columns will be ignored.","inlinecomment":" \t &apos; Useful for categorized or sorted lists. Limits return values to entries matching the key or keys. Use multiple key parameter items to specify multiple keys in request URL. The keys specified must be in the same order as the sorted columns from left to right. Unsorted columns will be ignored.","parentclassname":"GetListEntriesArgs","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST","Array"], "signatureelements":["Property","Set"]},{"label":"KeyType","comment":"The type of the keys used in StartKey and UntilKey. Options are &amp;quot;number&amp;quot;, &amp;quot;text&amp;quot;, &amp;quot;time&amp;quot;.","valuetype":"String","filenamebase":"KeyType_Method","fqnprefix":"DrapiVSE.GetListEntriesArgs","qn":"Set.KeyType","codesample":"","signaturecode":260,"instancecode":256,"argumentsuffix":"","signature":"Property Set KeyType As String","modifiers":"Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;The type of the keys used in StartKey and UntilKey. Options are &amp;quot;number&amp;quot;, &amp;quot;text&amp;quot;, &amp;quot;time&amp;quot;.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"The type of the keys used in StartKey and UntilKey. Options are &amp;quot;number&amp;quot;, &amp;quot;text&amp;quot;, &amp;quot;time&amp;quot;.","inlinecomment":" \t &apos; The type of the keys used in StartKey and UntilKey. Options are &amp;quot;number&amp;quot;, &amp;quot;text&amp;quot;, &amp;quot;time&amp;quot;.","parentclassname":"GetListEntriesArgs","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Set"]},{"label":"MarkRead","comment":"When retrieving documents instead of view entries, mark them as read by the current user after retrieval.","valuetype":"Boolean","filenamebase":"MarkRead_Method","fqnprefix":"DrapiVSE.GetListEntriesArgs","qn":"Set.MarkRead","codesample":"","signaturecode":260,"instancecode":256,"argumentsuffix":"","signature":"Property Set MarkRead As Boolean","modifiers":"Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;When retrieving documents instead of view entries, mark them as read by the current user after retrieval.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"When retrieving documents instead of view entries, mark them as read by the current user after retrieval.","inlinecomment":" \t &apos; When retrieving documents instead of view entries, mark them as read by the current user after retrieval.","parentclassname":"GetListEntriesArgs","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Set"]},{"label":"MarkUnread","comment":"When retrieving documents instead of view entries, mark them as unread by the current user after retrieval.","valuetype":"Boolean","filenamebase":"MarkUnread_Method","fqnprefix":"DrapiVSE.GetListEntriesArgs","qn":"Set.MarkUnread","codesample":"","signaturecode":260,"instancecode":256,"argumentsuffix":"","signature":"Property Set MarkUnread As Boolean","modifiers":"Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;When retrieving documents instead of view entries, mark them as unread by the current user after retrieval.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"When retrieving documents instead of view entries, mark them as unread by the current user after retrieval.","inlinecomment":" \t &apos; When retrieving documents instead of view entries, mark them as unread by the current user after retrieval.","parentclassname":"GetListEntriesArgs","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Set"]},{"label":"Meta","comment":"When set to false, all metadata Json items on the top level of an object get suppressed. Default is true.","valuetype":"Boolean","filenamebase":"Meta_Method","fqnprefix":"DrapiVSE.GetListEntriesArgs","qn":"Set.Meta","codesample":"","signaturecode":260,"instancecode":256,"argumentsuffix":"","signature":"Property Set Meta As Boolean","modifiers":"Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;When set to false, all metadata Json items on the top level of an object get suppressed. Default is true.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"When set to false, all metadata Json items on the top level of an object get suppressed. Default is true.","inlinecomment":" \t &apos; When set to false, all metadata Json items on the top level of an object get suppressed. Default is true.","parentclassname":"GetListEntriesArgs","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Set"]},{"label":"MetaAdditional","comment":"Additional metadata that is not included in the View. This may have a slight performance cost so use only if necessary. ","valuetype":"Boolean","filenamebase":"MetaAdditional_Method","fqnprefix":"DrapiVSE.GetListEntriesArgs","qn":"Set.MetaAdditional","codesample":"","signaturecode":260,"instancecode":256,"argumentsuffix":"","signature":"Property Set MetaAdditional As Boolean","modifiers":"Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Additional metadata that is not included in the View. This may have a slight performance cost so use only if necessary. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Additional metadata that is not included in the View. This may have a slight performance cost so use only if necessary. ","inlinecomment":" \t &apos; Additional metadata that is not included in the View. This may have a slight performance cost so use only if necessary. ","parentclassname":"GetListEntriesArgs","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Set"]},{"label":"Mode","comment":"Document mode to retrieve the documents with. (Every Form can have multiple modes, each can be different from other modes). Also, Current logged-in user must have access for the specified mode. ","valuetype":"String","filenamebase":"Mode_Method","fqnprefix":"DrapiVSE.GetListEntriesArgs","qn":"Set.Mode","codesample":"","signaturecode":260,"instancecode":256,"argumentsuffix":"","signature":"Property Set Mode As String","modifiers":"Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Document mode to retrieve the documents with. (Every Form can have multiple modes, each can be different from other modes). Also, Current logged-in user must have access for the specified mode. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Document mode to retrieve the documents with. (Every Form can have multiple modes, each can be different from other modes). Also, Current logged-in user must have access for the specified mode. ","inlinecomment":" \t &apos; Document mode to retrieve the documents with. (Every Form can have multiple modes, each can be different from other modes). Also, Current logged-in user must have access for the specified mode. ","parentclassname":"GetListEntriesArgs","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Set"]},{"label":"ReturnDocuments","comment":"Shall the query return documents instead of view entries","valuetype":"Boolean","filenamebase":"ReturnDocuments_Method","fqnprefix":"DrapiVSE.GetListEntriesArgs","qn":"Set.ReturnDocuments","codesample":"","signaturecode":260,"instancecode":256,"argumentsuffix":"","signature":"Property Set ReturnDocuments As Boolean","modifiers":"Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Shall the query return documents instead of view entries&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Shall the query return documents instead of view entries","inlinecomment":" \t &apos; Shall the query return documents instead of view entries","parentclassname":"GetListEntriesArgs","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Set"]},{"label":"RichTextAs","comment":"The format RichText fields will be returned when retrieving documents instead of view entries. The default if unspecified is mime.","valuetype":"String","filenamebase":"RichTextAs_Method","fqnprefix":"DrapiVSE.GetListEntriesArgs","qn":"Set.RichTextAs","codesample":"","signaturecode":260,"instancecode":256,"argumentsuffix":"","signature":"Property Set RichTextAs As String","modifiers":"Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;The format RichText fields will be returned when retrieving documents instead of view entries. The default if unspecified is mime.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"The format RichText fields will be returned when retrieving documents instead of view entries. The default if unspecified is mime.","inlinecomment":" \t &apos; The format RichText fields will be returned when retrieving documents instead of view entries. The default if unspecified is mime.","parentclassname":"GetListEntriesArgs","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Set"]},{"label":"Scope","comment":"What shall the view return. Options: &amp;quot;document&amp;quot; for document entries, &amp;quot;categories&amp;quot; for category names, or &amp;quot;all&amp;quot; for everything.","valuetype":"String","filenamebase":"Scope_Method","fqnprefix":"DrapiVSE.GetListEntriesArgs","qn":"Set.Scope","codesample":"","signaturecode":260,"instancecode":256,"argumentsuffix":"","signature":"Property Set Scope As String","modifiers":"Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;What shall the view return. Options: &amp;quot;document&amp;quot; for document entries, &amp;quot;categories&amp;quot; for category names, or &amp;quot;all&amp;quot; for everything.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"What shall the view return. Options: &amp;quot;document&amp;quot; for document entries, &amp;quot;categories&amp;quot; for category names, or &amp;quot;all&amp;quot; for everything.","inlinecomment":" \t &apos; What shall the view return. Options: &amp;quot;document&amp;quot; for document entries, &amp;quot;categories&amp;quot; for category names, or &amp;quot;all&amp;quot; for everything.","parentclassname":"GetListEntriesArgs","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Set"]},{"label":"Start","comment":"at which entry should return values start (zero based), default = 0","valuetype":"Long-Unsigned","filenamebase":"Start_Method","fqnprefix":"DrapiVSE.GetListEntriesArgs","qn":"Set.Start","codesample":"","signaturecode":260,"instancecode":256,"argumentsuffix":"","signature":"Property Set Start As Long","modifiers":"Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;at which entry should return values start (zero based), default = 0&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"at which entry should return values start (zero based), default = 0","inlinecomment":" \t &apos; at which entry should return values start (zero based), default = 0","parentclassname":"GetListEntriesArgs","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Set"]},{"label":"StartKey","comment":"Key value for the first entry to retrieve. This is treated as a greater-than-or-equal lookup.","valuetype":"String","filenamebase":"StartKey_Method","fqnprefix":"DrapiVSE.GetListEntriesArgs","qn":"Set.StartKey","codesample":"","signaturecode":260,"instancecode":256,"argumentsuffix":"","signature":"Property Set StartKey As String","modifiers":"Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Key value for the first entry to retrieve. This is treated as a greater-than-or-equal lookup.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Key value for the first entry to retrieve. This is treated as a greater-than-or-equal lookup.","inlinecomment":" \t &apos; Key value for the first entry to retrieve. This is treated as a greater-than-or-equal lookup.","parentclassname":"GetListEntriesArgs","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Set"]},{"label":"StartsWith","comment":"A character combination to perform a partial match to identify a starting point. The character combination will be applied to the &amp;quot;column&amp;quot; and &amp;quot;direction&amp;quot; passed in the query string. This cannot be combined with the &amp;quot;keys&amp;quot; parameter, i.e. you cannot filter on keys and startwith within that key.","valuetype":"String","filenamebase":"StartsWith_Method","fqnprefix":"DrapiVSE.GetListEntriesArgs","qn":"Set.StartsWith","codesample":"","signaturecode":260,"instancecode":256,"argumentsuffix":"","signature":"Property Set StartsWith As String","modifiers":"Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;A character combination to perform a partial match to identify a starting point. The character combination will be applied to the &amp;quot;column&amp;quot; and &amp;quot;direction&amp;quot; passed in the query string. This cannot be combined with the &amp;quot;keys&amp;quot; parameter, i.e. you cannot filter on keys and startwith within that key.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"A character combination to perform a partial match to identify a starting point. The character combination will be applied to the &amp;quot;column&amp;quot; and &amp;quot;direction&amp;quot; passed in the query string. This cannot be combined with the &amp;quot;keys&amp;quot; parameter, i.e. you cannot filter on keys and startwith within that key.","inlinecomment":" \t &apos; A character combination to perform a partial match to identify a starting point. The character combination will be applied to the &amp;quot;column&amp;quot; and &amp;quot;direction&amp;quot; passed in the query string. This cannot be combined with the &amp;quot;keys&amp;quot; parameter, i.e. you cannot filter on keys and startwith within that key.","parentclassname":"GetListEntriesArgs","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Set"]},{"label":"UnreadOnly","comment":"Retrieve only unread entries. Cannot be combined with documents=true, documentsOnly=true, or methods to select or query documents","valuetype":"Boolean","filenamebase":"UnreadOnly_Method","fqnprefix":"DrapiVSE.GetListEntriesArgs","qn":"Set.UnreadOnly","codesample":"","signaturecode":260,"instancecode":256,"argumentsuffix":"","signature":"Property Set UnreadOnly As Boolean","modifiers":"Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Retrieve only unread entries. Cannot be combined with documents=true, documentsOnly=true, or methods to select or query documents&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Retrieve only unread entries. Cannot be combined with documents=true, documentsOnly=true, or methods to select or query documents","inlinecomment":" \t &apos; Retrieve only unread entries. Cannot be combined with documents=true, documentsOnly=true, or methods to select or query documents","parentclassname":"GetListEntriesArgs","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Set"]},{"label":"UntilKey","comment":"Key value to stop traversal when used in combination with startKey. This is treated as a greater-than-or-equal lookup and represents the first value to not return","valuetype":"String","filenamebase":"UntilKey_Method","fqnprefix":"DrapiVSE.GetListEntriesArgs","qn":"Set.UntilKey","codesample":"","signaturecode":260,"instancecode":256,"argumentsuffix":"","signature":"Property Set UntilKey As String","modifiers":"Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Key value to stop traversal when used in combination with startKey. This is treated as a greater-than-or-equal lookup and represents the first value to not return&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Key value to stop traversal when used in combination with startKey. This is treated as a greater-than-or-equal lookup and represents the first value to not return","inlinecomment":" \t &apos; Key value to stop traversal when used in combination with startKey. This is treated as a greater-than-or-equal lookup and represents the first value to not return","parentclassname":"GetListEntriesArgs","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Set"]}]}], "platforms":["LINUX","W64"]}]}
