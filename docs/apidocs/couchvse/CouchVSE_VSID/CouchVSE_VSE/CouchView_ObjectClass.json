{"classname":"CouchView","comment":"Represents a view within a CouchDatabase \n \nCreation - Use the CouchDatabase.CreateView() method \nRetrieval - Use the CouchDatabase.GetViewByID() method \nDeletion - Use the CouchDatabase.DeleteView() method ","valuetype":"","filenamebase":"CouchView_ObjectClass","fqnprefix":"CouchVSE","qn":"CouchView","codesample":"","signaturecode":3072,"instancecode":1024,"classtype":"Base","colitemtype":"Boolean","colindextype":"Boolean","classattribnewnotexposed":"UnexposedNew","projectid":"85258A0A005BFF7B85258714004ECA02","version":3,"classid":"85258A0A005BFF7B8525871500382E6B","lsxclassid":6,"signature":"Public Class CouchView","modifiers":"Public","classname":"CouchView","parentclassname":"None","constructorsignature":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Represents a view within a CouchDatabase &lt;br /&gt; &lt;br /&gt;Creation - Use the CouchDatabase.CreateView() method &lt;br /&gt;Retrieval - Use the CouchDatabase.GetViewByID() method &lt;br /&gt;Deletion - Use the CouchDatabase.DeleteView() method &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Represents a view within a CouchDatabase &lt;br /&gt; &lt;br /&gt;Creation - Use the CouchDatabase.CreateView() method &lt;br /&gt;Retrieval - Use the CouchDatabase.GetViewByID() method &lt;br /&gt;Deletion - Use the CouchDatabase.DeleteView() method ","inlinecomment":" \t &apos; Represents a view within a CouchDatabase \n \nCreation - Use the CouchDatabase.CreateView() method \nRetrieval - Use the CouchDatabase.GetViewByID() method \nDeletion - Use the CouchDatabase.DeleteView() method ","codesamplehtml":"", "methods":[{"label":"GetRowArray","comment":"Allows iteration through a CouchView, returning a selected set of rows of information. \n  \nReturns String Array, with each element contining the JSON for the specific row it represents. ","valuetype":"String","filenamebase":"GetRowArray_Method","fqnprefix":"CouchVSE.CouchView","qn":"GetRowArray","codesample":"&amp;apos; Sample code assumes previously instantiated view as CouchView object \n \nDim rows As Variant \n \nrows = view.getRowArray(0, 10)\nPrint |rows: | &amp;amp; join(rows, |, |) \n \n%REM sample view contains 3 documents, Print statement returns: \n\trows: {&amp;quot;id&amp;quot;:&amp;quot;Doc 3&amp;quot;,&amp;quot;key&amp;quot;:&amp;quot;boiled water&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;Bob.3&amp;quot;}, {&amp;quot;id&amp;quot;:&amp;quot;Doc 2&amp;quot;,&amp;quot;key&amp;quot;:&amp;quot;nutella/jelly&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;Bob.2&amp;quot;}, {&amp;quot;id&amp;quot;:&amp;quot;Doc 1&amp;quot;,&amp;quot;key&amp;quot;:&amp;quot;pasta&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;Bob.1&amp;quot;}\n%END REM ","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(Skip As Integer, Limit As Integer)","signature":"Function GetRowArray(Skip As Integer, Limit As Integer) As String Array","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Allows iteration through a CouchView, returning a selected set of rows of information. &lt;br /&gt;  &lt;br /&gt;Returns String Array, with each element contining the JSON for the specific row it represents. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Allows iteration through a CouchView, returning a selected set of rows of information. &lt;br /&gt;  &lt;br /&gt;Returns String Array, with each element contining the JSON for the specific row it represents. ","inlinecomment":" \t &apos; Allows iteration through a CouchView, returning a selected set of rows of information. \n  \nReturns String Array, with each element contining the JSON for the specific row it represents. ","parentclassname":"CouchView","codesamplehtml":"&amp;apos; Sample code assumes previously instantiated view as CouchView object &lt;br /&gt; &lt;br /&gt;Dim rows As Variant &lt;br /&gt; &lt;br /&gt;rows = view.getRowArray(0, 10)&lt;br /&gt;Print |rows: | &amp;amp; join(rows, |, |) &lt;br /&gt; &lt;br /&gt;%REM sample view contains 3 documents, Print statement returns: &lt;br /&gt;\trows: {&amp;quot;id&amp;quot;:&amp;quot;Doc 3&amp;quot;,&amp;quot;key&amp;quot;:&amp;quot;boiled water&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;Bob.3&amp;quot;}, {&amp;quot;id&amp;quot;:&amp;quot;Doc 2&amp;quot;,&amp;quot;key&amp;quot;:&amp;quot;nutella/jelly&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;Bob.2&amp;quot;}, {&amp;quot;id&amp;quot;:&amp;quot;Doc 1&amp;quot;,&amp;quot;key&amp;quot;:&amp;quot;pasta&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;Bob.1&amp;quot;}&lt;br /&gt;%END REM ", "attributes":["Array"], "signatureelements":["Function"], "arguments":[{"label":"Skip","comment":"Number of rows to SKIP prior to retrieving requested rows. ","valuetype":"Integer-Unsigned","filenamebase":"Skip_ValuedElement","fqnprefix":"CouchVSECouchViewGetRowArray","qn":"Skip","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Number of rows to SKIP prior to retrieving requested rows. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Number of rows to SKIP prior to retrieving requested rows. ","inlinecomment":" \t &apos; Number of rows to SKIP prior to retrieving requested rows. "},{"label":"Limit","comment":"Maximum number of rows to return. ","valuetype":"Integer-Unsigned","filenamebase":"Limit_ValuedElement","fqnprefix":"CouchVSECouchViewGetRowArray","qn":"Limit","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Maximum number of rows to return. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Maximum number of rows to return. ","inlinecomment":" \t &apos; Maximum number of rows to return. ", "attributes":["BY_VAL"]}]},{"label":"GetRowsByKey","comment":"Retrieves a specific subset of rows from the CouchView.  \n \nReturns a JSON String containing the content of all rows in the result set.","valuetype":"String","filenamebase":"GetRowsByKey_Method","fqnprefix":"CouchVSE.CouchView","qn":"GetRowsByKey","codesample":"&amp;apos; Sample code assumes previously instantiated view as CouchView object \n \nDim rows As String \n \nrows = view.getRowsByKey(&amp;quot;boiled water&amp;quot;, &amp;quot;nutella/jelly&amp;quot;, 10)\nPrint |rows: | &amp;amp; rows \n \n%REM sample view contains 3 documents, but only 2 match the specified keys, Print statement returns: \n\trows: {&amp;quot;total_rows&amp;quot;:3,&amp;quot;offset&amp;quot;:0,&amp;quot;rows&amp;quot;:[{&amp;quot;id&amp;quot;:&amp;quot;Doc 3&amp;quot;,&amp;quot;key&amp;quot;:&amp;quot;boiled water&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;Bob.3&amp;quot;},{&amp;quot;id&amp;quot;:&amp;quot;Doc 2&amp;quot;,&amp;quot;key&amp;quot;:&amp;quot;nutella/jelly&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;Bob.2&amp;quot;}]}\n%END REM ","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(StartKey As String, EndKey As String, Limit As Integer)","signature":"Function GetRowsByKey(StartKey As String, EndKey As String, Limit As Integer) As String","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Retrieves a specific subset of rows from the CouchView.  &lt;br /&gt; &lt;br /&gt;Returns a JSON String containing the content of all rows in the result set.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Retrieves a specific subset of rows from the CouchView.  &lt;br /&gt; &lt;br /&gt;Returns a JSON String containing the content of all rows in the result set.","inlinecomment":" \t &apos; Retrieves a specific subset of rows from the CouchView.  \n \nReturns a JSON String containing the content of all rows in the result set.","parentclassname":"CouchView","codesamplehtml":"&amp;apos; Sample code assumes previously instantiated view as CouchView object &lt;br /&gt; &lt;br /&gt;Dim rows As String &lt;br /&gt; &lt;br /&gt;rows = view.getRowsByKey(&amp;quot;boiled water&amp;quot;, &amp;quot;nutella/jelly&amp;quot;, 10)&lt;br /&gt;Print |rows: | &amp;amp; rows &lt;br /&gt; &lt;br /&gt;%REM sample view contains 3 documents, but only 2 match the specified keys, Print statement returns: &lt;br /&gt;\trows: {&amp;quot;total_rows&amp;quot;:3,&amp;quot;offset&amp;quot;:0,&amp;quot;rows&amp;quot;:[{&amp;quot;id&amp;quot;:&amp;quot;Doc 3&amp;quot;,&amp;quot;key&amp;quot;:&amp;quot;boiled water&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;Bob.3&amp;quot;},{&amp;quot;id&amp;quot;:&amp;quot;Doc 2&amp;quot;,&amp;quot;key&amp;quot;:&amp;quot;nutella/jelly&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;Bob.2&amp;quot;}]}&lt;br /&gt;%END REM ", "signatureelements":["Function"], "arguments":[{"label":"StartKey","comment":"Key specifying the FIRST row to retrieve","valuetype":"String","filenamebase":"StartKey_ValuedElement","fqnprefix":"CouchVSECouchViewGetRowsByKey","qn":"StartKey","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Key specifying the FIRST row to retrieve&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Key specifying the FIRST row to retrieve","inlinecomment":" \t &apos; Key specifying the FIRST row to retrieve"},{"label":"EndKey","comment":"Key specifying the LAST row to retrieve","valuetype":"String","filenamebase":"EndKey_ValuedElement","fqnprefix":"CouchVSECouchViewGetRowsByKey","qn":"EndKey","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Key specifying the LAST row to retrieve&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Key specifying the LAST row to retrieve","inlinecomment":" \t &apos; Key specifying the LAST row to retrieve"},{"label":"Limit","comment":"Maximum number of rows to retrieve","valuetype":"Integer-Unsigned","filenamebase":"Limit_ValuedElement","fqnprefix":"CouchVSECouchViewGetRowsByKey","qn":"Limit","argumentindex":3,"optionalvalue":25,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Maximum number of rows to retrieve&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Maximum number of rows to retrieve","inlinecomment":" \t &apos; Maximum number of rows to retrieve", "attributes":["OPTIONAL","BY_VAL"]}]},{"label":"GetSomeRows","comment":"Allows iteration through a CouchView, returning a selected set of rows of information, includes meta information about the retrieved content (such as offset and number of rows in the view).   \n \nReturns a JSON String containing the content of all rows in the result set.","valuetype":"String","filenamebase":"GetSomeRows_Method","fqnprefix":"CouchVSE.CouchView","qn":"GetSomeRows","codesample":"&amp;apos; Sample code assumes previously instantiated view as CouchView object \n \nDim rows As String \n \nrows = view.getSomeRows(0, 10)\nPrint |rows: | &amp;amp; rows \n \n%REM sample view contains 3 documents, Print statement returns: \n\trows: {&amp;quot;total_rows&amp;quot;:3,&amp;quot;offset&amp;quot;:0,&amp;quot;rows&amp;quot;:[{&amp;quot;id&amp;quot;:&amp;quot;Doc 3&amp;quot;,&amp;quot;key&amp;quot;:&amp;quot;boiled water&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;Bob.3&amp;quot;},{&amp;quot;id&amp;quot;:&amp;quot;Doc 2&amp;quot;,&amp;quot;key&amp;quot;:&amp;quot;nutella/jelly&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;Bob.2&amp;quot;},{&amp;quot;id&amp;quot;:&amp;quot;Doc 1&amp;quot;,&amp;quot;key&amp;quot;:&amp;quot;pasta&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;Bob.1&amp;quot;}]}\n%END REM ","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(Skip As Integer, Limit As Integer)","signature":"Function GetSomeRows(Skip As Integer, Limit As Integer) As String","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Allows iteration through a CouchView, returning a selected set of rows of information, includes meta information about the retrieved content (such as offset and number of rows in the view).   &lt;br /&gt; &lt;br /&gt;Returns a JSON String containing the content of all rows in the result set.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Allows iteration through a CouchView, returning a selected set of rows of information, includes meta information about the retrieved content (such as offset and number of rows in the view).   &lt;br /&gt; &lt;br /&gt;Returns a JSON String containing the content of all rows in the result set.","inlinecomment":" \t &apos; Allows iteration through a CouchView, returning a selected set of rows of information, includes meta information about the retrieved content (such as offset and number of rows in the view).   \n \nReturns a JSON String containing the content of all rows in the result set.","parentclassname":"CouchView","codesamplehtml":"&amp;apos; Sample code assumes previously instantiated view as CouchView object &lt;br /&gt; &lt;br /&gt;Dim rows As String &lt;br /&gt; &lt;br /&gt;rows = view.getSomeRows(0, 10)&lt;br /&gt;Print |rows: | &amp;amp; rows &lt;br /&gt; &lt;br /&gt;%REM sample view contains 3 documents, Print statement returns: &lt;br /&gt;\trows: {&amp;quot;total_rows&amp;quot;:3,&amp;quot;offset&amp;quot;:0,&amp;quot;rows&amp;quot;:[{&amp;quot;id&amp;quot;:&amp;quot;Doc 3&amp;quot;,&amp;quot;key&amp;quot;:&amp;quot;boiled water&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;Bob.3&amp;quot;},{&amp;quot;id&amp;quot;:&amp;quot;Doc 2&amp;quot;,&amp;quot;key&amp;quot;:&amp;quot;nutella/jelly&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;Bob.2&amp;quot;},{&amp;quot;id&amp;quot;:&amp;quot;Doc 1&amp;quot;,&amp;quot;key&amp;quot;:&amp;quot;pasta&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;Bob.1&amp;quot;}]}&lt;br /&gt;%END REM ", "signatureelements":["Function"], "arguments":[{"label":"Skip","comment":"Number of rows to SKIP prior to retrieving requested rows. ","valuetype":"Integer-Unsigned","filenamebase":"Skip_ValuedElement","fqnprefix":"CouchVSECouchViewGetSomeRows","qn":"Skip","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Number of rows to SKIP prior to retrieving requested rows. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Number of rows to SKIP prior to retrieving requested rows. ","inlinecomment":" \t &apos; Number of rows to SKIP prior to retrieving requested rows. ", "attributes":["BY_VAL"]},{"label":"Limit","comment":"Maximum number of rows to return. ","valuetype":"Integer-Unsigned","filenamebase":"Limit_ValuedElement","fqnprefix":"CouchVSECouchViewGetSomeRows","qn":"Limit","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Maximum number of rows to return. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Maximum number of rows to return. ","inlinecomment":" \t &apos; Maximum number of rows to return. ", "attributes":["BY_VAL"]}]},{"label":"GetViewInfo","comment":"Gets JSON information about the CouchView. ","valuetype":"String","filenamebase":"GetViewInfo_Method","fqnprefix":"CouchVSE.CouchView","qn":"GetViewInfo","codesample":"Print |view info:| &amp;amp; view.getViewInfo()","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"()","signature":"Function GetViewInfo() As String","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Gets JSON information about the CouchView. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Gets JSON information about the CouchView. ","inlinecomment":" \t &apos; Gets JSON information about the CouchView. ","parentclassname":"CouchView","codesamplehtml":"Print |view info:| &amp;amp; view.getViewInfo()", "signatureelements":["Function"]},{"label":"Query","comment":"NOT IMPLEMENTED","valuetype":"CouchDocument","filenamebase":"Query_Method","fqnprefix":"CouchVSE.CouchView","qn":"Query","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(query As String)","signature":"Function Query(query As String) As CouchDocument Array","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;NOT IMPLEMENTED&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"NOT IMPLEMENTED","inlinecomment":" \t &apos; NOT IMPLEMENTED","parentclassname":"CouchView","codesamplehtml":"", "attributes":["Array"], "signatureelements":["Function"], "arguments":[{"label":"query","comment":"","valuetype":"String","filenamebase":"query_ValuedElement","fqnprefix":"CouchVSECouchViewQuery","qn":"query","argumentindex":1,"commentblock":"","commenthtml":"","inlinecomment":""}]},{"label":"Save","comment":"Saves the CouchView object to the backing Apache CouchDB database.","valuetype":"Boolean","filenamebase":"Save_Method","fqnprefix":"CouchVSE.CouchView","qn":"Save","codesample":"call view.Save() ","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"()","signature":"Function Save() As Boolean","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Saves the CouchView object to the backing Apache CouchDB database.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Saves the CouchView object to the backing Apache CouchDB database.","inlinecomment":" \t &apos; Saves the CouchView object to the backing Apache CouchDB database.","parentclassname":"CouchView","codesamplehtml":"call view.Save() ", "signatureelements":["Function"]},{"label":"Filters","comment":"NOT IMPLEMENTED","valuetype":"String","filenamebase":"Filters_Method","fqnprefix":"CouchVSE.CouchView","qn":"Get.Filters","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get Filters As String Array","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;NOT IMPLEMENTED&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"NOT IMPLEMENTED","inlinecomment":" \t &apos; NOT IMPLEMENTED","parentclassname":"CouchView","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST","Array"], "signatureelements":["Property","Get"]},{"label":"ID","comment":"ID that uniquely identifes the CouchView within the CouchDatabase. ","valuetype":"String","filenamebase":"ID_Method","fqnprefix":"CouchVSE.CouchView","qn":"Get.ID","codesample":"&amp;apos; Sample code assumes previously created view As CouchView object \n \nPrint |view.ID: | &amp;amp; view.ID ","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get ID As String","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;ID that uniquely identifes the CouchView within the CouchDatabase. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"ID that uniquely identifes the CouchView within the CouchDatabase. ","inlinecomment":" \t &apos; ID that uniquely identifes the CouchView within the CouchDatabase. ","parentclassname":"CouchView","codesamplehtml":"&amp;apos; Sample code assumes previously created view As CouchView object &lt;br /&gt; &lt;br /&gt;Print |view.ID: | &amp;amp; view.ID ", "attributes":["READ_ONLY"], "signatureelements":["Property","Get"]},{"label":"JSONValue","comment":"JSON String containing information about the CouchView. ","valuetype":"String","filenamebase":"JSONValue_Method","fqnprefix":"CouchVSE.CouchView","qn":"Get.JSONValue","codesample":"&amp;apos; Sample code assumes previously created view as CouchView object\n \nPrint |view.JSONValue: | &amp;amp; view.JSONValue ","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get JSONValue As String","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;JSON String containing information about the CouchView. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"JSON String containing information about the CouchView. ","inlinecomment":" \t &apos; JSON String containing information about the CouchView. ","parentclassname":"CouchView","codesamplehtml":"&amp;apos; Sample code assumes previously created view as CouchView object&lt;br /&gt; &lt;br /&gt;Print |view.JSONValue: | &amp;amp; view.JSONValue ", "attributes":["SET_CONST"], "signatureelements":["Property","Get"]},{"label":"Language","comment":"Programming Language for the CouchView -  JavaScript","valuetype":"String","filenamebase":"Language_Method","fqnprefix":"CouchVSE.CouchView","qn":"Get.Language","codesample":"&amp;apos; Sample code assumes previously created view as CouchView object\n \nPrint |view.Language: | &amp;amp; view.Language","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get Language As String","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Programming Language for the CouchView -  JavaScript&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Programming Language for the CouchView -  JavaScript","inlinecomment":" \t &apos; Programming Language for the CouchView -  JavaScript","parentclassname":"CouchView","codesamplehtml":"&amp;apos; Sample code assumes previously created view as CouchView object&lt;br /&gt; &lt;br /&gt;Print |view.Language: | &amp;amp; view.Language", "attributes":["READ_ONLY"], "signatureelements":["Property","Get"]},{"label":"MapFunction","comment":"Javascript code defining view selection and columns for the object.  Refer to Apache CouchDB Documentation","valuetype":"String","filenamebase":"MapFunction_Method","fqnprefix":"CouchVSE.CouchView","qn":"Get.MapFunction","codesample":"&amp;apos; Sample code assumes previously created view as CouchView object\n \nPrint |view.MapFunction: | &amp;amp; view.MapFunction","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get MapFunction As String","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Javascript code defining view selection and columns for the object.  Refer to Apache CouchDB Documentation&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Javascript code defining view selection and columns for the object.  Refer to Apache CouchDB Documentation","inlinecomment":" \t &apos; Javascript code defining view selection and columns for the object.  Refer to Apache CouchDB Documentation","parentclassname":"CouchView","codesamplehtml":"&amp;apos; Sample code assumes previously created view as CouchView object&lt;br /&gt; &lt;br /&gt;Print |view.MapFunction: | &amp;amp; view.MapFunction", "attributes":["SET_CONST"], "signatureelements":["Property","Get"]},{"label":"ReduceFunction","comment":"Javascript code defining map reducing for the object.  Refer to Apache CouchDB Documentation","valuetype":"String","filenamebase":"ReduceFunction_Method","fqnprefix":"CouchVSE.CouchView","qn":"Get.ReduceFunction","codesample":"&amp;apos; Sample code assumes previously created view as CouchView object\n \nPrint |view.ReduceFunction: | &amp;amp; view.ReduceFunction","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get ReduceFunction As String","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Javascript code defining map reducing for the object.  Refer to Apache CouchDB Documentation&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Javascript code defining map reducing for the object.  Refer to Apache CouchDB Documentation","inlinecomment":" \t &apos; Javascript code defining map reducing for the object.  Refer to Apache CouchDB Documentation","parentclassname":"CouchView","codesamplehtml":"&amp;apos; Sample code assumes previously created view as CouchView object&lt;br /&gt; &lt;br /&gt;Print |view.ReduceFunction: | &amp;amp; view.ReduceFunction", "attributes":["SET_CONST"], "signatureelements":["Property","Get"]},{"label":"Revision","comment":"Unique code representing the revision value of the on-disk CouchView . This value is composed of 2 parts delimited by a hyphen.  This value is generated by Apache CouchDB itself, and if officially &amp;quot;opaque&amp;quot; - other than it is unique. \n  \nBehavior Notes:\n1) This is not set until the CouchView has been saved. ","valuetype":"String","filenamebase":"Revision_Method","fqnprefix":"CouchVSE.CouchView","qn":"Get.Revision","codesample":"&amp;apos; Sample code assumes previously created view as CouchView object\n \nPrint |view.Revision: | &amp;amp; view.Revision","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get Revision As String","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Unique code representing the revision value of the on-disk CouchView . This value is composed of 2 parts delimited by a hyphen.  This value is generated by Apache CouchDB itself, and if officially &amp;quot;opaque&amp;quot; - other than it is unique. &lt;br /&gt;  &lt;br /&gt;Behavior Notes:&lt;br /&gt;1) This is not set until the CouchView has been saved. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Unique code representing the revision value of the on-disk CouchView . This value is composed of 2 parts delimited by a hyphen.  This value is generated by Apache CouchDB itself, and if officially &amp;quot;opaque&amp;quot; - other than it is unique. &lt;br /&gt;  &lt;br /&gt;Behavior Notes:&lt;br /&gt;1) This is not set until the CouchView has been saved. ","inlinecomment":" \t &apos; Unique code representing the revision value of the on-disk CouchView . This value is composed of 2 parts delimited by a hyphen.  This value is generated by Apache CouchDB itself, and if officially &amp;quot;opaque&amp;quot; - other than it is unique. \n  \nBehavior Notes:\n1) This is not set until the CouchView has been saved. ","parentclassname":"CouchView","codesamplehtml":"&amp;apos; Sample code assumes previously created view as CouchView object&lt;br /&gt; &lt;br /&gt;Print |view.Revision: | &amp;amp; view.Revision", "attributes":["READ_ONLY","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"Filters","comment":"NOT IMPLEMENTED","valuetype":"String","filenamebase":"Filters_Method","fqnprefix":"CouchVSE.CouchView","qn":"Set.Filters","codesample":"","signaturecode":260,"instancecode":256,"argumentsuffix":"","signature":"Property Set Filters As String Array","modifiers":"Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;NOT IMPLEMENTED&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"NOT IMPLEMENTED","inlinecomment":" \t &apos; NOT IMPLEMENTED","parentclassname":"CouchView","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST","Array"], "signatureelements":["Property","Set"]},{"label":"JSONValue","comment":"JSON String containing information about the CouchView. ","valuetype":"String","filenamebase":"JSONValue_Method","fqnprefix":"CouchVSE.CouchView","qn":"Set.JSONValue","codesample":"&amp;apos; Sample code assumes previously created view as CouchView object\n \nPrint |view.JSONValue: | &amp;amp; view.JSONValue ","signaturecode":260,"instancecode":256,"argumentsuffix":"","signature":"Property Set JSONValue As String","modifiers":"Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;JSON String containing information about the CouchView. &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"JSON String containing information about the CouchView. ","inlinecomment":" \t &apos; JSON String containing information about the CouchView. ","parentclassname":"CouchView","codesamplehtml":"&amp;apos; Sample code assumes previously created view as CouchView object&lt;br /&gt; &lt;br /&gt;Print |view.JSONValue: | &amp;amp; view.JSONValue ", "attributes":["SET_CONST"], "signatureelements":["Property","Set"]},{"label":"MapFunction","comment":"Javascript code defining view selection and columns for the object.  Refer to Apache CouchDB Documentation","valuetype":"String","filenamebase":"MapFunction_Method","fqnprefix":"CouchVSE.CouchView","qn":"Set.MapFunction","codesample":"&amp;apos; Sample code assumes previously created view as CouchView object\n \nPrint |view.MapFunction: | &amp;amp; view.MapFunction","signaturecode":260,"instancecode":256,"argumentsuffix":"","signature":"Property Set MapFunction As String","modifiers":"Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Javascript code defining view selection and columns for the object.  Refer to Apache CouchDB Documentation&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Javascript code defining view selection and columns for the object.  Refer to Apache CouchDB Documentation","inlinecomment":" \t &apos; Javascript code defining view selection and columns for the object.  Refer to Apache CouchDB Documentation","parentclassname":"CouchView","codesamplehtml":"&amp;apos; Sample code assumes previously created view as CouchView object&lt;br /&gt; &lt;br /&gt;Print |view.MapFunction: | &amp;amp; view.MapFunction", "attributes":["SET_CONST"], "signatureelements":["Property","Set"]},{"label":"ReduceFunction","comment":"Javascript code defining map reducing for the object.  Refer to Apache CouchDB Documentation","valuetype":"String","filenamebase":"ReduceFunction_Method","fqnprefix":"CouchVSE.CouchView","qn":"Set.ReduceFunction","codesample":"&amp;apos; Sample code assumes previously created view as CouchView object\n \nPrint |view.ReduceFunction: | &amp;amp; view.ReduceFunction","signaturecode":260,"instancecode":256,"argumentsuffix":"","signature":"Property Set ReduceFunction As String","modifiers":"Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Javascript code defining map reducing for the object.  Refer to Apache CouchDB Documentation&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Javascript code defining map reducing for the object.  Refer to Apache CouchDB Documentation","inlinecomment":" \t &apos; Javascript code defining map reducing for the object.  Refer to Apache CouchDB Documentation","parentclassname":"CouchView","codesamplehtml":"&amp;apos; Sample code assumes previously created view as CouchView object&lt;br /&gt; &lt;br /&gt;Print |view.ReduceFunction: | &amp;amp; view.ReduceFunction", "attributes":["SET_CONST"], "signatureelements":["Property","Set"]}]}
