{"classname":"Completion","comment":"Class for handling completion of async web file requests.","valuetype":"","filenamebase":"Completion_ObjectClass","fqnprefix":"WebVSE","qn":"Completion","codesample":"","signaturecode":3072,"instancecode":1024,"classtype":"Base","colitemtype":"Boolean","colindextype":"Boolean","classattribnewnotexposed":"UnexposedNew","projectid":"85258A080053C19485258833005FD0D9","version":3,"classid":"85258A080053C1948525886C003F8C89","lsxclassid":3,"signature":"Public Class Completion","modifiers":"Public","classname":"Completion","parentclassname":"None","constructorsignature":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Class for handling completion of async web file requests.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Class for handling completion of async web file requests.","inlinecomment":" \t &apos; Class for handling completion of async web file requests.","codesamplehtml":"", "methods":[{"label":"IsComplete","comment":"Whether or not the upload/download is complete, with an optional number of seconds to wait.","valuetype":"Boolean","filenamebase":"IsComplete_Method","fqnprefix":"WebVSE.Completion","qn":"IsComplete","codesample":"%REM\n    The following code downloads two icons from a locally Domino server at the same time, waiting for them to complete and printing whether they were successful\n%END REM\nDim dominoServer as New WebServer()\nDim request as WebRequest\nDim arr(1) as Completion\nDim response as WebResponse\nDim i as Integer\nDim count as Integer\ndominoServer.hostUrl = &amp;quot;localhost&amp;quot;\nSet request = dominoServer.createRequest()\nrequest.target = &amp;quot;icons/vwicn001.gif&amp;quot;\nrequest.timeoutSeconds = 5\npath = CurDir &amp;amp; &amp;quot;vwicon1.gif&amp;quot;\nSet arr(0) = request.fileDownloadNoWait(path)\nSet request = dominoServer.createRequest()\nrequest.target = &amp;quot;icons/vwicn002.gif&amp;quot;\nrequest.timeoutSeconds = 5\npath = CurDir &amp;amp; &amp;quot;vwicon2.gif&amp;quot;\nSet arr(1) = request.fileDownloadNoWait(path)\nDo While count &amp;lt; 30\n    Sleep 2\n    count += 2\n    Print count\n    Print arr(0).isComplete\n    Print arr(1).isComplete\nLoop\nCall arr(0).wait()\nCall arr(1).wait()","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(WaitTime As Integer)","signature":"Function IsComplete(WaitTime As Integer) As Boolean","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Whether or not the upload/download is complete, with an optional number of seconds to wait.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Whether or not the upload/download is complete, with an optional number of seconds to wait.","inlinecomment":" \t &apos; Whether or not the upload/download is complete, with an optional number of seconds to wait.","parentclassname":"Completion","codesamplehtml":"%REM&lt;br /&gt;    The following code downloads two icons from a locally Domino server at the same time, waiting for them to complete and printing whether they were successful&lt;br /&gt;%END REM&lt;br /&gt;Dim dominoServer as New WebServer()&lt;br /&gt;Dim request as WebRequest&lt;br /&gt;Dim arr(1) as Completion&lt;br /&gt;Dim response as WebResponse&lt;br /&gt;Dim i as Integer&lt;br /&gt;Dim count as Integer&lt;br /&gt;dominoServer.hostUrl = &amp;quot;localhost&amp;quot;&lt;br /&gt;Set request = dominoServer.createRequest()&lt;br /&gt;request.target = &amp;quot;icons/vwicn001.gif&amp;quot;&lt;br /&gt;request.timeoutSeconds = 5&lt;br /&gt;path = CurDir &amp;amp; &amp;quot;vwicon1.gif&amp;quot;&lt;br /&gt;Set arr(0) = request.fileDownloadNoWait(path)&lt;br /&gt;Set request = dominoServer.createRequest()&lt;br /&gt;request.target = &amp;quot;icons/vwicn002.gif&amp;quot;&lt;br /&gt;request.timeoutSeconds = 5&lt;br /&gt;path = CurDir &amp;amp; &amp;quot;vwicon2.gif&amp;quot;&lt;br /&gt;Set arr(1) = request.fileDownloadNoWait(path)&lt;br /&gt;Do While count &amp;lt; 30&lt;br /&gt;    Sleep 2&lt;br /&gt;    count += 2&lt;br /&gt;    Print count&lt;br /&gt;    Print arr(0).isComplete&lt;br /&gt;    Print arr(1).isComplete&lt;br /&gt;Loop&lt;br /&gt;Call arr(0).wait()&lt;br /&gt;Call arr(1).wait()", "signatureelements":["Function"], "arguments":[{"label":"WaitTime","comment":"Optional. Number of seconds to wait, defaulting to 5 if not set.","valuetype":"Integer-Unsigned","filenamebase":"WaitTime_ValuedElement","fqnprefix":"WebVSECompletionIsComplete","qn":"WaitTime","argumentindex":1,"optionalvalue":5,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Optional. Number of seconds to wait, defaulting to 5 if not set.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Optional. Number of seconds to wait, defaulting to 5 if not set.","inlinecomment":" \t &apos; Optional. Number of seconds to wait, defaulting to 5 if not set.", "attributes":["OPTIONAL","BY_VAL"]}]},{"label":"Wait","comment":"Waits for completion of the download / upload, taking an optional number of seconds to wait.","valuetype":"Boolean","filenamebase":"Wait_Method","fqnprefix":"WebVSE.Completion","qn":"Wait","codesample":"%REM\n    The following code downloads two icons from a locally Domino server at the same time, waiting for them to complete and printing whether they were successful\n%END REM\nDim dominoServer as New WebServer()\nDim request as WebRequest\nDim arr(1) as Completion\nDim response as WebResponse\nDim i as Integer\nDim count as Integer\ndominoServer.hostUrl = &amp;quot;localhost&amp;quot;\nSet request = dominoServer.createRequest()\nrequest.target = &amp;quot;icons/vwicn001.gif&amp;quot;\nrequest.timeoutSeconds = 5\npath = CurDir &amp;amp; &amp;quot;vwicon1.gif&amp;quot;\nSet arr(0) = request.fileDownloadNoWait(path)\nSet request = dominoServer.createRequest()\nrequest.target = &amp;quot;icons/vwicn002.gif&amp;quot;\nrequest.timeoutSeconds = 5\npath = CurDir &amp;amp; &amp;quot;vwicon2.gif&amp;quot;\nSet arr(1) = request.fileDownloadNoWait(path)\nDo While count &amp;lt; 30\n    Sleep 2\n    count += 2\n    Print count\n    Print arr(0).isComplete\n    Print arr(1).isComplete\nLoop\nCall arr(0).wait()\nCall arr(1).wait()","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(Timeout As Integer)","signature":"Function Wait(Timeout As Integer) As Boolean","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Waits for completion of the download / upload, taking an optional number of seconds to wait.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Waits for completion of the download / upload, taking an optional number of seconds to wait.","inlinecomment":" \t &apos; Waits for completion of the download / upload, taking an optional number of seconds to wait.","parentclassname":"Completion","codesamplehtml":"%REM&lt;br /&gt;    The following code downloads two icons from a locally Domino server at the same time, waiting for them to complete and printing whether they were successful&lt;br /&gt;%END REM&lt;br /&gt;Dim dominoServer as New WebServer()&lt;br /&gt;Dim request as WebRequest&lt;br /&gt;Dim arr(1) as Completion&lt;br /&gt;Dim response as WebResponse&lt;br /&gt;Dim i as Integer&lt;br /&gt;Dim count as Integer&lt;br /&gt;dominoServer.hostUrl = &amp;quot;localhost&amp;quot;&lt;br /&gt;Set request = dominoServer.createRequest()&lt;br /&gt;request.target = &amp;quot;icons/vwicn001.gif&amp;quot;&lt;br /&gt;request.timeoutSeconds = 5&lt;br /&gt;path = CurDir &amp;amp; &amp;quot;vwicon1.gif&amp;quot;&lt;br /&gt;Set arr(0) = request.fileDownloadNoWait(path)&lt;br /&gt;Set request = dominoServer.createRequest()&lt;br /&gt;request.target = &amp;quot;icons/vwicn002.gif&amp;quot;&lt;br /&gt;request.timeoutSeconds = 5&lt;br /&gt;path = CurDir &amp;amp; &amp;quot;vwicon2.gif&amp;quot;&lt;br /&gt;Set arr(1) = request.fileDownloadNoWait(path)&lt;br /&gt;Do While count &amp;lt; 30&lt;br /&gt;    Sleep 2&lt;br /&gt;    count += 2&lt;br /&gt;    Print count&lt;br /&gt;    Print arr(0).isComplete&lt;br /&gt;    Print arr(1).isComplete&lt;br /&gt;Loop&lt;br /&gt;Call arr(0).wait()&lt;br /&gt;Call arr(1).wait()", "signatureelements":["Function"], "arguments":[{"label":"Timeout","comment":"Optional. Number of seconds to wait and then timeout, defaulting to 30 seconds if not set","valuetype":"Integer-Unsigned","filenamebase":"Timeout_ValuedElement","fqnprefix":"WebVSECompletionWait","qn":"Timeout","argumentindex":1,"optionalvalue":30,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Optional. Number of seconds to wait and then timeout, defaulting to 30 seconds if not set&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Optional. Number of seconds to wait and then timeout, defaulting to 30 seconds if not set","inlinecomment":" \t &apos; Optional. Number of seconds to wait and then timeout, defaulting to 30 seconds if not set", "attributes":["OPTIONAL","BY_VAL"]}]},{"label":"CompletionCode","comment":"Response code for the associated WebResponse.","valuetype":"Integer-Signed","filenamebase":"CompletionCode_Method","fqnprefix":"WebVSE.Completion","qn":"Get.CompletionCode","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get CompletionCode As Integer","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Response code for the associated WebResponse.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Response code for the associated WebResponse.","inlinecomment":" \t &apos; Response code for the associated WebResponse.","parentclassname":"Completion","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Property","Get"]},{"label":"Response","comment":"The WebResponse that is the result of the download request.","valuetype":"WebResponse","filenamebase":"Response_Method","fqnprefix":"WebVSE.Completion","qn":"Get.Response","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get Response As WebResponse","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;The WebResponse that is the result of the download request.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"The WebResponse that is the result of the download request.","inlinecomment":" \t &apos; The WebResponse that is the result of the download request.","parentclassname":"Completion","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Property","Get"]}]}
