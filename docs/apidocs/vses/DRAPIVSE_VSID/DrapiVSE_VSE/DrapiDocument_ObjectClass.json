{"classname":"DrapiDocument","comment":"Represents a document as returned by DRAPI.","valuetype":"DrapiResponse","filenamebase":"DrapiDocument_ObjectClass","fqnprefix":"DrapiVSE","qn":"DrapiDocument","codesample":"","signaturecode":3072,"instancecode":1024,"parentclassname":"DrapiResponse","classtype":"Derived","classderivetype":"DrapiResponse","classattribnewnotexposed":"UnexposedNew","projectid":"1CE507407C8F5ECC85258C7E00690863","version":3,"classid":"53D1829CAFA2664A85258C8800717734","lsxclassid":1,"signature":"Public Class DrapiDocument As DrapiResponse","modifiers":"Public","classname":"DrapiDocument","constructorsignature":"Function New() As DrapiDocument","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Represents a document as returned by DRAPI.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Represents a document as returned by DRAPI.","inlinecomment":" \t &apos; Represents a document as returned by DRAPI.","codesamplehtml":"", "methods":[{"label":"DeleteDocument","comment":"Convenience method, equivalent to calling DrapiRequest.DeleteDocument.","valuetype":"DrapiResponse","filenamebase":"DeleteDocument_Method","fqnprefix":"DrapiVSE.DrapiDocument","qn":"DeleteDocument","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(Mode As String)","signature":"Function DeleteDocument(Mode As String) As DrapiResponse","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Convenience method, equivalent to calling DrapiRequest.DeleteDocument.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Convenience method, equivalent to calling DrapiRequest.DeleteDocument.","inlinecomment":" \t &apos; Convenience method, equivalent to calling DrapiRequest.DeleteDocument.","parentclassname":"DrapiDocument","codesamplehtml":"", "signatureelements":["Function"], "arguments":[{"label":"Mode","comment":"Mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only","valuetype":"String","filenamebase":"Mode_ValuedElement","fqnprefix":"DrapiVSEDrapiDocumentDeleteDocument","qn":"Mode","argumentindex":1,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only","inlinecomment":" \t &apos; Mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only", "attributes":["CONST","OPTIONAL"]}]},{"label":"New","comment":"","valuetype":"DrapiDocument","filenamebase":"New_Method","fqnprefix":"DrapiVSE.DrapiDocument","qn":"New","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"()","signature":"Function New() As DrapiDocument","modifiers":"","commentblock":"","commenthtml":"","inlinecomment":"","parentclassname":"DrapiDocument","codesamplehtml":"", "signatureelements":["Function"]},{"label":"Put","comment":"Convenience for saving changes to this document. Equivalent to KeepRequest.PutDocument with this document&amp;apos;s JsonBody as the body argument.","valuetype":"DrapiResponse","filenamebase":"Put_Method","fqnprefix":"DrapiVSE.DrapiDocument","qn":"Put","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(Mode As String, Revision As String, ParentUNID As String, MarkUnread As Boolean)","signature":"Function Put(Mode As String, Revision As String, ParentUNID As String, MarkUnread As Boolean) As DrapiResponse","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Convenience for saving changes to this document. Equivalent to KeepRequest.PutDocument with this document&amp;apos;s JsonBody as the body argument.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Convenience for saving changes to this document. Equivalent to KeepRequest.PutDocument with this document&amp;apos;s JsonBody as the body argument.","inlinecomment":" \t &apos; Convenience for saving changes to this document. Equivalent to KeepRequest.PutDocument with this document&amp;apos;s JsonBody as the body argument.","parentclassname":"DrapiDocument","codesamplehtml":"", "signatureelements":["Function"], "arguments":[{"label":"Mode","comment":"Mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only\nIf db config &amp;quot;requireRevisionToUpdate&amp;quot; is enabled, then revision is required when update document and only update document when revision version is right.","valuetype":"String","filenamebase":"Mode_ValuedElement","fqnprefix":"DrapiVSEDrapiDocumentPut","qn":"Mode","argumentindex":1,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only&lt;br /&gt;If db config &amp;quot;requireRevisionToUpdate&amp;quot; is enabled, then revision is required when update document and only update document when revision version is right.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only&lt;br /&gt;If db config &amp;quot;requireRevisionToUpdate&amp;quot; is enabled, then revision is required when update document and only update document when revision version is right.","inlinecomment":" \t &apos; Mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only\nIf db config &amp;quot;requireRevisionToUpdate&amp;quot; is enabled, then revision is required when update document and only update document when revision version is right.", "attributes":["CONST","OPTIONAL"]},{"label":"Revision","comment":"This field records the current revision version of document. It&amp;apos;s a 32-character hex-encoded string of date.\nIf db config &amp;quot;requireRevisionToUpdate&amp;quot; is enabled, then revision is required when update document and only update document when revision version is right.","valuetype":"String","filenamebase":"Revision_ValuedElement","fqnprefix":"DrapiVSEDrapiDocumentPut","qn":"Revision","argumentindex":2,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;This field records the current revision version of document. It&amp;apos;s a 32-character hex-encoded string of date.&lt;br /&gt;If db config &amp;quot;requireRevisionToUpdate&amp;quot; is enabled, then revision is required when update document and only update document when revision version is right.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"This field records the current revision version of document. It&amp;apos;s a 32-character hex-encoded string of date.&lt;br /&gt;If db config &amp;quot;requireRevisionToUpdate&amp;quot; is enabled, then revision is required when update document and only update document when revision version is right.","inlinecomment":" \t &apos; This field records the current revision version of document. It&amp;apos;s a 32-character hex-encoded string of date.\nIf db config &amp;quot;requireRevisionToUpdate&amp;quot; is enabled, then revision is required when update document and only update document when revision version is right.", "attributes":["CONST","OPTIONAL"]},{"label":"ParentUNID","comment":"UNID of an existing document, to make this a response document","valuetype":"String","filenamebase":"ParentUNID_ValuedElement","fqnprefix":"DrapiVSEDrapiDocumentPut","qn":"ParentUNID","argumentindex":3,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;UNID of an existing document, to make this a response document&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"UNID of an existing document, to make this a response document","inlinecomment":" \t &apos; UNID of an existing document, to make this a response document", "attributes":["CONST","OPTIONAL"]},{"label":"MarkUnread","comment":"Mark the document as unread by the current user when the operation completes.","valuetype":"Boolean","filenamebase":"MarkUnread_ValuedElement","fqnprefix":"DrapiVSEDrapiDocumentPut","qn":"MarkUnread","argumentindex":4,"optionalvalue":"LSXFalse","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Mark the document as unread by the current user when the operation completes.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Mark the document as unread by the current user when the operation completes.","inlinecomment":" \t &apos; Mark the document as unread by the current user when the operation completes.", "attributes":["CONST","OPTIONAL"]}]},{"label":"Refresh","comment":"Convenience method for calling DrapiRequest.GetDocument with the same arguments as this DrapiDocument was created with. Updates JsonBody, if applicable.","valuetype":"DrapiResponse","filenamebase":"Refresh_Method","fqnprefix":"DrapiVSE.DrapiDocument","qn":"Refresh","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(Mode As String, MarkRead As Boolean, MarkUnread As Boolean)","signature":"Function Refresh(Mode As String, MarkRead As Boolean, MarkUnread As Boolean) As DrapiResponse","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Convenience method for calling DrapiRequest.GetDocument with the same arguments as this DrapiDocument was created with. Updates JsonBody, if applicable.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Convenience method for calling DrapiRequest.GetDocument with the same arguments as this DrapiDocument was created with. Updates JsonBody, if applicable.","inlinecomment":" \t &apos; Convenience method for calling DrapiRequest.GetDocument with the same arguments as this DrapiDocument was created with. Updates JsonBody, if applicable.","parentclassname":"DrapiDocument","codesamplehtml":"", "signatureelements":["Function"], "arguments":[{"label":"Mode","comment":"mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only","valuetype":"String","filenamebase":"Mode_ValuedElement","fqnprefix":"DrapiVSEDrapiDocumentRefresh","qn":"Mode","argumentindex":1,"optionalvalue":"LIT_STR(&quot;&quot;)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only","inlinecomment":" \t &apos; mode to perform the document access in. Defaults to &amp;apos;default&amp;apos; if missing. All lowercase, no spaces, letters and numbers only", "attributes":["CONST","OPTIONAL"]},{"label":"MarkRead","comment":"Mark the document as read by the current user when the operation completes.","valuetype":"Boolean","filenamebase":"MarkRead_ValuedElement","fqnprefix":"DrapiVSEDrapiDocumentRefresh","qn":"MarkRead","argumentindex":2,"optionalvalue":"LSXFalse","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Mark the document as read by the current user when the operation completes.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Mark the document as read by the current user when the operation completes.","inlinecomment":" \t &apos; Mark the document as read by the current user when the operation completes.", "attributes":["CONST","OPTIONAL"]},{"label":"MarkUnread","comment":"Mark the document as unread by the current user when the operation completes.","valuetype":"Boolean","filenamebase":"MarkUnread_ValuedElement","fqnprefix":"DrapiVSEDrapiDocumentRefresh","qn":"MarkUnread","argumentindex":3,"optionalvalue":"LSXFalse","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Mark the document as unread by the current user when the operation completes.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Mark the document as unread by the current user when the operation completes.","inlinecomment":" \t &apos; Mark the document as unread by the current user when the operation completes.", "attributes":["CONST","OPTIONAL"]}]},{"label":"JsonValue","comment":"Raw JSON value representing the content of this document.","valuetype":"String","filenamebase":"JsonValue_Method","fqnprefix":"DrapiVSE.DrapiDocument","qn":"Get.JsonValue","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get JsonValue As String","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Raw JSON value representing the content of this document.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Raw JSON value representing the content of this document.","inlinecomment":" \t &apos; Raw JSON value representing the content of this document.","parentclassname":"DrapiDocument","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"Metadata","comment":"Meta data about the document, such as form name. In JSON format.","valuetype":"String","filenamebase":"Metadata_Method","fqnprefix":"DrapiVSE.DrapiDocument","qn":"Get.Metadata","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get Metadata As String","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Meta data about the document, such as form name. In JSON format.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Meta data about the document, such as form name. In JSON format.","inlinecomment":" \t &apos; Meta data about the document, such as form name. In JSON format.","parentclassname":"DrapiDocument","codesamplehtml":"", "attributes":["READ_ONLY","GET_CONST","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"ParentRequest","comment":"The DrapiRequest that created this DrapiDocument.","valuetype":"DrapiRequest","filenamebase":"ParentRequest_Method","fqnprefix":"DrapiVSE.DrapiDocument","qn":"Get.ParentRequest","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get ParentRequest As DrapiRequest","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;The DrapiRequest that created this DrapiDocument.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"The DrapiRequest that created this DrapiDocument.","inlinecomment":" \t &apos; The DrapiRequest that created this DrapiDocument.","parentclassname":"DrapiDocument","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Property","Get"]},{"label":"RichTextFormat","comment":"Format that rich test is stored as.","valuetype":"String","filenamebase":"RichTextFormat_Method","fqnprefix":"DrapiVSE.DrapiDocument","qn":"Get.RichTextFormat","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get RichTextFormat As String","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Format that rich test is stored as.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Format that rich test is stored as.","inlinecomment":" \t &apos; Format that rich test is stored as.","parentclassname":"DrapiDocument","codesamplehtml":"", "attributes":["READ_ONLY","GET_CONST","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"UNID","comment":"Universal ID of the document.","valuetype":"String","filenamebase":"UNID_Method","fqnprefix":"DrapiVSE.DrapiDocument","qn":"Get.UNID","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get UNID As String","modifiers":"Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Universal ID of the document.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Universal ID of the document.","inlinecomment":" \t &apos; Universal ID of the document.","parentclassname":"DrapiDocument","codesamplehtml":"", "attributes":["READ_ONLY","GET_CONST","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"JsonValue","comment":"Raw JSON value representing the content of this document.","valuetype":"String","filenamebase":"JsonValue_Method","fqnprefix":"DrapiVSE.DrapiDocument","qn":"Set.JsonValue","codesample":"","signaturecode":260,"instancecode":256,"argumentsuffix":"","signature":"Property Set JsonValue As String","modifiers":"Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Raw JSON value representing the content of this document.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Raw JSON value representing the content of this document.","inlinecomment":" \t &apos; Raw JSON value representing the content of this document.","parentclassname":"DrapiDocument","codesamplehtml":"", "attributes":["GET_CONST","SET_CONST"], "signatureelements":["Property","Set"]}]}
