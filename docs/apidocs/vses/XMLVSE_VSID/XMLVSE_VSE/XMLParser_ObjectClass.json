{"classname":"XMLParser","comment":"Class for parsing strings and files in XML.","valuetype":"","filenamebase":"XMLParser_ObjectClass","fqnprefix":"XMLVSE","qn":"XMLParser","codesample":"","signaturecode":3072,"instancecode":1024,"classtype":"Base","projectid":"195DB5718DD416A048258AB5004BB576","version":3,"classid":"001E09FC95A44FEE48258AB500523F7F","lsxclassid":3,"signature":"Public Class XMLParser","modifiers":"Public","classname":"XMLParser","parentclassname":"None","constructorsignature":"Function New() As XMLParser","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Class for parsing strings and files in XML.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Class for parsing strings and files in XML.","inlinecomment":" \t &apos; Class for parsing strings and files in XML.","codesamplehtml":"", "methods":[{"label":"GetRootXML","comment":"Returns the parsed XML as a XMLObject.","valuetype":"XMLObject","filenamebase":"GetRootXML_Method","fqnprefix":"XMLVSE.XMLParser","qn":"GetRootXML","codesample":"Dim parser as New XMLParser\nDIm object as New XMLObject\nDim helloWorld as String\nhelloWorld = &amp;quot;&amp;lt;Profile version=&amp;apos;1&amp;apos; publish=&amp;apos;2024&amp;apos;&amp;gt;&amp;lt;Employee&amp;gt;John Doe&amp;lt;/Employee&amp;gt;&amp;lt;/Profile&amp;gt;&amp;quot;\nCall parser.loadFromXML(helloWorld)\nSet object = parser.getRootXML()\nPrint object.toString(True)","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"()","signature":"Function GetRootXML() As XMLObject","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Returns the parsed XML as a XMLObject.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Returns the parsed XML as a XMLObject.","inlinecomment":" \t &apos; Returns the parsed XML as a XMLObject.","parentclassname":"XMLParser","codesamplehtml":"Dim parser as New XMLParser&lt;br /&gt;DIm object as New XMLObject&lt;br /&gt;Dim helloWorld as String&lt;br /&gt;helloWorld = &amp;quot;&amp;lt;Profile version=&amp;apos;1&amp;apos; publish=&amp;apos;2024&amp;apos;&amp;gt;&amp;lt;Employee&amp;gt;John Doe&amp;lt;/Employee&amp;gt;&amp;lt;/Profile&amp;gt;&amp;quot;&lt;br /&gt;Call parser.loadFromXML(helloWorld)&lt;br /&gt;Set object = parser.getRootXML()&lt;br /&gt;Print object.toString(True)", "signatureelements":["Function"]},{"label":"New","comment":"","valuetype":"XMLParser","filenamebase":"New_Method","fqnprefix":"XMLVSE.XMLParser","qn":"New","codesample":"","signaturecode":64,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"()","signature":"Function New() As XMLParser","modifiers":"","commentblock":"","commenthtml":"","inlinecomment":"","parentclassname":"XMLParser","codesamplehtml":"", "signatureelements":["Function"]},{"label":"ToString","comment":"Converts a parsed XML object to a string, pretty-printed with new lines or in a compact format.","valuetype":"String","filenamebase":"ToString_Method","fqnprefix":"XMLVSE.XMLParser","qn":"ToString","codesample":"Dim parser as New XMLParser\nDim helloWorld as String\nhelloWorld = &amp;quot;&amp;lt;Profile version=&amp;apos;1&amp;apos; publish=&amp;apos;2024&amp;apos;&amp;gt;&amp;lt;Employee&amp;gt;John Doe&amp;lt;/Employee&amp;gt;&amp;lt;/Profile&amp;gt;&amp;quot;\nCall parser.loadFromXML(helloWorld)\nPrint parser.toString(True)","signaturecode":64,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"(PrettyPrint As Boolean)","signature":"Function ToString(PrettyPrint As Boolean) As String","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Converts a parsed XML object to a string, pretty-printed with new lines or in a compact format.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Converts a parsed XML object to a string, pretty-printed with new lines or in a compact format.","inlinecomment":" \t &apos; Converts a parsed XML object to a string, pretty-printed with new lines or in a compact format.","parentclassname":"XMLParser","codesamplehtml":"Dim parser as New XMLParser&lt;br /&gt;Dim helloWorld as String&lt;br /&gt;helloWorld = &amp;quot;&amp;lt;Profile version=&amp;apos;1&amp;apos; publish=&amp;apos;2024&amp;apos;&amp;gt;&amp;lt;Employee&amp;gt;John Doe&amp;lt;/Employee&amp;gt;&amp;lt;/Profile&amp;gt;&amp;quot;&lt;br /&gt;Call parser.loadFromXML(helloWorld)&lt;br /&gt;Print parser.toString(True)", "signatureelements":["Function"], "arguments":[{"label":"PrettyPrint","comment":"Whether or not to pretty-print the XML ","valuetype":"Boolean","filenamebase":"PrettyPrint_ValuedElement","fqnprefix":"XMLVSEXMLParserToString","qn":"PrettyPrint","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Whether or not to pretty-print the XML &lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Whether or not to pretty-print the XML ","inlinecomment":" \t &apos; Whether or not to pretty-print the XML ", "attributes":["BY_VAL"]}]},{"label":"VSEVersion","comment":"","valuetype":"String","filenamebase":"VSEVersion_Method","fqnprefix":"XMLVSE.XMLParser","qn":"Get.VSEVersion","codesample":"","signaturecode":258,"instancecode":256,"argumentsuffix":"","signature":"Property Get VSEVersion As String","modifiers":"Get","commentblock":"","commenthtml":"","inlinecomment":"","parentclassname":"XMLParser","codesamplehtml":"", "attributes":["READ_ONLY","GET_CONST","SET_CONST"], "signatureelements":["Property","Get"]},{"label":"LoadFromFile","comment":"Reads the file from the provided filepath and parses it as XML.","valuetype":"XMLParser","filenamebase":"LoadFromFile_Method","fqnprefix":"XMLVSE.XMLParser","qn":"LoadFromFile","codesample":"DIm parser as New XMLParser\nCall parser.loadFromFile(&amp;quot;test.xml&amp;quot;)  \nPrint parser.toString(True)","signaturecode":32,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(FilePath As String)","signature":"Sub LoadFromFile(FilePath As String) As XMLParser","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Reads the file from the provided filepath and parses it as XML.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Reads the file from the provided filepath and parses it as XML.","inlinecomment":" \t &apos; Reads the file from the provided filepath and parses it as XML.","parentclassname":"XMLParser","codesamplehtml":"DIm parser as New XMLParser&lt;br /&gt;Call parser.loadFromFile(&amp;quot;test.xml&amp;quot;)  &lt;br /&gt;Print parser.toString(True)", "signatureelements":["Sub"], "arguments":[{"label":"FilePath","comment":"","valuetype":"String","filenamebase":"FilePath_ValuedElement","fqnprefix":"XMLVSEXMLParserLoadFromFile","qn":"FilePath","argumentindex":1,"commentblock":"","commenthtml":"","inlinecomment":""}]},{"label":"LoadFromXML","comment":"Reads the provided string and parses it as a XML","valuetype":"XMLParser","filenamebase":"LoadFromXML_Method","fqnprefix":"XMLVSE.XMLParser","qn":"LoadFromXML","codesample":"Dim parser as New XMLParser\nDim helloWorld as String\nhelloWorld = &amp;quot;&amp;lt;Profile version=&amp;apos;1&amp;apos; publish=&amp;apos;2024&amp;apos;&amp;gt;&amp;lt;Employee&amp;gt;John Doe&amp;lt;/Employee&amp;gt;&amp;lt;/Profile&amp;gt;&amp;quot;\nCall parser.loadFromXML(helloWorld)\nPrint parser.toString(True)","signaturecode":32,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(XML As String)","signature":"Sub LoadFromXML(XML As String) As XMLParser","modifiers":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Reads the provided string and parses it as a XML&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Reads the provided string and parses it as a XML","inlinecomment":" \t &apos; Reads the provided string and parses it as a XML","parentclassname":"XMLParser","codesamplehtml":"Dim parser as New XMLParser&lt;br /&gt;Dim helloWorld as String&lt;br /&gt;helloWorld = &amp;quot;&amp;lt;Profile version=&amp;apos;1&amp;apos; publish=&amp;apos;2024&amp;apos;&amp;gt;&amp;lt;Employee&amp;gt;John Doe&amp;lt;/Employee&amp;gt;&amp;lt;/Profile&amp;gt;&amp;quot;&lt;br /&gt;Call parser.loadFromXML(helloWorld)&lt;br /&gt;Print parser.toString(True)", "signatureelements":["Sub"], "arguments":[{"label":"XML","comment":"","valuetype":"String","filenamebase":"XML_ValuedElement","fqnprefix":"XMLVSEXMLParserLoadFromXML","qn":"XML","argumentindex":1,"commentblock":"","commenthtml":"","inlinecomment":""}]}]}
